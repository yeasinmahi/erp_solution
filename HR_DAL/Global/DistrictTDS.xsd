<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DistrictTDS" targetNamespace="http://tempuri.org/DistrictTDS.xsd" xmlns:mstns="http://tempuri.org/DistrictTDS.xsd" xmlns="http://tempuri.org/DistrictTDS.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="ERP_GlobalConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="ERP_GlobalConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.HR_DAL.Properties.Settings.GlobalReference.Default.ERP_GlobalConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SprGetDistrictListTableAdapter" GeneratorDataComponentClassName="SprGetDistrictListTableAdapter" Name="SprGetDistrictList" UserDataComponentName="SprGetDistrictListTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ERP_GlobalConnectionString (Settings)" DbObjectName="ERP_Global.dbo.sprGetDistrict" DbObjectType="StoredProcedure" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="SprGetDistrictList" GetMethodModifier="Public" GetMethodName="SprGetDistrictList" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="SprGetDistrictList" UserSourceName="SprGetDistrictList">
                <SelectCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                    <CommandText>dbo.sprGetDistrict</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="ReturnValue" ParameterName="@RETURN_VALUE" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="intDistrictID" DataSetColumn="intDistrictID" />
              <Mapping SourceColumn="intDivitionID" DataSetColumn="intDivitionID" />
              <Mapping SourceColumn="strDistrict" DataSetColumn="strDistrict" />
              <Mapping SourceColumn="ysnActive" DataSetColumn="ysnActive" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TblGlobalDistrictTableAdapter" GeneratorDataComponentClassName="TblGlobalDistrictTableAdapter" Name="TblGlobalDistrict" UserDataComponentName="TblGlobalDistrictTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ERP_GlobalConnectionString (Settings)" DbObjectName="ERP_Global.dbo.tblDistrict" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetDistrictListData" GetMethodModifier="Public" GetMethodName="GetDistrictListData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDistrictListData" UserSourceName="GetDistrictListData">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [tblDistrict] WHERE (([intDistrictID] = @Original_intDistrictID) AND ((@IsNull_strDistrict = 1 AND [strDistrict] IS NULL) OR ([strDistrict] = @Original_strDistrict)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_intDistrictID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="intDistrictID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_strDistrict" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="strDistrict" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_strDistrict" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="strDistrict" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [tblDistrict] ([strDistrict]) VALUES (@strDistrict);
SELECT intDistrictID, strDistrict FROM tblDistrict WHERE (intDistrictID = SCOPE_IDENTITY()) ORDER BY strDistrict</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@strDistrict" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="strDistrict" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT    intDistrictID, strDistrict FROM            tblDistrict where ysnActive=1 Order by strDistrict asc</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [tblDistrict] SET [strDistrict] = @strDistrict WHERE (([intDistrictID] = @Original_intDistrictID) AND ((@IsNull_strDistrict = 1 AND [strDistrict] IS NULL) OR ([strDistrict] = @Original_strDistrict)));
SELECT intDistrictID, strDistrict FROM tblDistrict WHERE (intDistrictID = @intDistrictID) ORDER BY strDistrict</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@strDistrict" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="strDistrict" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_intDistrictID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="intDistrictID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_strDistrict" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="strDistrict" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_strDistrict" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="strDistrict" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="intDistrictID" ColumnName="intDistrictID" DataSourceName="ERP_Global.dbo.tblDistrict" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@intDistrictID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="intDistrictID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="intDistrictID" DataSetColumn="intDistrictID" />
              <Mapping SourceColumn="strDistrict" DataSetColumn="strDistrict" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TblBankBranchNameTableAdapter" GeneratorDataComponentClassName="TblBankBranchNameTableAdapter" Name="TblBankBranchName" UserDataComponentName="TblBankBranchNameTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ERP_GlobalConnectionString (Settings)" DbObjectName="ERP_Global.dbo.tblBankBranchName" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetBankBranchData" GetMethodModifier="Public" GetMethodName="GetBankBranchData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetBankBranchData" UserSourceName="GetBankBranchData">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>Select brnch.intID, brnch.strBankBranchName From dbo.tblBankBranchName brnch INNER JOIN
dbo.tblBankInfo bnk ON brnch.intID = bnk.intID Where bnk.intBankID=@bnkid and bnk.intDistrictID=@distid
Order by brnch.strBankBranchName asc</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="bnkid" ColumnName="intBankID" DataSourceName="ERP_Global.dbo.tblBankInfo" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@bnkid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="intBankID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="distid" ColumnName="intDistrictID" DataSourceName="ERP_Global.dbo.tblBankInfo" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@distid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="intDistrictID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="intID" DataSetColumn="intID" />
              <Mapping SourceColumn="strBankBranchName" DataSetColumn="strBankBranchName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TblBankNameTableAdapter" GeneratorDataComponentClassName="TblBankNameTableAdapter" Name="TblBankName" UserDataComponentName="TblBankNameTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ERP_GlobalConnectionString (Settings)" DbObjectName="ERP_Global.dbo.tblBankName" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetBankListData" GetMethodModifier="Public" GetMethodName="GetBankListData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetBankListData" UserSourceName="GetBankListData">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [tblBankName] WHERE (([intID] = @Original_intID) AND ([strBankName] = @Original_strBankName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_intID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="intID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_strBankName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="strBankName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT    intID, strBankName FROM            tblBankName where ysnActive=1 Order by strBankName</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [tblBankName] SET [strBankName] = @strBankName WHERE (([intID] = @Original_intID) AND ([strBankName] = @Original_strBankName));
SELECT intID, strBankName FROM tblBankName WHERE (intID = @intID) ORDER BY strBankName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@strBankName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="strBankName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_intID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="intID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_strBankName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="strBankName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="intID" ColumnName="intID" DataSourceName="ERP_Global.dbo.tblBankName" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@intID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="intID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="intID" DataSetColumn="intID" />
              <Mapping SourceColumn="strBankName" DataSetColumn="strBankName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="QryBankInfoTableAdapter" GeneratorDataComponentClassName="QryBankInfoTableAdapter" Name="QryBankInfo" UserDataComponentName="QryBankInfoTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ERP_GlobalConnectionString (Settings)" DbObjectName="ERP_Global.dbo.qryBankInfo" DbObjectType="View" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetBankBranchData" GetMethodModifier="Public" GetMethodName="GetBankBranchData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetBankBranchData" UserSourceName="GetBankBranchData">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT      intBranchID, strBankBranchName
FROM            qryBankInfo
WHERE        (intBankID = @bnkid) AND (intDistrictID = @distid) and ysnActive=1</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="bnkid" ColumnName="intBankID" DataSourceName="ERP_Global.dbo.qryBankInfo" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@bnkid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="intBankID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="distid" ColumnName="intDistrictID" DataSourceName="ERP_Global.dbo.qryBankInfo" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@distid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="intDistrictID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="intBranchID" DataSetColumn="intBranchID" />
              <Mapping SourceColumn="strBankBranchName" DataSetColumn="strBankBranchName" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DistrictTDS" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="DistrictTDS" msprop:Generator_UserDSName="DistrictTDS">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="SprGetDistrictList" msprop:Generator_TableClassName="SprGetDistrictListDataTable" msprop:Generator_TableVarName="tableSprGetDistrictList" msprop:Generator_TablePropName="SprGetDistrictList" msprop:Generator_RowDeletingName="SprGetDistrictListRowDeleting" msprop:Generator_RowChangingName="SprGetDistrictListRowChanging" msprop:Generator_RowEvHandlerName="SprGetDistrictListRowChangeEventHandler" msprop:Generator_RowDeletedName="SprGetDistrictListRowDeleted" msprop:Generator_UserTableName="SprGetDistrictList" msprop:Generator_RowChangedName="SprGetDistrictListRowChanged" msprop:Generator_RowEvArgName="SprGetDistrictListRowChangeEvent" msprop:Generator_RowClassName="SprGetDistrictListRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="intDistrictID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnintDistrictID" msprop:Generator_ColumnPropNameInRow="intDistrictID" msprop:Generator_ColumnPropNameInTable="intDistrictIDColumn" msprop:Generator_UserColumnName="intDistrictID" type="xs:int" />
              <xs:element name="intDivitionID" msprop:Generator_ColumnVarNameInTable="columnintDivitionID" msprop:Generator_ColumnPropNameInRow="intDivitionID" msprop:Generator_ColumnPropNameInTable="intDivitionIDColumn" msprop:Generator_UserColumnName="intDivitionID" type="xs:int" minOccurs="0" />
              <xs:element name="strDistrict" msprop:Generator_ColumnVarNameInTable="columnstrDistrict" msprop:Generator_ColumnPropNameInRow="strDistrict" msprop:Generator_ColumnPropNameInTable="strDistrictColumn" msprop:Generator_UserColumnName="strDistrict" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="1000" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ysnActive" msprop:Generator_ColumnVarNameInTable="columnysnActive" msprop:Generator_ColumnPropNameInRow="ysnActive" msprop:Generator_ColumnPropNameInTable="ysnActiveColumn" msprop:Generator_UserColumnName="ysnActive" type="xs:boolean" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TblGlobalDistrict" msprop:Generator_TableClassName="TblGlobalDistrictDataTable" msprop:Generator_TableVarName="tableTblGlobalDistrict" msprop:Generator_RowChangedName="TblGlobalDistrictRowChanged" msprop:Generator_TablePropName="TblGlobalDistrict" msprop:Generator_RowDeletingName="TblGlobalDistrictRowDeleting" msprop:Generator_RowChangingName="TblGlobalDistrictRowChanging" msprop:Generator_RowEvHandlerName="TblGlobalDistrictRowChangeEventHandler" msprop:Generator_RowDeletedName="TblGlobalDistrictRowDeleted" msprop:Generator_RowClassName="TblGlobalDistrictRow" msprop:Generator_UserTableName="TblGlobalDistrict" msprop:Generator_RowEvArgName="TblGlobalDistrictRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="intDistrictID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnintDistrictID" msprop:Generator_ColumnPropNameInRow="intDistrictID" msprop:Generator_ColumnPropNameInTable="intDistrictIDColumn" msprop:Generator_UserColumnName="intDistrictID" type="xs:int" />
              <xs:element name="strDistrict" msprop:Generator_ColumnVarNameInTable="columnstrDistrict" msprop:Generator_ColumnPropNameInRow="strDistrict" msprop:Generator_ColumnPropNameInTable="strDistrictColumn" msprop:Generator_UserColumnName="strDistrict" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="1000" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TblBankBranchName" msprop:Generator_TableClassName="TblBankBranchNameDataTable" msprop:Generator_TableVarName="tableTblBankBranchName" msprop:Generator_RowChangedName="TblBankBranchNameRowChanged" msprop:Generator_TablePropName="TblBankBranchName" msprop:Generator_RowDeletingName="TblBankBranchNameRowDeleting" msprop:Generator_RowChangingName="TblBankBranchNameRowChanging" msprop:Generator_RowEvHandlerName="TblBankBranchNameRowChangeEventHandler" msprop:Generator_RowDeletedName="TblBankBranchNameRowDeleted" msprop:Generator_RowClassName="TblBankBranchNameRow" msprop:Generator_UserTableName="TblBankBranchName" msprop:Generator_RowEvArgName="TblBankBranchNameRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="intID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnintID" msprop:Generator_ColumnPropNameInRow="intID" msprop:Generator_ColumnPropNameInTable="intIDColumn" msprop:Generator_UserColumnName="intID" type="xs:int" />
              <xs:element name="strBankBranchName" msprop:Generator_ColumnVarNameInTable="columnstrBankBranchName" msprop:Generator_ColumnPropNameInRow="strBankBranchName" msprop:Generator_ColumnPropNameInTable="strBankBranchNameColumn" msprop:Generator_UserColumnName="strBankBranchName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="200" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TblBankName" msprop:Generator_TableClassName="TblBankNameDataTable" msprop:Generator_TableVarName="tableTblBankName" msprop:Generator_RowChangedName="TblBankNameRowChanged" msprop:Generator_TablePropName="TblBankName" msprop:Generator_RowDeletingName="TblBankNameRowDeleting" msprop:Generator_RowChangingName="TblBankNameRowChanging" msprop:Generator_RowEvHandlerName="TblBankNameRowChangeEventHandler" msprop:Generator_RowDeletedName="TblBankNameRowDeleted" msprop:Generator_RowClassName="TblBankNameRow" msprop:Generator_UserTableName="TblBankName" msprop:Generator_RowEvArgName="TblBankNameRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="intID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnintID" msprop:Generator_ColumnPropNameInRow="intID" msprop:Generator_ColumnPropNameInTable="intIDColumn" msprop:Generator_UserColumnName="intID" type="xs:int" />
              <xs:element name="strBankName" msprop:Generator_ColumnVarNameInTable="columnstrBankName" msprop:Generator_ColumnPropNameInRow="strBankName" msprop:Generator_ColumnPropNameInTable="strBankNameColumn" msprop:Generator_UserColumnName="strBankName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="200" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="QryBankInfo" msprop:Generator_TableClassName="QryBankInfoDataTable" msprop:Generator_TableVarName="tableQryBankInfo" msprop:Generator_TablePropName="QryBankInfo" msprop:Generator_RowDeletingName="QryBankInfoRowDeleting" msprop:Generator_RowChangingName="QryBankInfoRowChanging" msprop:Generator_RowEvHandlerName="QryBankInfoRowChangeEventHandler" msprop:Generator_RowDeletedName="QryBankInfoRowDeleted" msprop:Generator_UserTableName="QryBankInfo" msprop:Generator_RowChangedName="QryBankInfoRowChanged" msprop:Generator_RowEvArgName="QryBankInfoRowChangeEvent" msprop:Generator_RowClassName="QryBankInfoRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="intBranchID" msprop:Generator_ColumnVarNameInTable="columnintBranchID" msprop:Generator_ColumnPropNameInRow="intBranchID" msprop:Generator_ColumnPropNameInTable="intBranchIDColumn" msprop:Generator_UserColumnName="intBranchID" type="xs:int" />
              <xs:element name="strBankBranchName" msprop:Generator_ColumnVarNameInTable="columnstrBankBranchName" msprop:Generator_ColumnPropNameInRow="strBankBranchName" msprop:Generator_ColumnPropNameInTable="strBankBranchNameColumn" msprop:Generator_UserColumnName="strBankBranchName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="200" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:SprGetDistrictList" />
      <xs:field xpath="mstns:intDistrictID" />
    </xs:unique>
  </xs:element>
</xs:schema>