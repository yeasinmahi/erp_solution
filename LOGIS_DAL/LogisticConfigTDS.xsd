<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="LogisticConfigTDS" targetNamespace="http://tempuri.org/LogisticConfigTDS.xsd" xmlns:mstns="http://tempuri.org/LogisticConfigTDS.xsd" xmlns="http://tempuri.org/LogisticConfigTDS.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="ERP_LogisticConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="ERP_LogisticConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.LOGIS_DAL.Properties.Settings.GlobalReference.Default.ERP_LogisticConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TblLogisticConfigTableAdapter" GeneratorDataComponentClassName="TblLogisticConfigTableAdapter" Name="TblLogisticConfig" UserDataComponentName="TblLogisticConfigTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ERP_LogisticConnectionString (Settings)" DbObjectName="ERP_Logistic.dbo.TblLogisticConfig" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="GetData">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[tblLogisticConfig] WHERE (([intUnitId] = @Original_intUnitId) AND ([ysnByUOM] = @Original_ysnByUOM))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_intUnitId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="intUnitId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_ysnByUOM" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="ysnByUOM" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[tblLogisticConfig] ([intUnitId], [ysnByUOM]) VALUES (@intUnitId, @ysnByUOM);
SELECT intUnitId, ysnByUOM FROM TblLogisticConfig WHERE (intUnitId = @intUnitId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@intUnitId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="intUnitId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@ysnByUOM" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="ysnByUOM" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT [intUnitId]
      ,[ysnByUOM] FROM dbo.tblLogisticConfig</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[tblLogisticConfig] SET [intUnitId] = @intUnitId, [ysnByUOM] = @ysnByUOM WHERE (([intUnitId] = @Original_intUnitId) AND ([ysnByUOM] = @Original_ysnByUOM));
SELECT intUnitId, ysnByUOM FROM TblLogisticConfig WHERE (intUnitId = @intUnitId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@intUnitId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="intUnitId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@ysnByUOM" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="ysnByUOM" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_intUnitId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="intUnitId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_ysnByUOM" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="ysnByUOM" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="intUnitId" DataSetColumn="intUnitId" />
              <Mapping SourceColumn="ysnByUOM" DataSetColumn="ysnByUOM" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="ERP_LogisticConnectionString (Settings)" DbObjectName="ERP_Logistic.dbo.TblLogisticConfig" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByUnit" GetMethodModifier="Public" GetMethodName="GetDataByUnit" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByUnit" UserSourceName="GetDataByUnit">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT [intUnitId]
      ,[ysnByUOM] FROM dbo.tblLogisticConfig
where intUnitId = @intUnitId</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="intUnitId" ColumnName="intUnitId" DataSourceName="" DataTypeServer="unknown" DbType="Object" Direction="Input" ParameterName="@intUnitId" Precision="0" Scale="0" Size="1024" SourceColumn="intUnitId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="GetCCListTableAdapter" GeneratorDataComponentClassName="GetCCListTableAdapter" Name="GetCCList" UserDataComponentName="GetCCListTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ERP_LogisticConnectionString (Settings)" DbObjectType="Unknown" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetCCList" GetMethodModifier="Public" GetMethodName="GetCCList" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetCCList" UserSourceName="GetCCList">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT strChillingCenterName, intChillingCenterID FROM AG_Global.dbo.tblChillingCenter Where intUnitID In (2,67) and ysnActive=1 Order by strChillingCenterName</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="strChillingCenterName" DataSetColumn="strChillingCenterName" />
              <Mapping SourceColumn="intChillingCenterID" DataSetColumn="intChillingCenterID" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="LogisticConfigTDS" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="LogisticConfigTDS" msprop:Generator_UserDSName="LogisticConfigTDS">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="TblLogisticConfig" msprop:Generator_UserTableName="TblLogisticConfig" msprop:Generator_RowEvArgName="TblLogisticConfigRowChangeEvent" msprop:Generator_TableVarName="tableTblLogisticConfig" msprop:Generator_TablePropName="TblLogisticConfig" msprop:Generator_RowDeletingName="TblLogisticConfigRowDeleting" msprop:Generator_RowChangingName="TblLogisticConfigRowChanging" msprop:Generator_RowDeletedName="TblLogisticConfigRowDeleted" msprop:Generator_RowEvHandlerName="TblLogisticConfigRowChangeEventHandler" msprop:Generator_TableClassName="TblLogisticConfigDataTable" msprop:Generator_RowChangedName="TblLogisticConfigRowChanged" msprop:Generator_RowClassName="TblLogisticConfigRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="intUnitId" msprop:Generator_ColumnVarNameInTable="columnintUnitId" msprop:Generator_ColumnPropNameInRow="intUnitId" msprop:Generator_ColumnPropNameInTable="intUnitIdColumn" msprop:Generator_UserColumnName="intUnitId" type="xs:int" />
              <xs:element name="ysnByUOM" msprop:Generator_ColumnVarNameInTable="columnysnByUOM" msprop:Generator_ColumnPropNameInRow="ysnByUOM" msprop:Generator_ColumnPropNameInTable="ysnByUOMColumn" msprop:Generator_UserColumnName="ysnByUOM" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="GetCCList" msprop:Generator_TableClassName="GetCCListDataTable" msprop:Generator_TableVarName="tableGetCCList" msprop:Generator_TablePropName="GetCCList" msprop:Generator_RowDeletingName="GetCCListRowDeleting" msprop:Generator_RowChangingName="GetCCListRowChanging" msprop:Generator_RowEvHandlerName="GetCCListRowChangeEventHandler" msprop:Generator_RowDeletedName="GetCCListRowDeleted" msprop:Generator_UserTableName="GetCCList" msprop:Generator_RowChangedName="GetCCListRowChanged" msprop:Generator_RowEvArgName="GetCCListRowChangeEvent" msprop:Generator_RowClassName="GetCCListRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="strChillingCenterName" msprop:Generator_ColumnVarNameInTable="columnstrChillingCenterName" msprop:Generator_ColumnPropNameInRow="strChillingCenterName" msprop:Generator_ColumnPropNameInTable="strChillingCenterNameColumn" msprop:Generator_UserColumnName="strChillingCenterName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="500" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="intChillingCenterID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnintChillingCenterID" msprop:Generator_ColumnPropNameInRow="intChillingCenterID" msprop:Generator_ColumnPropNameInTable="intChillingCenterIDColumn" msprop:Generator_UserColumnName="intChillingCenterID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TblLogisticConfig" />
      <xs:field xpath="mstns:intUnitId" />
    </xs:unique>
  </xs:element>
</xs:schema>