//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Purchase_DAL.Commercial {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("LcTDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class LcTDS : global::System.Data.DataSet {
        
        private TblCommercialLCDataTable tableTblCommercialLC;
        
        private SprCommercialGetPaymenTypeInfoDataTable tableSprCommercialGetPaymenTypeInfo;
        
        private SprCommercialGetLCListDataTable tableSprCommercialGetLCList;
        
        private QryCommercialLCDetailWithItemDataTable tableQryCommercialLCDetailWithItem;
        
        private SprCommercialInstallmentInsertDataTable tableSprCommercialInstallmentInsert;
        
        private SprCommercialGetLCInfoDataTable tableSprCommercialGetLCInfo;
        
        private SprCommercialGetLCDetailsListDataTable tableSprCommercialGetLCDetailsList;
        
        private SprCommercialPOEditDataTable tableSprCommercialPOEdit;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public LcTDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected LcTDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TblCommercialLC"] != null)) {
                    base.Tables.Add(new TblCommercialLCDataTable(ds.Tables["TblCommercialLC"]));
                }
                if ((ds.Tables["SprCommercialGetPaymenTypeInfo"] != null)) {
                    base.Tables.Add(new SprCommercialGetPaymenTypeInfoDataTable(ds.Tables["SprCommercialGetPaymenTypeInfo"]));
                }
                if ((ds.Tables["SprCommercialGetLCList"] != null)) {
                    base.Tables.Add(new SprCommercialGetLCListDataTable(ds.Tables["SprCommercialGetLCList"]));
                }
                if ((ds.Tables["QryCommercialLCDetailWithItem"] != null)) {
                    base.Tables.Add(new QryCommercialLCDetailWithItemDataTable(ds.Tables["QryCommercialLCDetailWithItem"]));
                }
                if ((ds.Tables["SprCommercialInstallmentInsert"] != null)) {
                    base.Tables.Add(new SprCommercialInstallmentInsertDataTable(ds.Tables["SprCommercialInstallmentInsert"]));
                }
                if ((ds.Tables["SprCommercialGetLCInfo"] != null)) {
                    base.Tables.Add(new SprCommercialGetLCInfoDataTable(ds.Tables["SprCommercialGetLCInfo"]));
                }
                if ((ds.Tables["SprCommercialGetLCDetailsList"] != null)) {
                    base.Tables.Add(new SprCommercialGetLCDetailsListDataTable(ds.Tables["SprCommercialGetLCDetailsList"]));
                }
                if ((ds.Tables["SprCommercialPOEdit"] != null)) {
                    base.Tables.Add(new SprCommercialPOEditDataTable(ds.Tables["SprCommercialPOEdit"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TblCommercialLCDataTable TblCommercialLC {
            get {
                return this.tableTblCommercialLC;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SprCommercialGetPaymenTypeInfoDataTable SprCommercialGetPaymenTypeInfo {
            get {
                return this.tableSprCommercialGetPaymenTypeInfo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SprCommercialGetLCListDataTable SprCommercialGetLCList {
            get {
                return this.tableSprCommercialGetLCList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public QryCommercialLCDetailWithItemDataTable QryCommercialLCDetailWithItem {
            get {
                return this.tableQryCommercialLCDetailWithItem;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SprCommercialInstallmentInsertDataTable SprCommercialInstallmentInsert {
            get {
                return this.tableSprCommercialInstallmentInsert;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SprCommercialGetLCInfoDataTable SprCommercialGetLCInfo {
            get {
                return this.tableSprCommercialGetLCInfo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SprCommercialGetLCDetailsListDataTable SprCommercialGetLCDetailsList {
            get {
                return this.tableSprCommercialGetLCDetailsList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SprCommercialPOEditDataTable SprCommercialPOEdit {
            get {
                return this.tableSprCommercialPOEdit;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            LcTDS cln = ((LcTDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TblCommercialLC"] != null)) {
                    base.Tables.Add(new TblCommercialLCDataTable(ds.Tables["TblCommercialLC"]));
                }
                if ((ds.Tables["SprCommercialGetPaymenTypeInfo"] != null)) {
                    base.Tables.Add(new SprCommercialGetPaymenTypeInfoDataTable(ds.Tables["SprCommercialGetPaymenTypeInfo"]));
                }
                if ((ds.Tables["SprCommercialGetLCList"] != null)) {
                    base.Tables.Add(new SprCommercialGetLCListDataTable(ds.Tables["SprCommercialGetLCList"]));
                }
                if ((ds.Tables["QryCommercialLCDetailWithItem"] != null)) {
                    base.Tables.Add(new QryCommercialLCDetailWithItemDataTable(ds.Tables["QryCommercialLCDetailWithItem"]));
                }
                if ((ds.Tables["SprCommercialInstallmentInsert"] != null)) {
                    base.Tables.Add(new SprCommercialInstallmentInsertDataTable(ds.Tables["SprCommercialInstallmentInsert"]));
                }
                if ((ds.Tables["SprCommercialGetLCInfo"] != null)) {
                    base.Tables.Add(new SprCommercialGetLCInfoDataTable(ds.Tables["SprCommercialGetLCInfo"]));
                }
                if ((ds.Tables["SprCommercialGetLCDetailsList"] != null)) {
                    base.Tables.Add(new SprCommercialGetLCDetailsListDataTable(ds.Tables["SprCommercialGetLCDetailsList"]));
                }
                if ((ds.Tables["SprCommercialPOEdit"] != null)) {
                    base.Tables.Add(new SprCommercialPOEditDataTable(ds.Tables["SprCommercialPOEdit"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableTblCommercialLC = ((TblCommercialLCDataTable)(base.Tables["TblCommercialLC"]));
            if ((initTable == true)) {
                if ((this.tableTblCommercialLC != null)) {
                    this.tableTblCommercialLC.InitVars();
                }
            }
            this.tableSprCommercialGetPaymenTypeInfo = ((SprCommercialGetPaymenTypeInfoDataTable)(base.Tables["SprCommercialGetPaymenTypeInfo"]));
            if ((initTable == true)) {
                if ((this.tableSprCommercialGetPaymenTypeInfo != null)) {
                    this.tableSprCommercialGetPaymenTypeInfo.InitVars();
                }
            }
            this.tableSprCommercialGetLCList = ((SprCommercialGetLCListDataTable)(base.Tables["SprCommercialGetLCList"]));
            if ((initTable == true)) {
                if ((this.tableSprCommercialGetLCList != null)) {
                    this.tableSprCommercialGetLCList.InitVars();
                }
            }
            this.tableQryCommercialLCDetailWithItem = ((QryCommercialLCDetailWithItemDataTable)(base.Tables["QryCommercialLCDetailWithItem"]));
            if ((initTable == true)) {
                if ((this.tableQryCommercialLCDetailWithItem != null)) {
                    this.tableQryCommercialLCDetailWithItem.InitVars();
                }
            }
            this.tableSprCommercialInstallmentInsert = ((SprCommercialInstallmentInsertDataTable)(base.Tables["SprCommercialInstallmentInsert"]));
            if ((initTable == true)) {
                if ((this.tableSprCommercialInstallmentInsert != null)) {
                    this.tableSprCommercialInstallmentInsert.InitVars();
                }
            }
            this.tableSprCommercialGetLCInfo = ((SprCommercialGetLCInfoDataTable)(base.Tables["SprCommercialGetLCInfo"]));
            if ((initTable == true)) {
                if ((this.tableSprCommercialGetLCInfo != null)) {
                    this.tableSprCommercialGetLCInfo.InitVars();
                }
            }
            this.tableSprCommercialGetLCDetailsList = ((SprCommercialGetLCDetailsListDataTable)(base.Tables["SprCommercialGetLCDetailsList"]));
            if ((initTable == true)) {
                if ((this.tableSprCommercialGetLCDetailsList != null)) {
                    this.tableSprCommercialGetLCDetailsList.InitVars();
                }
            }
            this.tableSprCommercialPOEdit = ((SprCommercialPOEditDataTable)(base.Tables["SprCommercialPOEdit"]));
            if ((initTable == true)) {
                if ((this.tableSprCommercialPOEdit != null)) {
                    this.tableSprCommercialPOEdit.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "LcTDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/LcTDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTblCommercialLC = new TblCommercialLCDataTable();
            base.Tables.Add(this.tableTblCommercialLC);
            this.tableSprCommercialGetPaymenTypeInfo = new SprCommercialGetPaymenTypeInfoDataTable();
            base.Tables.Add(this.tableSprCommercialGetPaymenTypeInfo);
            this.tableSprCommercialGetLCList = new SprCommercialGetLCListDataTable();
            base.Tables.Add(this.tableSprCommercialGetLCList);
            this.tableQryCommercialLCDetailWithItem = new QryCommercialLCDetailWithItemDataTable();
            base.Tables.Add(this.tableQryCommercialLCDetailWithItem);
            this.tableSprCommercialInstallmentInsert = new SprCommercialInstallmentInsertDataTable();
            base.Tables.Add(this.tableSprCommercialInstallmentInsert);
            this.tableSprCommercialGetLCInfo = new SprCommercialGetLCInfoDataTable();
            base.Tables.Add(this.tableSprCommercialGetLCInfo);
            this.tableSprCommercialGetLCDetailsList = new SprCommercialGetLCDetailsListDataTable();
            base.Tables.Add(this.tableSprCommercialGetLCDetailsList);
            this.tableSprCommercialPOEdit = new SprCommercialPOEditDataTable();
            base.Tables.Add(this.tableSprCommercialPOEdit);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTblCommercialLC() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSprCommercialGetPaymenTypeInfo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSprCommercialGetLCList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeQryCommercialLCDetailWithItem() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSprCommercialInstallmentInsert() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSprCommercialGetLCInfo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSprCommercialGetLCDetailsList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSprCommercialPOEdit() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            LcTDS ds = new LcTDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TblCommercialLCRowChangeEventHandler(object sender, TblCommercialLCRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SprCommercialGetPaymenTypeInfoRowChangeEventHandler(object sender, SprCommercialGetPaymenTypeInfoRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SprCommercialGetLCListRowChangeEventHandler(object sender, SprCommercialGetLCListRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void QryCommercialLCDetailWithItemRowChangeEventHandler(object sender, QryCommercialLCDetailWithItemRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SprCommercialInstallmentInsertRowChangeEventHandler(object sender, SprCommercialInstallmentInsertRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SprCommercialGetLCInfoRowChangeEventHandler(object sender, SprCommercialGetLCInfoRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SprCommercialGetLCDetailsListRowChangeEventHandler(object sender, SprCommercialGetLCDetailsListRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SprCommercialPOEditRowChangeEventHandler(object sender, SprCommercialPOEditRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TblCommercialLCDataTable : global::System.Data.TypedTableBase<TblCommercialLCRow> {
            
            private global::System.Data.DataColumn columnintLCID;
            
            private global::System.Data.DataColumn columnintIndentID;
            
            private global::System.Data.DataColumn columnstrLCNumber;
            
            private global::System.Data.DataColumn columnintUnitID;
            
            private global::System.Data.DataColumn columnstrInsuranceCoverNoteNumber;
            
            private global::System.Data.DataColumn columnintSupplierID;
            
            private global::System.Data.DataColumn columnmonPIValue;
            
            private global::System.Data.DataColumn columnintShipment;
            
            private global::System.Data.DataColumn columnintShipmentTypeID;
            
            private global::System.Data.DataColumn columnintOurBankAccountID;
            
            private global::System.Data.DataColumn columnmonToalAmountOFPI;
            
            private global::System.Data.DataColumn columnintCurrenyID;
            
            private global::System.Data.DataColumn columnnumExRate;
            
            private global::System.Data.DataColumn columnmonTotalAmountBDT;
            
            private global::System.Data.DataColumn columnysnEnable;
            
            private global::System.Data.DataColumn columnysnDeleted;
            
            private global::System.Data.DataColumn columnintInsertedBy;
            
            private global::System.Data.DataColumn columndteInsertedDate;
            
            private global::System.Data.DataColumn columnintLastActionBy;
            
            private global::System.Data.DataColumn columndteLastActionDate;
            
            private global::System.Data.DataColumn columnintPaymentModeID;
            
            private global::System.Data.DataColumn columnnumInstallment;
            
            private global::System.Data.DataColumn columnnumInstallmentFrequency;
            
            private global::System.Data.DataColumn columndteStartData;
            
            private global::System.Data.DataColumn columnnumDays;
            
            private global::System.Data.DataColumn columnstrIndentNumbers;
            
            private global::System.Data.DataColumn columnstrPOCode;
            
            private global::System.Data.DataColumn columnintInsuranceCompanyID;
            
            private global::System.Data.DataColumn columnintCOALC;
            
            private global::System.Data.DataColumn columnintCOABankAccount;
            
            private global::System.Data.DataColumn columnysnConfirmed;
            
            private global::System.Data.DataColumn columndteEndDate;
            
            private global::System.Data.DataColumn columnysn2ndQuaterNeed;
            
            private global::System.Data.DataColumn columnysn2ndQuaterPaid;
            
            private global::System.Data.DataColumn columnysnHasPG;
            
            private global::System.Data.DataColumn columnnumPGPer;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TblCommercialLCDataTable() {
                this.TableName = "TblCommercialLC";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TblCommercialLCDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TblCommercialLCDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intLCIDColumn {
                get {
                    return this.columnintLCID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intIndentIDColumn {
                get {
                    return this.columnintIndentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strLCNumberColumn {
                get {
                    return this.columnstrLCNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intUnitIDColumn {
                get {
                    return this.columnintUnitID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strInsuranceCoverNoteNumberColumn {
                get {
                    return this.columnstrInsuranceCoverNoteNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intSupplierIDColumn {
                get {
                    return this.columnintSupplierID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn monPIValueColumn {
                get {
                    return this.columnmonPIValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intShipmentColumn {
                get {
                    return this.columnintShipment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intShipmentTypeIDColumn {
                get {
                    return this.columnintShipmentTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intOurBankAccountIDColumn {
                get {
                    return this.columnintOurBankAccountID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn monToalAmountOFPIColumn {
                get {
                    return this.columnmonToalAmountOFPI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intCurrenyIDColumn {
                get {
                    return this.columnintCurrenyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn numExRateColumn {
                get {
                    return this.columnnumExRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn monTotalAmountBDTColumn {
                get {
                    return this.columnmonTotalAmountBDT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ysnEnableColumn {
                get {
                    return this.columnysnEnable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ysnDeletedColumn {
                get {
                    return this.columnysnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intInsertedByColumn {
                get {
                    return this.columnintInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dteInsertedDateColumn {
                get {
                    return this.columndteInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intLastActionByColumn {
                get {
                    return this.columnintLastActionBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dteLastActionDateColumn {
                get {
                    return this.columndteLastActionDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intPaymentModeIDColumn {
                get {
                    return this.columnintPaymentModeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn numInstallmentColumn {
                get {
                    return this.columnnumInstallment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn numInstallmentFrequencyColumn {
                get {
                    return this.columnnumInstallmentFrequency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dteStartDataColumn {
                get {
                    return this.columndteStartData;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn numDaysColumn {
                get {
                    return this.columnnumDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strIndentNumbersColumn {
                get {
                    return this.columnstrIndentNumbers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strPOCodeColumn {
                get {
                    return this.columnstrPOCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intInsuranceCompanyIDColumn {
                get {
                    return this.columnintInsuranceCompanyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intCOALCColumn {
                get {
                    return this.columnintCOALC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intCOABankAccountColumn {
                get {
                    return this.columnintCOABankAccount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ysnConfirmedColumn {
                get {
                    return this.columnysnConfirmed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dteEndDateColumn {
                get {
                    return this.columndteEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ysn2ndQuaterNeedColumn {
                get {
                    return this.columnysn2ndQuaterNeed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ysn2ndQuaterPaidColumn {
                get {
                    return this.columnysn2ndQuaterPaid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ysnHasPGColumn {
                get {
                    return this.columnysnHasPG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn numPGPerColumn {
                get {
                    return this.columnnumPGPer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TblCommercialLCRow this[int index] {
                get {
                    return ((TblCommercialLCRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TblCommercialLCRowChangeEventHandler TblCommercialLCRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TblCommercialLCRowChangeEventHandler TblCommercialLCRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TblCommercialLCRowChangeEventHandler TblCommercialLCRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TblCommercialLCRowChangeEventHandler TblCommercialLCRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTblCommercialLCRow(TblCommercialLCRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TblCommercialLCRow AddTblCommercialLCRow(
                        int intIndentID, 
                        string strLCNumber, 
                        int intUnitID, 
                        string strInsuranceCoverNoteNumber, 
                        int intSupplierID, 
                        decimal monPIValue, 
                        int intShipment, 
                        int intShipmentTypeID, 
                        int intOurBankAccountID, 
                        decimal monToalAmountOFPI, 
                        int intCurrenyID, 
                        decimal numExRate, 
                        decimal monTotalAmountBDT, 
                        bool ysnEnable, 
                        bool ysnDeleted, 
                        int intInsertedBy, 
                        System.DateTime dteInsertedDate, 
                        int intLastActionBy, 
                        System.DateTime dteLastActionDate, 
                        int intPaymentModeID, 
                        int numInstallment, 
                        int numInstallmentFrequency, 
                        System.DateTime dteStartData, 
                        int numDays, 
                        string strIndentNumbers, 
                        string strPOCode, 
                        int intInsuranceCompanyID, 
                        int intCOALC, 
                        int intCOABankAccount, 
                        bool ysnConfirmed, 
                        System.DateTime dteEndDate, 
                        bool ysn2ndQuaterNeed, 
                        bool ysn2ndQuaterPaid, 
                        bool ysnHasPG, 
                        decimal numPGPer) {
                TblCommercialLCRow rowTblCommercialLCRow = ((TblCommercialLCRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        intIndentID,
                        strLCNumber,
                        intUnitID,
                        strInsuranceCoverNoteNumber,
                        intSupplierID,
                        monPIValue,
                        intShipment,
                        intShipmentTypeID,
                        intOurBankAccountID,
                        monToalAmountOFPI,
                        intCurrenyID,
                        numExRate,
                        monTotalAmountBDT,
                        ysnEnable,
                        ysnDeleted,
                        intInsertedBy,
                        dteInsertedDate,
                        intLastActionBy,
                        dteLastActionDate,
                        intPaymentModeID,
                        numInstallment,
                        numInstallmentFrequency,
                        dteStartData,
                        numDays,
                        strIndentNumbers,
                        strPOCode,
                        intInsuranceCompanyID,
                        intCOALC,
                        intCOABankAccount,
                        ysnConfirmed,
                        dteEndDate,
                        ysn2ndQuaterNeed,
                        ysn2ndQuaterPaid,
                        ysnHasPG,
                        numPGPer};
                rowTblCommercialLCRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTblCommercialLCRow);
                return rowTblCommercialLCRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TblCommercialLCRow FindByintLCID(int intLCID) {
                return ((TblCommercialLCRow)(this.Rows.Find(new object[] {
                            intLCID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TblCommercialLCDataTable cln = ((TblCommercialLCDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TblCommercialLCDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnintLCID = base.Columns["intLCID"];
                this.columnintIndentID = base.Columns["intIndentID"];
                this.columnstrLCNumber = base.Columns["strLCNumber"];
                this.columnintUnitID = base.Columns["intUnitID"];
                this.columnstrInsuranceCoverNoteNumber = base.Columns["strInsuranceCoverNoteNumber"];
                this.columnintSupplierID = base.Columns["intSupplierID"];
                this.columnmonPIValue = base.Columns["monPIValue"];
                this.columnintShipment = base.Columns["intShipment"];
                this.columnintShipmentTypeID = base.Columns["intShipmentTypeID"];
                this.columnintOurBankAccountID = base.Columns["intOurBankAccountID"];
                this.columnmonToalAmountOFPI = base.Columns["monToalAmountOFPI"];
                this.columnintCurrenyID = base.Columns["intCurrenyID"];
                this.columnnumExRate = base.Columns["numExRate"];
                this.columnmonTotalAmountBDT = base.Columns["monTotalAmountBDT"];
                this.columnysnEnable = base.Columns["ysnEnable"];
                this.columnysnDeleted = base.Columns["ysnDeleted"];
                this.columnintInsertedBy = base.Columns["intInsertedBy"];
                this.columndteInsertedDate = base.Columns["dteInsertedDate"];
                this.columnintLastActionBy = base.Columns["intLastActionBy"];
                this.columndteLastActionDate = base.Columns["dteLastActionDate"];
                this.columnintPaymentModeID = base.Columns["intPaymentModeID"];
                this.columnnumInstallment = base.Columns["numInstallment"];
                this.columnnumInstallmentFrequency = base.Columns["numInstallmentFrequency"];
                this.columndteStartData = base.Columns["dteStartData"];
                this.columnnumDays = base.Columns["numDays"];
                this.columnstrIndentNumbers = base.Columns["strIndentNumbers"];
                this.columnstrPOCode = base.Columns["strPOCode"];
                this.columnintInsuranceCompanyID = base.Columns["intInsuranceCompanyID"];
                this.columnintCOALC = base.Columns["intCOALC"];
                this.columnintCOABankAccount = base.Columns["intCOABankAccount"];
                this.columnysnConfirmed = base.Columns["ysnConfirmed"];
                this.columndteEndDate = base.Columns["dteEndDate"];
                this.columnysn2ndQuaterNeed = base.Columns["ysn2ndQuaterNeed"];
                this.columnysn2ndQuaterPaid = base.Columns["ysn2ndQuaterPaid"];
                this.columnysnHasPG = base.Columns["ysnHasPG"];
                this.columnnumPGPer = base.Columns["numPGPer"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnintLCID = new global::System.Data.DataColumn("intLCID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintLCID);
                this.columnintIndentID = new global::System.Data.DataColumn("intIndentID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintIndentID);
                this.columnstrLCNumber = new global::System.Data.DataColumn("strLCNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrLCNumber);
                this.columnintUnitID = new global::System.Data.DataColumn("intUnitID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintUnitID);
                this.columnstrInsuranceCoverNoteNumber = new global::System.Data.DataColumn("strInsuranceCoverNoteNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrInsuranceCoverNoteNumber);
                this.columnintSupplierID = new global::System.Data.DataColumn("intSupplierID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintSupplierID);
                this.columnmonPIValue = new global::System.Data.DataColumn("monPIValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmonPIValue);
                this.columnintShipment = new global::System.Data.DataColumn("intShipment", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintShipment);
                this.columnintShipmentTypeID = new global::System.Data.DataColumn("intShipmentTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintShipmentTypeID);
                this.columnintOurBankAccountID = new global::System.Data.DataColumn("intOurBankAccountID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintOurBankAccountID);
                this.columnmonToalAmountOFPI = new global::System.Data.DataColumn("monToalAmountOFPI", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmonToalAmountOFPI);
                this.columnintCurrenyID = new global::System.Data.DataColumn("intCurrenyID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintCurrenyID);
                this.columnnumExRate = new global::System.Data.DataColumn("numExRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumExRate);
                this.columnmonTotalAmountBDT = new global::System.Data.DataColumn("monTotalAmountBDT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmonTotalAmountBDT);
                this.columnysnEnable = new global::System.Data.DataColumn("ysnEnable", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnysnEnable);
                this.columnysnDeleted = new global::System.Data.DataColumn("ysnDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnysnDeleted);
                this.columnintInsertedBy = new global::System.Data.DataColumn("intInsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintInsertedBy);
                this.columndteInsertedDate = new global::System.Data.DataColumn("dteInsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndteInsertedDate);
                this.columnintLastActionBy = new global::System.Data.DataColumn("intLastActionBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintLastActionBy);
                this.columndteLastActionDate = new global::System.Data.DataColumn("dteLastActionDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndteLastActionDate);
                this.columnintPaymentModeID = new global::System.Data.DataColumn("intPaymentModeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintPaymentModeID);
                this.columnnumInstallment = new global::System.Data.DataColumn("numInstallment", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumInstallment);
                this.columnnumInstallmentFrequency = new global::System.Data.DataColumn("numInstallmentFrequency", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumInstallmentFrequency);
                this.columndteStartData = new global::System.Data.DataColumn("dteStartData", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndteStartData);
                this.columnnumDays = new global::System.Data.DataColumn("numDays", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumDays);
                this.columnstrIndentNumbers = new global::System.Data.DataColumn("strIndentNumbers", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrIndentNumbers);
                this.columnstrPOCode = new global::System.Data.DataColumn("strPOCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrPOCode);
                this.columnintInsuranceCompanyID = new global::System.Data.DataColumn("intInsuranceCompanyID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintInsuranceCompanyID);
                this.columnintCOALC = new global::System.Data.DataColumn("intCOALC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintCOALC);
                this.columnintCOABankAccount = new global::System.Data.DataColumn("intCOABankAccount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintCOABankAccount);
                this.columnysnConfirmed = new global::System.Data.DataColumn("ysnConfirmed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnysnConfirmed);
                this.columndteEndDate = new global::System.Data.DataColumn("dteEndDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndteEndDate);
                this.columnysn2ndQuaterNeed = new global::System.Data.DataColumn("ysn2ndQuaterNeed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnysn2ndQuaterNeed);
                this.columnysn2ndQuaterPaid = new global::System.Data.DataColumn("ysn2ndQuaterPaid", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnysn2ndQuaterPaid);
                this.columnysnHasPG = new global::System.Data.DataColumn("ysnHasPG", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnysnHasPG);
                this.columnnumPGPer = new global::System.Data.DataColumn("numPGPer", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumPGPer);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnintLCID}, true));
                this.columnintLCID.AutoIncrement = true;
                this.columnintLCID.AutoIncrementSeed = -1;
                this.columnintLCID.AutoIncrementStep = -1;
                this.columnintLCID.AllowDBNull = false;
                this.columnintLCID.ReadOnly = true;
                this.columnintLCID.Unique = true;
                this.columnstrLCNumber.MaxLength = 1000;
                this.columnstrInsuranceCoverNoteNumber.MaxLength = 1000;
                this.columnysnEnable.AllowDBNull = false;
                this.columnstrIndentNumbers.MaxLength = 1000;
                this.columnstrPOCode.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TblCommercialLCRow NewTblCommercialLCRow() {
                return ((TblCommercialLCRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TblCommercialLCRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TblCommercialLCRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TblCommercialLCRowChanged != null)) {
                    this.TblCommercialLCRowChanged(this, new TblCommercialLCRowChangeEvent(((TblCommercialLCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TblCommercialLCRowChanging != null)) {
                    this.TblCommercialLCRowChanging(this, new TblCommercialLCRowChangeEvent(((TblCommercialLCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TblCommercialLCRowDeleted != null)) {
                    this.TblCommercialLCRowDeleted(this, new TblCommercialLCRowChangeEvent(((TblCommercialLCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TblCommercialLCRowDeleting != null)) {
                    this.TblCommercialLCRowDeleting(this, new TblCommercialLCRowChangeEvent(((TblCommercialLCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTblCommercialLCRow(TblCommercialLCRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LcTDS ds = new LcTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TblCommercialLCDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SprCommercialGetPaymenTypeInfoDataTable : global::System.Data.TypedTableBase<SprCommercialGetPaymenTypeInfoRow> {
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SprCommercialGetPaymenTypeInfoDataTable() {
                this.TableName = "SprCommercialGetPaymenTypeInfo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SprCommercialGetPaymenTypeInfoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SprCommercialGetPaymenTypeInfoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SprCommercialGetPaymenTypeInfoRow this[int index] {
                get {
                    return ((SprCommercialGetPaymenTypeInfoRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SprCommercialGetPaymenTypeInfoRowChangeEventHandler SprCommercialGetPaymenTypeInfoRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SprCommercialGetPaymenTypeInfoRowChangeEventHandler SprCommercialGetPaymenTypeInfoRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SprCommercialGetPaymenTypeInfoRowChangeEventHandler SprCommercialGetPaymenTypeInfoRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SprCommercialGetPaymenTypeInfoRowChangeEventHandler SprCommercialGetPaymenTypeInfoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSprCommercialGetPaymenTypeInfoRow(SprCommercialGetPaymenTypeInfoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SprCommercialGetPaymenTypeInfoRow AddSprCommercialGetPaymenTypeInfoRow() {
                SprCommercialGetPaymenTypeInfoRow rowSprCommercialGetPaymenTypeInfoRow = ((SprCommercialGetPaymenTypeInfoRow)(this.NewRow()));
                object[] columnValuesArray = new object[0];
                rowSprCommercialGetPaymenTypeInfoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSprCommercialGetPaymenTypeInfoRow);
                return rowSprCommercialGetPaymenTypeInfoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SprCommercialGetPaymenTypeInfoDataTable cln = ((SprCommercialGetPaymenTypeInfoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SprCommercialGetPaymenTypeInfoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SprCommercialGetPaymenTypeInfoRow NewSprCommercialGetPaymenTypeInfoRow() {
                return ((SprCommercialGetPaymenTypeInfoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SprCommercialGetPaymenTypeInfoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SprCommercialGetPaymenTypeInfoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SprCommercialGetPaymenTypeInfoRowChanged != null)) {
                    this.SprCommercialGetPaymenTypeInfoRowChanged(this, new SprCommercialGetPaymenTypeInfoRowChangeEvent(((SprCommercialGetPaymenTypeInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SprCommercialGetPaymenTypeInfoRowChanging != null)) {
                    this.SprCommercialGetPaymenTypeInfoRowChanging(this, new SprCommercialGetPaymenTypeInfoRowChangeEvent(((SprCommercialGetPaymenTypeInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SprCommercialGetPaymenTypeInfoRowDeleted != null)) {
                    this.SprCommercialGetPaymenTypeInfoRowDeleted(this, new SprCommercialGetPaymenTypeInfoRowChangeEvent(((SprCommercialGetPaymenTypeInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SprCommercialGetPaymenTypeInfoRowDeleting != null)) {
                    this.SprCommercialGetPaymenTypeInfoRowDeleting(this, new SprCommercialGetPaymenTypeInfoRowChangeEvent(((SprCommercialGetPaymenTypeInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSprCommercialGetPaymenTypeInfoRow(SprCommercialGetPaymenTypeInfoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LcTDS ds = new LcTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SprCommercialGetPaymenTypeInfoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SprCommercialGetLCListDataTable : global::System.Data.TypedTableBase<SprCommercialGetLCListRow> {
            
            private global::System.Data.DataColumn columnintLCID;
            
            private global::System.Data.DataColumn columnintIndentID;
            
            private global::System.Data.DataColumn columnstrLCNumber;
            
            private global::System.Data.DataColumn columnintUnitID;
            
            private global::System.Data.DataColumn columnstrInsuranceCoverNoteNumber;
            
            private global::System.Data.DataColumn columnintSupplierID;
            
            private global::System.Data.DataColumn columnmonPIValue;
            
            private global::System.Data.DataColumn columnintShipment;
            
            private global::System.Data.DataColumn columnintShipmentTypeID;
            
            private global::System.Data.DataColumn columnintOurBankAccountID;
            
            private global::System.Data.DataColumn columnmonToalAmountOFPI;
            
            private global::System.Data.DataColumn columnintCurrenyID;
            
            private global::System.Data.DataColumn columnnumExRate;
            
            private global::System.Data.DataColumn columnmonTotalAmountBDT;
            
            private global::System.Data.DataColumn columnysnEnable;
            
            private global::System.Data.DataColumn columnysnDeleted;
            
            private global::System.Data.DataColumn columnintInsertedBy;
            
            private global::System.Data.DataColumn columndteInsertedDate;
            
            private global::System.Data.DataColumn columnintLastActionBy;
            
            private global::System.Data.DataColumn columndteLastActionDate;
            
            private global::System.Data.DataColumn columnintPaymentModeID;
            
            private global::System.Data.DataColumn columnnumInstallment;
            
            private global::System.Data.DataColumn columnnumInstallmentFrequency;
            
            private global::System.Data.DataColumn columndteStartData;
            
            private global::System.Data.DataColumn columnnumDays;
            
            private global::System.Data.DataColumn columnstrIndentNumbers;
            
            private global::System.Data.DataColumn columnstrPOCode;
            
            private global::System.Data.DataColumn columnintInsuranceCompanyID;
            
            private global::System.Data.DataColumn columnintCOALC;
            
            private global::System.Data.DataColumn columnintCOABankAccount;
            
            private global::System.Data.DataColumn columnysnConfirmed;
            
            private global::System.Data.DataColumn columndteEndDate;
            
            private global::System.Data.DataColumn columnysn2ndQuaterNeed;
            
            private global::System.Data.DataColumn columnysn2ndQuaterPaid;
            
            private global::System.Data.DataColumn columnysnHasPG;
            
            private global::System.Data.DataColumn columnnumPGPer;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SprCommercialGetLCListDataTable() {
                this.TableName = "SprCommercialGetLCList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SprCommercialGetLCListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SprCommercialGetLCListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intLCIDColumn {
                get {
                    return this.columnintLCID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intIndentIDColumn {
                get {
                    return this.columnintIndentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strLCNumberColumn {
                get {
                    return this.columnstrLCNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intUnitIDColumn {
                get {
                    return this.columnintUnitID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strInsuranceCoverNoteNumberColumn {
                get {
                    return this.columnstrInsuranceCoverNoteNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intSupplierIDColumn {
                get {
                    return this.columnintSupplierID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn monPIValueColumn {
                get {
                    return this.columnmonPIValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intShipmentColumn {
                get {
                    return this.columnintShipment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intShipmentTypeIDColumn {
                get {
                    return this.columnintShipmentTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intOurBankAccountIDColumn {
                get {
                    return this.columnintOurBankAccountID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn monToalAmountOFPIColumn {
                get {
                    return this.columnmonToalAmountOFPI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intCurrenyIDColumn {
                get {
                    return this.columnintCurrenyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn numExRateColumn {
                get {
                    return this.columnnumExRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn monTotalAmountBDTColumn {
                get {
                    return this.columnmonTotalAmountBDT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ysnEnableColumn {
                get {
                    return this.columnysnEnable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ysnDeletedColumn {
                get {
                    return this.columnysnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intInsertedByColumn {
                get {
                    return this.columnintInsertedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dteInsertedDateColumn {
                get {
                    return this.columndteInsertedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intLastActionByColumn {
                get {
                    return this.columnintLastActionBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dteLastActionDateColumn {
                get {
                    return this.columndteLastActionDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intPaymentModeIDColumn {
                get {
                    return this.columnintPaymentModeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn numInstallmentColumn {
                get {
                    return this.columnnumInstallment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn numInstallmentFrequencyColumn {
                get {
                    return this.columnnumInstallmentFrequency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dteStartDataColumn {
                get {
                    return this.columndteStartData;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn numDaysColumn {
                get {
                    return this.columnnumDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strIndentNumbersColumn {
                get {
                    return this.columnstrIndentNumbers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strPOCodeColumn {
                get {
                    return this.columnstrPOCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intInsuranceCompanyIDColumn {
                get {
                    return this.columnintInsuranceCompanyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intCOALCColumn {
                get {
                    return this.columnintCOALC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intCOABankAccountColumn {
                get {
                    return this.columnintCOABankAccount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ysnConfirmedColumn {
                get {
                    return this.columnysnConfirmed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dteEndDateColumn {
                get {
                    return this.columndteEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ysn2ndQuaterNeedColumn {
                get {
                    return this.columnysn2ndQuaterNeed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ysn2ndQuaterPaidColumn {
                get {
                    return this.columnysn2ndQuaterPaid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ysnHasPGColumn {
                get {
                    return this.columnysnHasPG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn numPGPerColumn {
                get {
                    return this.columnnumPGPer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SprCommercialGetLCListRow this[int index] {
                get {
                    return ((SprCommercialGetLCListRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SprCommercialGetLCListRowChangeEventHandler SprCommercialGetLCListRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SprCommercialGetLCListRowChangeEventHandler SprCommercialGetLCListRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SprCommercialGetLCListRowChangeEventHandler SprCommercialGetLCListRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SprCommercialGetLCListRowChangeEventHandler SprCommercialGetLCListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSprCommercialGetLCListRow(SprCommercialGetLCListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SprCommercialGetLCListRow AddSprCommercialGetLCListRow(
                        int intIndentID, 
                        string strLCNumber, 
                        int intUnitID, 
                        string strInsuranceCoverNoteNumber, 
                        int intSupplierID, 
                        decimal monPIValue, 
                        int intShipment, 
                        int intShipmentTypeID, 
                        int intOurBankAccountID, 
                        decimal monToalAmountOFPI, 
                        int intCurrenyID, 
                        decimal numExRate, 
                        decimal monTotalAmountBDT, 
                        bool ysnEnable, 
                        bool ysnDeleted, 
                        int intInsertedBy, 
                        System.DateTime dteInsertedDate, 
                        int intLastActionBy, 
                        System.DateTime dteLastActionDate, 
                        int intPaymentModeID, 
                        int numInstallment, 
                        int numInstallmentFrequency, 
                        System.DateTime dteStartData, 
                        int numDays, 
                        string strIndentNumbers, 
                        string strPOCode, 
                        int intInsuranceCompanyID, 
                        int intCOALC, 
                        int intCOABankAccount, 
                        bool ysnConfirmed, 
                        System.DateTime dteEndDate, 
                        bool ysn2ndQuaterNeed, 
                        bool ysn2ndQuaterPaid, 
                        bool ysnHasPG, 
                        decimal numPGPer) {
                SprCommercialGetLCListRow rowSprCommercialGetLCListRow = ((SprCommercialGetLCListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        intIndentID,
                        strLCNumber,
                        intUnitID,
                        strInsuranceCoverNoteNumber,
                        intSupplierID,
                        monPIValue,
                        intShipment,
                        intShipmentTypeID,
                        intOurBankAccountID,
                        monToalAmountOFPI,
                        intCurrenyID,
                        numExRate,
                        monTotalAmountBDT,
                        ysnEnable,
                        ysnDeleted,
                        intInsertedBy,
                        dteInsertedDate,
                        intLastActionBy,
                        dteLastActionDate,
                        intPaymentModeID,
                        numInstallment,
                        numInstallmentFrequency,
                        dteStartData,
                        numDays,
                        strIndentNumbers,
                        strPOCode,
                        intInsuranceCompanyID,
                        intCOALC,
                        intCOABankAccount,
                        ysnConfirmed,
                        dteEndDate,
                        ysn2ndQuaterNeed,
                        ysn2ndQuaterPaid,
                        ysnHasPG,
                        numPGPer};
                rowSprCommercialGetLCListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSprCommercialGetLCListRow);
                return rowSprCommercialGetLCListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SprCommercialGetLCListRow FindByintLCID(int intLCID) {
                return ((SprCommercialGetLCListRow)(this.Rows.Find(new object[] {
                            intLCID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SprCommercialGetLCListDataTable cln = ((SprCommercialGetLCListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SprCommercialGetLCListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnintLCID = base.Columns["intLCID"];
                this.columnintIndentID = base.Columns["intIndentID"];
                this.columnstrLCNumber = base.Columns["strLCNumber"];
                this.columnintUnitID = base.Columns["intUnitID"];
                this.columnstrInsuranceCoverNoteNumber = base.Columns["strInsuranceCoverNoteNumber"];
                this.columnintSupplierID = base.Columns["intSupplierID"];
                this.columnmonPIValue = base.Columns["monPIValue"];
                this.columnintShipment = base.Columns["intShipment"];
                this.columnintShipmentTypeID = base.Columns["intShipmentTypeID"];
                this.columnintOurBankAccountID = base.Columns["intOurBankAccountID"];
                this.columnmonToalAmountOFPI = base.Columns["monToalAmountOFPI"];
                this.columnintCurrenyID = base.Columns["intCurrenyID"];
                this.columnnumExRate = base.Columns["numExRate"];
                this.columnmonTotalAmountBDT = base.Columns["monTotalAmountBDT"];
                this.columnysnEnable = base.Columns["ysnEnable"];
                this.columnysnDeleted = base.Columns["ysnDeleted"];
                this.columnintInsertedBy = base.Columns["intInsertedBy"];
                this.columndteInsertedDate = base.Columns["dteInsertedDate"];
                this.columnintLastActionBy = base.Columns["intLastActionBy"];
                this.columndteLastActionDate = base.Columns["dteLastActionDate"];
                this.columnintPaymentModeID = base.Columns["intPaymentModeID"];
                this.columnnumInstallment = base.Columns["numInstallment"];
                this.columnnumInstallmentFrequency = base.Columns["numInstallmentFrequency"];
                this.columndteStartData = base.Columns["dteStartData"];
                this.columnnumDays = base.Columns["numDays"];
                this.columnstrIndentNumbers = base.Columns["strIndentNumbers"];
                this.columnstrPOCode = base.Columns["strPOCode"];
                this.columnintInsuranceCompanyID = base.Columns["intInsuranceCompanyID"];
                this.columnintCOALC = base.Columns["intCOALC"];
                this.columnintCOABankAccount = base.Columns["intCOABankAccount"];
                this.columnysnConfirmed = base.Columns["ysnConfirmed"];
                this.columndteEndDate = base.Columns["dteEndDate"];
                this.columnysn2ndQuaterNeed = base.Columns["ysn2ndQuaterNeed"];
                this.columnysn2ndQuaterPaid = base.Columns["ysn2ndQuaterPaid"];
                this.columnysnHasPG = base.Columns["ysnHasPG"];
                this.columnnumPGPer = base.Columns["numPGPer"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnintLCID = new global::System.Data.DataColumn("intLCID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintLCID);
                this.columnintIndentID = new global::System.Data.DataColumn("intIndentID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintIndentID);
                this.columnstrLCNumber = new global::System.Data.DataColumn("strLCNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrLCNumber);
                this.columnintUnitID = new global::System.Data.DataColumn("intUnitID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintUnitID);
                this.columnstrInsuranceCoverNoteNumber = new global::System.Data.DataColumn("strInsuranceCoverNoteNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrInsuranceCoverNoteNumber);
                this.columnintSupplierID = new global::System.Data.DataColumn("intSupplierID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintSupplierID);
                this.columnmonPIValue = new global::System.Data.DataColumn("monPIValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmonPIValue);
                this.columnintShipment = new global::System.Data.DataColumn("intShipment", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintShipment);
                this.columnintShipmentTypeID = new global::System.Data.DataColumn("intShipmentTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintShipmentTypeID);
                this.columnintOurBankAccountID = new global::System.Data.DataColumn("intOurBankAccountID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintOurBankAccountID);
                this.columnmonToalAmountOFPI = new global::System.Data.DataColumn("monToalAmountOFPI", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmonToalAmountOFPI);
                this.columnintCurrenyID = new global::System.Data.DataColumn("intCurrenyID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintCurrenyID);
                this.columnnumExRate = new global::System.Data.DataColumn("numExRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumExRate);
                this.columnmonTotalAmountBDT = new global::System.Data.DataColumn("monTotalAmountBDT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmonTotalAmountBDT);
                this.columnysnEnable = new global::System.Data.DataColumn("ysnEnable", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnysnEnable);
                this.columnysnDeleted = new global::System.Data.DataColumn("ysnDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnysnDeleted);
                this.columnintInsertedBy = new global::System.Data.DataColumn("intInsertedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintInsertedBy);
                this.columndteInsertedDate = new global::System.Data.DataColumn("dteInsertedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndteInsertedDate);
                this.columnintLastActionBy = new global::System.Data.DataColumn("intLastActionBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintLastActionBy);
                this.columndteLastActionDate = new global::System.Data.DataColumn("dteLastActionDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndteLastActionDate);
                this.columnintPaymentModeID = new global::System.Data.DataColumn("intPaymentModeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintPaymentModeID);
                this.columnnumInstallment = new global::System.Data.DataColumn("numInstallment", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumInstallment);
                this.columnnumInstallmentFrequency = new global::System.Data.DataColumn("numInstallmentFrequency", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumInstallmentFrequency);
                this.columndteStartData = new global::System.Data.DataColumn("dteStartData", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndteStartData);
                this.columnnumDays = new global::System.Data.DataColumn("numDays", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumDays);
                this.columnstrIndentNumbers = new global::System.Data.DataColumn("strIndentNumbers", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrIndentNumbers);
                this.columnstrPOCode = new global::System.Data.DataColumn("strPOCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrPOCode);
                this.columnintInsuranceCompanyID = new global::System.Data.DataColumn("intInsuranceCompanyID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintInsuranceCompanyID);
                this.columnintCOALC = new global::System.Data.DataColumn("intCOALC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintCOALC);
                this.columnintCOABankAccount = new global::System.Data.DataColumn("intCOABankAccount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintCOABankAccount);
                this.columnysnConfirmed = new global::System.Data.DataColumn("ysnConfirmed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnysnConfirmed);
                this.columndteEndDate = new global::System.Data.DataColumn("dteEndDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndteEndDate);
                this.columnysn2ndQuaterNeed = new global::System.Data.DataColumn("ysn2ndQuaterNeed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnysn2ndQuaterNeed);
                this.columnysn2ndQuaterPaid = new global::System.Data.DataColumn("ysn2ndQuaterPaid", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnysn2ndQuaterPaid);
                this.columnysnHasPG = new global::System.Data.DataColumn("ysnHasPG", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnysnHasPG);
                this.columnnumPGPer = new global::System.Data.DataColumn("numPGPer", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumPGPer);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnintLCID}, true));
                this.columnintLCID.AutoIncrement = true;
                this.columnintLCID.AutoIncrementSeed = -1;
                this.columnintLCID.AutoIncrementStep = -1;
                this.columnintLCID.AllowDBNull = false;
                this.columnintLCID.ReadOnly = true;
                this.columnintLCID.Unique = true;
                this.columnstrLCNumber.MaxLength = 1000;
                this.columnstrInsuranceCoverNoteNumber.MaxLength = 1000;
                this.columnysnEnable.AllowDBNull = false;
                this.columnstrIndentNumbers.MaxLength = 1000;
                this.columnstrPOCode.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SprCommercialGetLCListRow NewSprCommercialGetLCListRow() {
                return ((SprCommercialGetLCListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SprCommercialGetLCListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SprCommercialGetLCListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SprCommercialGetLCListRowChanged != null)) {
                    this.SprCommercialGetLCListRowChanged(this, new SprCommercialGetLCListRowChangeEvent(((SprCommercialGetLCListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SprCommercialGetLCListRowChanging != null)) {
                    this.SprCommercialGetLCListRowChanging(this, new SprCommercialGetLCListRowChangeEvent(((SprCommercialGetLCListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SprCommercialGetLCListRowDeleted != null)) {
                    this.SprCommercialGetLCListRowDeleted(this, new SprCommercialGetLCListRowChangeEvent(((SprCommercialGetLCListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SprCommercialGetLCListRowDeleting != null)) {
                    this.SprCommercialGetLCListRowDeleting(this, new SprCommercialGetLCListRowChangeEvent(((SprCommercialGetLCListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSprCommercialGetLCListRow(SprCommercialGetLCListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LcTDS ds = new LcTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SprCommercialGetLCListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class QryCommercialLCDetailWithItemDataTable : global::System.Data.TypedTableBase<QryCommercialLCDetailWithItemRow> {
            
            private global::System.Data.DataColumn columnintLCID;
            
            private global::System.Data.DataColumn columnintItemID;
            
            private global::System.Data.DataColumn columnstrProductName;
            
            private global::System.Data.DataColumn columnnumTotalUnit;
            
            private global::System.Data.DataColumn columnmonUnitPrice;
            
            private global::System.Data.DataColumn columnmonTotalPrice;
            
            private global::System.Data.DataColumn columnstrHSCode;
            
            private global::System.Data.DataColumn columnnumRatio;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QryCommercialLCDetailWithItemDataTable() {
                this.TableName = "QryCommercialLCDetailWithItem";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal QryCommercialLCDetailWithItemDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected QryCommercialLCDetailWithItemDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intLCIDColumn {
                get {
                    return this.columnintLCID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intItemIDColumn {
                get {
                    return this.columnintItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strProductNameColumn {
                get {
                    return this.columnstrProductName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn numTotalUnitColumn {
                get {
                    return this.columnnumTotalUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn monUnitPriceColumn {
                get {
                    return this.columnmonUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn monTotalPriceColumn {
                get {
                    return this.columnmonTotalPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strHSCodeColumn {
                get {
                    return this.columnstrHSCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn numRatioColumn {
                get {
                    return this.columnnumRatio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QryCommercialLCDetailWithItemRow this[int index] {
                get {
                    return ((QryCommercialLCDetailWithItemRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QryCommercialLCDetailWithItemRowChangeEventHandler QryCommercialLCDetailWithItemRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QryCommercialLCDetailWithItemRowChangeEventHandler QryCommercialLCDetailWithItemRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QryCommercialLCDetailWithItemRowChangeEventHandler QryCommercialLCDetailWithItemRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QryCommercialLCDetailWithItemRowChangeEventHandler QryCommercialLCDetailWithItemRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddQryCommercialLCDetailWithItemRow(QryCommercialLCDetailWithItemRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QryCommercialLCDetailWithItemRow AddQryCommercialLCDetailWithItemRow(int intLCID, int intItemID, string strProductName, decimal numTotalUnit, decimal monUnitPrice, decimal monTotalPrice, string strHSCode, decimal numRatio) {
                QryCommercialLCDetailWithItemRow rowQryCommercialLCDetailWithItemRow = ((QryCommercialLCDetailWithItemRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        intLCID,
                        intItemID,
                        strProductName,
                        numTotalUnit,
                        monUnitPrice,
                        monTotalPrice,
                        strHSCode,
                        numRatio};
                rowQryCommercialLCDetailWithItemRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowQryCommercialLCDetailWithItemRow);
                return rowQryCommercialLCDetailWithItemRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                QryCommercialLCDetailWithItemDataTable cln = ((QryCommercialLCDetailWithItemDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new QryCommercialLCDetailWithItemDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnintLCID = base.Columns["intLCID"];
                this.columnintItemID = base.Columns["intItemID"];
                this.columnstrProductName = base.Columns["strProductName"];
                this.columnnumTotalUnit = base.Columns["numTotalUnit"];
                this.columnmonUnitPrice = base.Columns["monUnitPrice"];
                this.columnmonTotalPrice = base.Columns["monTotalPrice"];
                this.columnstrHSCode = base.Columns["strHSCode"];
                this.columnnumRatio = base.Columns["numRatio"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnintLCID = new global::System.Data.DataColumn("intLCID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintLCID);
                this.columnintItemID = new global::System.Data.DataColumn("intItemID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintItemID);
                this.columnstrProductName = new global::System.Data.DataColumn("strProductName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrProductName);
                this.columnnumTotalUnit = new global::System.Data.DataColumn("numTotalUnit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumTotalUnit);
                this.columnmonUnitPrice = new global::System.Data.DataColumn("monUnitPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmonUnitPrice);
                this.columnmonTotalPrice = new global::System.Data.DataColumn("monTotalPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmonTotalPrice);
                this.columnstrHSCode = new global::System.Data.DataColumn("strHSCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrHSCode);
                this.columnnumRatio = new global::System.Data.DataColumn("numRatio", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumRatio);
                this.columnstrProductName.AllowDBNull = false;
                this.columnstrProductName.MaxLength = 200;
                this.columnstrHSCode.MaxLength = 1000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QryCommercialLCDetailWithItemRow NewQryCommercialLCDetailWithItemRow() {
                return ((QryCommercialLCDetailWithItemRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new QryCommercialLCDetailWithItemRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(QryCommercialLCDetailWithItemRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.QryCommercialLCDetailWithItemRowChanged != null)) {
                    this.QryCommercialLCDetailWithItemRowChanged(this, new QryCommercialLCDetailWithItemRowChangeEvent(((QryCommercialLCDetailWithItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.QryCommercialLCDetailWithItemRowChanging != null)) {
                    this.QryCommercialLCDetailWithItemRowChanging(this, new QryCommercialLCDetailWithItemRowChangeEvent(((QryCommercialLCDetailWithItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.QryCommercialLCDetailWithItemRowDeleted != null)) {
                    this.QryCommercialLCDetailWithItemRowDeleted(this, new QryCommercialLCDetailWithItemRowChangeEvent(((QryCommercialLCDetailWithItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.QryCommercialLCDetailWithItemRowDeleting != null)) {
                    this.QryCommercialLCDetailWithItemRowDeleting(this, new QryCommercialLCDetailWithItemRowChangeEvent(((QryCommercialLCDetailWithItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveQryCommercialLCDetailWithItemRow(QryCommercialLCDetailWithItemRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LcTDS ds = new LcTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "QryCommercialLCDetailWithItemDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SprCommercialInstallmentInsertDataTable : global::System.Data.TypedTableBase<SprCommercialInstallmentInsertRow> {
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SprCommercialInstallmentInsertDataTable() {
                this.TableName = "SprCommercialInstallmentInsert";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SprCommercialInstallmentInsertDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SprCommercialInstallmentInsertDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SprCommercialInstallmentInsertRow this[int index] {
                get {
                    return ((SprCommercialInstallmentInsertRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SprCommercialInstallmentInsertRowChangeEventHandler SprCommercialInstallmentInsertRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SprCommercialInstallmentInsertRowChangeEventHandler SprCommercialInstallmentInsertRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SprCommercialInstallmentInsertRowChangeEventHandler SprCommercialInstallmentInsertRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SprCommercialInstallmentInsertRowChangeEventHandler SprCommercialInstallmentInsertRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSprCommercialInstallmentInsertRow(SprCommercialInstallmentInsertRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SprCommercialInstallmentInsertRow AddSprCommercialInstallmentInsertRow() {
                SprCommercialInstallmentInsertRow rowSprCommercialInstallmentInsertRow = ((SprCommercialInstallmentInsertRow)(this.NewRow()));
                object[] columnValuesArray = new object[0];
                rowSprCommercialInstallmentInsertRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSprCommercialInstallmentInsertRow);
                return rowSprCommercialInstallmentInsertRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SprCommercialInstallmentInsertDataTable cln = ((SprCommercialInstallmentInsertDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SprCommercialInstallmentInsertDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SprCommercialInstallmentInsertRow NewSprCommercialInstallmentInsertRow() {
                return ((SprCommercialInstallmentInsertRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SprCommercialInstallmentInsertRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SprCommercialInstallmentInsertRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SprCommercialInstallmentInsertRowChanged != null)) {
                    this.SprCommercialInstallmentInsertRowChanged(this, new SprCommercialInstallmentInsertRowChangeEvent(((SprCommercialInstallmentInsertRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SprCommercialInstallmentInsertRowChanging != null)) {
                    this.SprCommercialInstallmentInsertRowChanging(this, new SprCommercialInstallmentInsertRowChangeEvent(((SprCommercialInstallmentInsertRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SprCommercialInstallmentInsertRowDeleted != null)) {
                    this.SprCommercialInstallmentInsertRowDeleted(this, new SprCommercialInstallmentInsertRowChangeEvent(((SprCommercialInstallmentInsertRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SprCommercialInstallmentInsertRowDeleting != null)) {
                    this.SprCommercialInstallmentInsertRowDeleting(this, new SprCommercialInstallmentInsertRowChangeEvent(((SprCommercialInstallmentInsertRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSprCommercialInstallmentInsertRow(SprCommercialInstallmentInsertRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LcTDS ds = new LcTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SprCommercialInstallmentInsertDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SprCommercialGetLCInfoDataTable : global::System.Data.TypedTableBase<SprCommercialGetLCInfoRow> {
            
            private global::System.Data.DataColumn columnintLCID;
            
            private global::System.Data.DataColumn columnstrLCNumber;
            
            private global::System.Data.DataColumn columnintUnitID;
            
            private global::System.Data.DataColumn columnmonPIValue;
            
            private global::System.Data.DataColumn columnintShipmentTypeID;
            
            private global::System.Data.DataColumn columnintOurBankAccountID;
            
            private global::System.Data.DataColumn columnintCurrenyID;
            
            private global::System.Data.DataColumn columnintPaymentModeID;
            
            private global::System.Data.DataColumn columnnumInstallment;
            
            private global::System.Data.DataColumn columnnumInstallmentFrequency;
            
            private global::System.Data.DataColumn columndteStartData;
            
            private global::System.Data.DataColumn columnnumDays;
            
            private global::System.Data.DataColumn columnstrPOCode;
            
            private global::System.Data.DataColumn columnintBankID;
            
            private global::System.Data.DataColumn columnintBankBranchID;
            
            private global::System.Data.DataColumn columnstrBankName;
            
            private global::System.Data.DataColumn columnstrUnit;
            
            private global::System.Data.DataColumn columnstrBranchName;
            
            private global::System.Data.DataColumn columnstrCurrency;
            
            private global::System.Data.DataColumn columnstrAdd1;
            
            private global::System.Data.DataColumn columnstrAdd2;
            
            private global::System.Data.DataColumn columnstrModeName;
            
            private global::System.Data.DataColumn columnstrPaymentModeShortName;
            
            private global::System.Data.DataColumn columnintBankServiceID;
            
            private global::System.Data.DataColumn columnstrServeiceType;
            
            private global::System.Data.DataColumn columnstrPortName;
            
            private global::System.Data.DataColumn columnstrShipementType;
            
            private global::System.Data.DataColumn columnintShipment;
            
            private global::System.Data.DataColumn columnintSupplierID;
            
            private global::System.Data.DataColumn columnstrSuplierName;
            
            private global::System.Data.DataColumn columnstrInsuranceCoverNoteNumber;
            
            private global::System.Data.DataColumn columnintInsuranceCompanyID;
            
            private global::System.Data.DataColumn columnstrCompanyName;
            
            private global::System.Data.DataColumn columnysnHaveTollerence;
            
            private global::System.Data.DataColumn columnnumTollerence;
            
            private global::System.Data.DataColumn columnstrPlaceOfShipment;
            
            private global::System.Data.DataColumn columnintDistinationPort;
            
            private global::System.Data.DataColumn columnysnHasPertialShipment;
            
            private global::System.Data.DataColumn columnstrTermsOfShipment;
            
            private global::System.Data.DataColumn columndteLastShipment;
            
            private global::System.Data.DataColumn columndteEndDate;
            
            private global::System.Data.DataColumn columnysnPSIApplicable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SprCommercialGetLCInfoDataTable() {
                this.TableName = "SprCommercialGetLCInfo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SprCommercialGetLCInfoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SprCommercialGetLCInfoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intLCIDColumn {
                get {
                    return this.columnintLCID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strLCNumberColumn {
                get {
                    return this.columnstrLCNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intUnitIDColumn {
                get {
                    return this.columnintUnitID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn monPIValueColumn {
                get {
                    return this.columnmonPIValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intShipmentTypeIDColumn {
                get {
                    return this.columnintShipmentTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intOurBankAccountIDColumn {
                get {
                    return this.columnintOurBankAccountID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intCurrenyIDColumn {
                get {
                    return this.columnintCurrenyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intPaymentModeIDColumn {
                get {
                    return this.columnintPaymentModeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn numInstallmentColumn {
                get {
                    return this.columnnumInstallment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn numInstallmentFrequencyColumn {
                get {
                    return this.columnnumInstallmentFrequency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dteStartDataColumn {
                get {
                    return this.columndteStartData;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn numDaysColumn {
                get {
                    return this.columnnumDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strPOCodeColumn {
                get {
                    return this.columnstrPOCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intBankIDColumn {
                get {
                    return this.columnintBankID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intBankBranchIDColumn {
                get {
                    return this.columnintBankBranchID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strBankNameColumn {
                get {
                    return this.columnstrBankName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strUnitColumn {
                get {
                    return this.columnstrUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strBranchNameColumn {
                get {
                    return this.columnstrBranchName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strCurrencyColumn {
                get {
                    return this.columnstrCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strAdd1Column {
                get {
                    return this.columnstrAdd1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strAdd2Column {
                get {
                    return this.columnstrAdd2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strModeNameColumn {
                get {
                    return this.columnstrModeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strPaymentModeShortNameColumn {
                get {
                    return this.columnstrPaymentModeShortName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intBankServiceIDColumn {
                get {
                    return this.columnintBankServiceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strServeiceTypeColumn {
                get {
                    return this.columnstrServeiceType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strPortNameColumn {
                get {
                    return this.columnstrPortName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strShipementTypeColumn {
                get {
                    return this.columnstrShipementType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intShipmentColumn {
                get {
                    return this.columnintShipment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intSupplierIDColumn {
                get {
                    return this.columnintSupplierID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strSuplierNameColumn {
                get {
                    return this.columnstrSuplierName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strInsuranceCoverNoteNumberColumn {
                get {
                    return this.columnstrInsuranceCoverNoteNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intInsuranceCompanyIDColumn {
                get {
                    return this.columnintInsuranceCompanyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strCompanyNameColumn {
                get {
                    return this.columnstrCompanyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ysnHaveTollerenceColumn {
                get {
                    return this.columnysnHaveTollerence;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn numTollerenceColumn {
                get {
                    return this.columnnumTollerence;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strPlaceOfShipmentColumn {
                get {
                    return this.columnstrPlaceOfShipment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intDistinationPortColumn {
                get {
                    return this.columnintDistinationPort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ysnHasPertialShipmentColumn {
                get {
                    return this.columnysnHasPertialShipment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strTermsOfShipmentColumn {
                get {
                    return this.columnstrTermsOfShipment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dteLastShipmentColumn {
                get {
                    return this.columndteLastShipment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dteEndDateColumn {
                get {
                    return this.columndteEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ysnPSIApplicableColumn {
                get {
                    return this.columnysnPSIApplicable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SprCommercialGetLCInfoRow this[int index] {
                get {
                    return ((SprCommercialGetLCInfoRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SprCommercialGetLCInfoRowChangeEventHandler SprCommercialGetLCInfoRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SprCommercialGetLCInfoRowChangeEventHandler SprCommercialGetLCInfoRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SprCommercialGetLCInfoRowChangeEventHandler SprCommercialGetLCInfoRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SprCommercialGetLCInfoRowChangeEventHandler SprCommercialGetLCInfoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSprCommercialGetLCInfoRow(SprCommercialGetLCInfoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SprCommercialGetLCInfoRow AddSprCommercialGetLCInfoRow(
                        int intLCID, 
                        string strLCNumber, 
                        int intUnitID, 
                        decimal monPIValue, 
                        int intShipmentTypeID, 
                        int intOurBankAccountID, 
                        int intCurrenyID, 
                        int intPaymentModeID, 
                        int numInstallment, 
                        int numInstallmentFrequency, 
                        System.DateTime dteStartData, 
                        int numDays, 
                        string strPOCode, 
                        int intBankID, 
                        int intBankBranchID, 
                        string strBankName, 
                        string strUnit, 
                        string strBranchName, 
                        string strCurrency, 
                        string strAdd1, 
                        string strAdd2, 
                        string strModeName, 
                        string strPaymentModeShortName, 
                        int intBankServiceID, 
                        string strServeiceType, 
                        string strPortName, 
                        string strShipementType, 
                        int intShipment, 
                        int intSupplierID, 
                        string strSuplierName, 
                        string strInsuranceCoverNoteNumber, 
                        int intInsuranceCompanyID, 
                        string strCompanyName, 
                        bool ysnHaveTollerence, 
                        decimal numTollerence, 
                        string strPlaceOfShipment, 
                        int intDistinationPort, 
                        bool ysnHasPertialShipment, 
                        string strTermsOfShipment, 
                        System.DateTime dteLastShipment, 
                        System.DateTime dteEndDate, 
                        bool ysnPSIApplicable) {
                SprCommercialGetLCInfoRow rowSprCommercialGetLCInfoRow = ((SprCommercialGetLCInfoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        intLCID,
                        strLCNumber,
                        intUnitID,
                        monPIValue,
                        intShipmentTypeID,
                        intOurBankAccountID,
                        intCurrenyID,
                        intPaymentModeID,
                        numInstallment,
                        numInstallmentFrequency,
                        dteStartData,
                        numDays,
                        strPOCode,
                        intBankID,
                        intBankBranchID,
                        strBankName,
                        strUnit,
                        strBranchName,
                        strCurrency,
                        strAdd1,
                        strAdd2,
                        strModeName,
                        strPaymentModeShortName,
                        intBankServiceID,
                        strServeiceType,
                        strPortName,
                        strShipementType,
                        intShipment,
                        intSupplierID,
                        strSuplierName,
                        strInsuranceCoverNoteNumber,
                        intInsuranceCompanyID,
                        strCompanyName,
                        ysnHaveTollerence,
                        numTollerence,
                        strPlaceOfShipment,
                        intDistinationPort,
                        ysnHasPertialShipment,
                        strTermsOfShipment,
                        dteLastShipment,
                        dteEndDate,
                        ysnPSIApplicable};
                rowSprCommercialGetLCInfoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSprCommercialGetLCInfoRow);
                return rowSprCommercialGetLCInfoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SprCommercialGetLCInfoRow FindByintLCID(int intLCID) {
                return ((SprCommercialGetLCInfoRow)(this.Rows.Find(new object[] {
                            intLCID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SprCommercialGetLCInfoDataTable cln = ((SprCommercialGetLCInfoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SprCommercialGetLCInfoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnintLCID = base.Columns["intLCID"];
                this.columnstrLCNumber = base.Columns["strLCNumber"];
                this.columnintUnitID = base.Columns["intUnitID"];
                this.columnmonPIValue = base.Columns["monPIValue"];
                this.columnintShipmentTypeID = base.Columns["intShipmentTypeID"];
                this.columnintOurBankAccountID = base.Columns["intOurBankAccountID"];
                this.columnintCurrenyID = base.Columns["intCurrenyID"];
                this.columnintPaymentModeID = base.Columns["intPaymentModeID"];
                this.columnnumInstallment = base.Columns["numInstallment"];
                this.columnnumInstallmentFrequency = base.Columns["numInstallmentFrequency"];
                this.columndteStartData = base.Columns["dteStartData"];
                this.columnnumDays = base.Columns["numDays"];
                this.columnstrPOCode = base.Columns["strPOCode"];
                this.columnintBankID = base.Columns["intBankID"];
                this.columnintBankBranchID = base.Columns["intBankBranchID"];
                this.columnstrBankName = base.Columns["strBankName"];
                this.columnstrUnit = base.Columns["strUnit"];
                this.columnstrBranchName = base.Columns["strBranchName"];
                this.columnstrCurrency = base.Columns["strCurrency"];
                this.columnstrAdd1 = base.Columns["strAdd1"];
                this.columnstrAdd2 = base.Columns["strAdd2"];
                this.columnstrModeName = base.Columns["strModeName"];
                this.columnstrPaymentModeShortName = base.Columns["strPaymentModeShortName"];
                this.columnintBankServiceID = base.Columns["intBankServiceID"];
                this.columnstrServeiceType = base.Columns["strServeiceType"];
                this.columnstrPortName = base.Columns["strPortName"];
                this.columnstrShipementType = base.Columns["strShipementType"];
                this.columnintShipment = base.Columns["intShipment"];
                this.columnintSupplierID = base.Columns["intSupplierID"];
                this.columnstrSuplierName = base.Columns["strSuplierName"];
                this.columnstrInsuranceCoverNoteNumber = base.Columns["strInsuranceCoverNoteNumber"];
                this.columnintInsuranceCompanyID = base.Columns["intInsuranceCompanyID"];
                this.columnstrCompanyName = base.Columns["strCompanyName"];
                this.columnysnHaveTollerence = base.Columns["ysnHaveTollerence"];
                this.columnnumTollerence = base.Columns["numTollerence"];
                this.columnstrPlaceOfShipment = base.Columns["strPlaceOfShipment"];
                this.columnintDistinationPort = base.Columns["intDistinationPort"];
                this.columnysnHasPertialShipment = base.Columns["ysnHasPertialShipment"];
                this.columnstrTermsOfShipment = base.Columns["strTermsOfShipment"];
                this.columndteLastShipment = base.Columns["dteLastShipment"];
                this.columndteEndDate = base.Columns["dteEndDate"];
                this.columnysnPSIApplicable = base.Columns["ysnPSIApplicable"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnintLCID = new global::System.Data.DataColumn("intLCID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintLCID);
                this.columnstrLCNumber = new global::System.Data.DataColumn("strLCNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrLCNumber);
                this.columnintUnitID = new global::System.Data.DataColumn("intUnitID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintUnitID);
                this.columnmonPIValue = new global::System.Data.DataColumn("monPIValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmonPIValue);
                this.columnintShipmentTypeID = new global::System.Data.DataColumn("intShipmentTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintShipmentTypeID);
                this.columnintOurBankAccountID = new global::System.Data.DataColumn("intOurBankAccountID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintOurBankAccountID);
                this.columnintCurrenyID = new global::System.Data.DataColumn("intCurrenyID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintCurrenyID);
                this.columnintPaymentModeID = new global::System.Data.DataColumn("intPaymentModeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintPaymentModeID);
                this.columnnumInstallment = new global::System.Data.DataColumn("numInstallment", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumInstallment);
                this.columnnumInstallmentFrequency = new global::System.Data.DataColumn("numInstallmentFrequency", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumInstallmentFrequency);
                this.columndteStartData = new global::System.Data.DataColumn("dteStartData", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndteStartData);
                this.columnnumDays = new global::System.Data.DataColumn("numDays", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumDays);
                this.columnstrPOCode = new global::System.Data.DataColumn("strPOCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrPOCode);
                this.columnintBankID = new global::System.Data.DataColumn("intBankID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintBankID);
                this.columnintBankBranchID = new global::System.Data.DataColumn("intBankBranchID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintBankBranchID);
                this.columnstrBankName = new global::System.Data.DataColumn("strBankName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrBankName);
                this.columnstrUnit = new global::System.Data.DataColumn("strUnit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrUnit);
                this.columnstrBranchName = new global::System.Data.DataColumn("strBranchName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrBranchName);
                this.columnstrCurrency = new global::System.Data.DataColumn("strCurrency", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrCurrency);
                this.columnstrAdd1 = new global::System.Data.DataColumn("strAdd1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrAdd1);
                this.columnstrAdd2 = new global::System.Data.DataColumn("strAdd2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrAdd2);
                this.columnstrModeName = new global::System.Data.DataColumn("strModeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrModeName);
                this.columnstrPaymentModeShortName = new global::System.Data.DataColumn("strPaymentModeShortName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrPaymentModeShortName);
                this.columnintBankServiceID = new global::System.Data.DataColumn("intBankServiceID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintBankServiceID);
                this.columnstrServeiceType = new global::System.Data.DataColumn("strServeiceType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrServeiceType);
                this.columnstrPortName = new global::System.Data.DataColumn("strPortName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrPortName);
                this.columnstrShipementType = new global::System.Data.DataColumn("strShipementType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrShipementType);
                this.columnintShipment = new global::System.Data.DataColumn("intShipment", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintShipment);
                this.columnintSupplierID = new global::System.Data.DataColumn("intSupplierID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintSupplierID);
                this.columnstrSuplierName = new global::System.Data.DataColumn("strSuplierName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrSuplierName);
                this.columnstrInsuranceCoverNoteNumber = new global::System.Data.DataColumn("strInsuranceCoverNoteNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrInsuranceCoverNoteNumber);
                this.columnintInsuranceCompanyID = new global::System.Data.DataColumn("intInsuranceCompanyID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintInsuranceCompanyID);
                this.columnstrCompanyName = new global::System.Data.DataColumn("strCompanyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrCompanyName);
                this.columnysnHaveTollerence = new global::System.Data.DataColumn("ysnHaveTollerence", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnysnHaveTollerence);
                this.columnnumTollerence = new global::System.Data.DataColumn("numTollerence", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumTollerence);
                this.columnstrPlaceOfShipment = new global::System.Data.DataColumn("strPlaceOfShipment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrPlaceOfShipment);
                this.columnintDistinationPort = new global::System.Data.DataColumn("intDistinationPort", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintDistinationPort);
                this.columnysnHasPertialShipment = new global::System.Data.DataColumn("ysnHasPertialShipment", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnysnHasPertialShipment);
                this.columnstrTermsOfShipment = new global::System.Data.DataColumn("strTermsOfShipment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrTermsOfShipment);
                this.columndteLastShipment = new global::System.Data.DataColumn("dteLastShipment", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndteLastShipment);
                this.columndteEndDate = new global::System.Data.DataColumn("dteEndDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndteEndDate);
                this.columnysnPSIApplicable = new global::System.Data.DataColumn("ysnPSIApplicable", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnysnPSIApplicable);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnintLCID}, true));
                this.columnintLCID.AllowDBNull = false;
                this.columnintLCID.Unique = true;
                this.columnstrLCNumber.MaxLength = 1000;
                this.columnstrPOCode.MaxLength = 100;
                this.columnstrBankName.AllowDBNull = false;
                this.columnstrBankName.MaxLength = 100;
                this.columnstrUnit.AllowDBNull = false;
                this.columnstrUnit.MaxLength = 50;
                this.columnstrBranchName.AllowDBNull = false;
                this.columnstrBranchName.MaxLength = 100;
                this.columnstrCurrency.MaxLength = 100;
                this.columnstrAdd1.MaxLength = 1000;
                this.columnstrAdd2.MaxLength = 1000;
                this.columnstrModeName.MaxLength = 100;
                this.columnstrPaymentModeShortName.MaxLength = 10;
                this.columnstrServeiceType.MaxLength = 50;
                this.columnstrPortName.MaxLength = 1000;
                this.columnstrShipementType.MaxLength = 1000;
                this.columnstrSuplierName.AllowDBNull = false;
                this.columnstrSuplierName.MaxLength = 200;
                this.columnstrInsuranceCoverNoteNumber.MaxLength = 1000;
                this.columnstrCompanyName.MaxLength = 1000;
                this.columnstrPlaceOfShipment.MaxLength = 1000;
                this.columnstrTermsOfShipment.MaxLength = 1000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SprCommercialGetLCInfoRow NewSprCommercialGetLCInfoRow() {
                return ((SprCommercialGetLCInfoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SprCommercialGetLCInfoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SprCommercialGetLCInfoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SprCommercialGetLCInfoRowChanged != null)) {
                    this.SprCommercialGetLCInfoRowChanged(this, new SprCommercialGetLCInfoRowChangeEvent(((SprCommercialGetLCInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SprCommercialGetLCInfoRowChanging != null)) {
                    this.SprCommercialGetLCInfoRowChanging(this, new SprCommercialGetLCInfoRowChangeEvent(((SprCommercialGetLCInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SprCommercialGetLCInfoRowDeleted != null)) {
                    this.SprCommercialGetLCInfoRowDeleted(this, new SprCommercialGetLCInfoRowChangeEvent(((SprCommercialGetLCInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SprCommercialGetLCInfoRowDeleting != null)) {
                    this.SprCommercialGetLCInfoRowDeleting(this, new SprCommercialGetLCInfoRowChangeEvent(((SprCommercialGetLCInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSprCommercialGetLCInfoRow(SprCommercialGetLCInfoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LcTDS ds = new LcTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SprCommercialGetLCInfoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SprCommercialGetLCDetailsListDataTable : global::System.Data.TypedTableBase<SprCommercialGetLCDetailsListRow> {
            
            private global::System.Data.DataColumn columnintLCID;
            
            private global::System.Data.DataColumn columnintItemID;
            
            private global::System.Data.DataColumn columnnumTotalUnit;
            
            private global::System.Data.DataColumn columnmonUnitPrice;
            
            private global::System.Data.DataColumn columnmonTotalPrice;
            
            private global::System.Data.DataColumn columnstrHSCode;
            
            private global::System.Data.DataColumn columnnumRatio;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SprCommercialGetLCDetailsListDataTable() {
                this.TableName = "SprCommercialGetLCDetailsList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SprCommercialGetLCDetailsListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SprCommercialGetLCDetailsListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intLCIDColumn {
                get {
                    return this.columnintLCID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intItemIDColumn {
                get {
                    return this.columnintItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn numTotalUnitColumn {
                get {
                    return this.columnnumTotalUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn monUnitPriceColumn {
                get {
                    return this.columnmonUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn monTotalPriceColumn {
                get {
                    return this.columnmonTotalPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strHSCodeColumn {
                get {
                    return this.columnstrHSCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn numRatioColumn {
                get {
                    return this.columnnumRatio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SprCommercialGetLCDetailsListRow this[int index] {
                get {
                    return ((SprCommercialGetLCDetailsListRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SprCommercialGetLCDetailsListRowChangeEventHandler SprCommercialGetLCDetailsListRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SprCommercialGetLCDetailsListRowChangeEventHandler SprCommercialGetLCDetailsListRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SprCommercialGetLCDetailsListRowChangeEventHandler SprCommercialGetLCDetailsListRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SprCommercialGetLCDetailsListRowChangeEventHandler SprCommercialGetLCDetailsListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSprCommercialGetLCDetailsListRow(SprCommercialGetLCDetailsListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SprCommercialGetLCDetailsListRow AddSprCommercialGetLCDetailsListRow(int intLCID, int intItemID, decimal numTotalUnit, decimal monUnitPrice, decimal monTotalPrice, string strHSCode, decimal numRatio) {
                SprCommercialGetLCDetailsListRow rowSprCommercialGetLCDetailsListRow = ((SprCommercialGetLCDetailsListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        intLCID,
                        intItemID,
                        numTotalUnit,
                        monUnitPrice,
                        monTotalPrice,
                        strHSCode,
                        numRatio};
                rowSprCommercialGetLCDetailsListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSprCommercialGetLCDetailsListRow);
                return rowSprCommercialGetLCDetailsListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SprCommercialGetLCDetailsListDataTable cln = ((SprCommercialGetLCDetailsListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SprCommercialGetLCDetailsListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnintLCID = base.Columns["intLCID"];
                this.columnintItemID = base.Columns["intItemID"];
                this.columnnumTotalUnit = base.Columns["numTotalUnit"];
                this.columnmonUnitPrice = base.Columns["monUnitPrice"];
                this.columnmonTotalPrice = base.Columns["monTotalPrice"];
                this.columnstrHSCode = base.Columns["strHSCode"];
                this.columnnumRatio = base.Columns["numRatio"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnintLCID = new global::System.Data.DataColumn("intLCID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintLCID);
                this.columnintItemID = new global::System.Data.DataColumn("intItemID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintItemID);
                this.columnnumTotalUnit = new global::System.Data.DataColumn("numTotalUnit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumTotalUnit);
                this.columnmonUnitPrice = new global::System.Data.DataColumn("monUnitPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmonUnitPrice);
                this.columnmonTotalPrice = new global::System.Data.DataColumn("monTotalPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmonTotalPrice);
                this.columnstrHSCode = new global::System.Data.DataColumn("strHSCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrHSCode);
                this.columnnumRatio = new global::System.Data.DataColumn("numRatio", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumRatio);
                this.columnstrHSCode.MaxLength = 1000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SprCommercialGetLCDetailsListRow NewSprCommercialGetLCDetailsListRow() {
                return ((SprCommercialGetLCDetailsListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SprCommercialGetLCDetailsListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SprCommercialGetLCDetailsListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SprCommercialGetLCDetailsListRowChanged != null)) {
                    this.SprCommercialGetLCDetailsListRowChanged(this, new SprCommercialGetLCDetailsListRowChangeEvent(((SprCommercialGetLCDetailsListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SprCommercialGetLCDetailsListRowChanging != null)) {
                    this.SprCommercialGetLCDetailsListRowChanging(this, new SprCommercialGetLCDetailsListRowChangeEvent(((SprCommercialGetLCDetailsListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SprCommercialGetLCDetailsListRowDeleted != null)) {
                    this.SprCommercialGetLCDetailsListRowDeleted(this, new SprCommercialGetLCDetailsListRowChangeEvent(((SprCommercialGetLCDetailsListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SprCommercialGetLCDetailsListRowDeleting != null)) {
                    this.SprCommercialGetLCDetailsListRowDeleting(this, new SprCommercialGetLCDetailsListRowChangeEvent(((SprCommercialGetLCDetailsListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSprCommercialGetLCDetailsListRow(SprCommercialGetLCDetailsListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LcTDS ds = new LcTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SprCommercialGetLCDetailsListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SprCommercialPOEditDataTable : global::System.Data.TypedTableBase<SprCommercialPOEditRow> {
            
            private global::System.Data.DataColumn columnstrPaymentAttID;
            
            private global::System.Data.DataColumn columnmonAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SprCommercialPOEditDataTable() {
                this.TableName = "SprCommercialPOEdit";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SprCommercialPOEditDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SprCommercialPOEditDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strPaymentAttIDColumn {
                get {
                    return this.columnstrPaymentAttID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn monAmountColumn {
                get {
                    return this.columnmonAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SprCommercialPOEditRow this[int index] {
                get {
                    return ((SprCommercialPOEditRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SprCommercialPOEditRowChangeEventHandler SprCommercialPOEditRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SprCommercialPOEditRowChangeEventHandler SprCommercialPOEditRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SprCommercialPOEditRowChangeEventHandler SprCommercialPOEditRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SprCommercialPOEditRowChangeEventHandler SprCommercialPOEditRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSprCommercialPOEditRow(SprCommercialPOEditRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SprCommercialPOEditRow AddSprCommercialPOEditRow(string strPaymentAttID, decimal monAmount) {
                SprCommercialPOEditRow rowSprCommercialPOEditRow = ((SprCommercialPOEditRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        strPaymentAttID,
                        monAmount};
                rowSprCommercialPOEditRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSprCommercialPOEditRow);
                return rowSprCommercialPOEditRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SprCommercialPOEditDataTable cln = ((SprCommercialPOEditDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SprCommercialPOEditDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnstrPaymentAttID = base.Columns["strPaymentAttID"];
                this.columnmonAmount = base.Columns["monAmount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnstrPaymentAttID = new global::System.Data.DataColumn("strPaymentAttID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrPaymentAttID);
                this.columnmonAmount = new global::System.Data.DataColumn("monAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmonAmount);
                this.columnstrPaymentAttID.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SprCommercialPOEditRow NewSprCommercialPOEditRow() {
                return ((SprCommercialPOEditRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SprCommercialPOEditRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SprCommercialPOEditRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SprCommercialPOEditRowChanged != null)) {
                    this.SprCommercialPOEditRowChanged(this, new SprCommercialPOEditRowChangeEvent(((SprCommercialPOEditRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SprCommercialPOEditRowChanging != null)) {
                    this.SprCommercialPOEditRowChanging(this, new SprCommercialPOEditRowChangeEvent(((SprCommercialPOEditRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SprCommercialPOEditRowDeleted != null)) {
                    this.SprCommercialPOEditRowDeleted(this, new SprCommercialPOEditRowChangeEvent(((SprCommercialPOEditRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SprCommercialPOEditRowDeleting != null)) {
                    this.SprCommercialPOEditRowDeleting(this, new SprCommercialPOEditRowChangeEvent(((SprCommercialPOEditRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSprCommercialPOEditRow(SprCommercialPOEditRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LcTDS ds = new LcTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SprCommercialPOEditDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TblCommercialLCRow : global::System.Data.DataRow {
            
            private TblCommercialLCDataTable tableTblCommercialLC;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TblCommercialLCRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTblCommercialLC = ((TblCommercialLCDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intLCID {
                get {
                    return ((int)(this[this.tableTblCommercialLC.intLCIDColumn]));
                }
                set {
                    this[this.tableTblCommercialLC.intLCIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intIndentID {
                get {
                    try {
                        return ((int)(this[this.tableTblCommercialLC.intIndentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intIndentID\' in table \'TblCommercialLC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblCommercialLC.intIndentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strLCNumber {
                get {
                    try {
                        return ((string)(this[this.tableTblCommercialLC.strLCNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strLCNumber\' in table \'TblCommercialLC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblCommercialLC.strLCNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intUnitID {
                get {
                    try {
                        return ((int)(this[this.tableTblCommercialLC.intUnitIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intUnitID\' in table \'TblCommercialLC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblCommercialLC.intUnitIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strInsuranceCoverNoteNumber {
                get {
                    try {
                        return ((string)(this[this.tableTblCommercialLC.strInsuranceCoverNoteNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strInsuranceCoverNoteNumber\' in table \'TblCommercialLC\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblCommercialLC.strInsuranceCoverNoteNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intSupplierID {
                get {
                    try {
                        return ((int)(this[this.tableTblCommercialLC.intSupplierIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intSupplierID\' in table \'TblCommercialLC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblCommercialLC.intSupplierIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal monPIValue {
                get {
                    try {
                        return ((decimal)(this[this.tableTblCommercialLC.monPIValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'monPIValue\' in table \'TblCommercialLC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblCommercialLC.monPIValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intShipment {
                get {
                    try {
                        return ((int)(this[this.tableTblCommercialLC.intShipmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intShipment\' in table \'TblCommercialLC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblCommercialLC.intShipmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intShipmentTypeID {
                get {
                    try {
                        return ((int)(this[this.tableTblCommercialLC.intShipmentTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intShipmentTypeID\' in table \'TblCommercialLC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblCommercialLC.intShipmentTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intOurBankAccountID {
                get {
                    try {
                        return ((int)(this[this.tableTblCommercialLC.intOurBankAccountIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intOurBankAccountID\' in table \'TblCommercialLC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblCommercialLC.intOurBankAccountIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal monToalAmountOFPI {
                get {
                    try {
                        return ((decimal)(this[this.tableTblCommercialLC.monToalAmountOFPIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'monToalAmountOFPI\' in table \'TblCommercialLC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblCommercialLC.monToalAmountOFPIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intCurrenyID {
                get {
                    try {
                        return ((int)(this[this.tableTblCommercialLC.intCurrenyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intCurrenyID\' in table \'TblCommercialLC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblCommercialLC.intCurrenyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal numExRate {
                get {
                    try {
                        return ((decimal)(this[this.tableTblCommercialLC.numExRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'numExRate\' in table \'TblCommercialLC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblCommercialLC.numExRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal monTotalAmountBDT {
                get {
                    try {
                        return ((decimal)(this[this.tableTblCommercialLC.monTotalAmountBDTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'monTotalAmountBDT\' in table \'TblCommercialLC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblCommercialLC.monTotalAmountBDTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ysnEnable {
                get {
                    return ((bool)(this[this.tableTblCommercialLC.ysnEnableColumn]));
                }
                set {
                    this[this.tableTblCommercialLC.ysnEnableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ysnDeleted {
                get {
                    try {
                        return ((bool)(this[this.tableTblCommercialLC.ysnDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ysnDeleted\' in table \'TblCommercialLC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblCommercialLC.ysnDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intInsertedBy {
                get {
                    try {
                        return ((int)(this[this.tableTblCommercialLC.intInsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intInsertedBy\' in table \'TblCommercialLC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblCommercialLC.intInsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime dteInsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTblCommercialLC.dteInsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dteInsertedDate\' in table \'TblCommercialLC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblCommercialLC.dteInsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intLastActionBy {
                get {
                    try {
                        return ((int)(this[this.tableTblCommercialLC.intLastActionByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intLastActionBy\' in table \'TblCommercialLC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblCommercialLC.intLastActionByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime dteLastActionDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTblCommercialLC.dteLastActionDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dteLastActionDate\' in table \'TblCommercialLC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblCommercialLC.dteLastActionDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intPaymentModeID {
                get {
                    try {
                        return ((int)(this[this.tableTblCommercialLC.intPaymentModeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intPaymentModeID\' in table \'TblCommercialLC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblCommercialLC.intPaymentModeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int numInstallment {
                get {
                    try {
                        return ((int)(this[this.tableTblCommercialLC.numInstallmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'numInstallment\' in table \'TblCommercialLC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblCommercialLC.numInstallmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int numInstallmentFrequency {
                get {
                    try {
                        return ((int)(this[this.tableTblCommercialLC.numInstallmentFrequencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'numInstallmentFrequency\' in table \'TblCommercialLC\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableTblCommercialLC.numInstallmentFrequencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime dteStartData {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTblCommercialLC.dteStartDataColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dteStartData\' in table \'TblCommercialLC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblCommercialLC.dteStartDataColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int numDays {
                get {
                    try {
                        return ((int)(this[this.tableTblCommercialLC.numDaysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'numDays\' in table \'TblCommercialLC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblCommercialLC.numDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strIndentNumbers {
                get {
                    try {
                        return ((string)(this[this.tableTblCommercialLC.strIndentNumbersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strIndentNumbers\' in table \'TblCommercialLC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblCommercialLC.strIndentNumbersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strPOCode {
                get {
                    try {
                        return ((string)(this[this.tableTblCommercialLC.strPOCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strPOCode\' in table \'TblCommercialLC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblCommercialLC.strPOCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intInsuranceCompanyID {
                get {
                    try {
                        return ((int)(this[this.tableTblCommercialLC.intInsuranceCompanyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intInsuranceCompanyID\' in table \'TblCommercialLC\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableTblCommercialLC.intInsuranceCompanyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intCOALC {
                get {
                    try {
                        return ((int)(this[this.tableTblCommercialLC.intCOALCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intCOALC\' in table \'TblCommercialLC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblCommercialLC.intCOALCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intCOABankAccount {
                get {
                    try {
                        return ((int)(this[this.tableTblCommercialLC.intCOABankAccountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intCOABankAccount\' in table \'TblCommercialLC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblCommercialLC.intCOABankAccountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ysnConfirmed {
                get {
                    try {
                        return ((bool)(this[this.tableTblCommercialLC.ysnConfirmedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ysnConfirmed\' in table \'TblCommercialLC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblCommercialLC.ysnConfirmedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime dteEndDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTblCommercialLC.dteEndDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dteEndDate\' in table \'TblCommercialLC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblCommercialLC.dteEndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ysn2ndQuaterNeed {
                get {
                    try {
                        return ((bool)(this[this.tableTblCommercialLC.ysn2ndQuaterNeedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ysn2ndQuaterNeed\' in table \'TblCommercialLC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblCommercialLC.ysn2ndQuaterNeedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ysn2ndQuaterPaid {
                get {
                    try {
                        return ((bool)(this[this.tableTblCommercialLC.ysn2ndQuaterPaidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ysn2ndQuaterPaid\' in table \'TblCommercialLC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblCommercialLC.ysn2ndQuaterPaidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ysnHasPG {
                get {
                    try {
                        return ((bool)(this[this.tableTblCommercialLC.ysnHasPGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ysnHasPG\' in table \'TblCommercialLC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblCommercialLC.ysnHasPGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal numPGPer {
                get {
                    try {
                        return ((decimal)(this[this.tableTblCommercialLC.numPGPerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'numPGPer\' in table \'TblCommercialLC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblCommercialLC.numPGPerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintIndentIDNull() {
                return this.IsNull(this.tableTblCommercialLC.intIndentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintIndentIDNull() {
                this[this.tableTblCommercialLC.intIndentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrLCNumberNull() {
                return this.IsNull(this.tableTblCommercialLC.strLCNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrLCNumberNull() {
                this[this.tableTblCommercialLC.strLCNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintUnitIDNull() {
                return this.IsNull(this.tableTblCommercialLC.intUnitIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintUnitIDNull() {
                this[this.tableTblCommercialLC.intUnitIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrInsuranceCoverNoteNumberNull() {
                return this.IsNull(this.tableTblCommercialLC.strInsuranceCoverNoteNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrInsuranceCoverNoteNumberNull() {
                this[this.tableTblCommercialLC.strInsuranceCoverNoteNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintSupplierIDNull() {
                return this.IsNull(this.tableTblCommercialLC.intSupplierIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintSupplierIDNull() {
                this[this.tableTblCommercialLC.intSupplierIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmonPIValueNull() {
                return this.IsNull(this.tableTblCommercialLC.monPIValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmonPIValueNull() {
                this[this.tableTblCommercialLC.monPIValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintShipmentNull() {
                return this.IsNull(this.tableTblCommercialLC.intShipmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintShipmentNull() {
                this[this.tableTblCommercialLC.intShipmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintShipmentTypeIDNull() {
                return this.IsNull(this.tableTblCommercialLC.intShipmentTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintShipmentTypeIDNull() {
                this[this.tableTblCommercialLC.intShipmentTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintOurBankAccountIDNull() {
                return this.IsNull(this.tableTblCommercialLC.intOurBankAccountIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintOurBankAccountIDNull() {
                this[this.tableTblCommercialLC.intOurBankAccountIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmonToalAmountOFPINull() {
                return this.IsNull(this.tableTblCommercialLC.monToalAmountOFPIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmonToalAmountOFPINull() {
                this[this.tableTblCommercialLC.monToalAmountOFPIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintCurrenyIDNull() {
                return this.IsNull(this.tableTblCommercialLC.intCurrenyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintCurrenyIDNull() {
                this[this.tableTblCommercialLC.intCurrenyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnumExRateNull() {
                return this.IsNull(this.tableTblCommercialLC.numExRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnumExRateNull() {
                this[this.tableTblCommercialLC.numExRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmonTotalAmountBDTNull() {
                return this.IsNull(this.tableTblCommercialLC.monTotalAmountBDTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmonTotalAmountBDTNull() {
                this[this.tableTblCommercialLC.monTotalAmountBDTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsysnDeletedNull() {
                return this.IsNull(this.tableTblCommercialLC.ysnDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetysnDeletedNull() {
                this[this.tableTblCommercialLC.ysnDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintInsertedByNull() {
                return this.IsNull(this.tableTblCommercialLC.intInsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintInsertedByNull() {
                this[this.tableTblCommercialLC.intInsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdteInsertedDateNull() {
                return this.IsNull(this.tableTblCommercialLC.dteInsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdteInsertedDateNull() {
                this[this.tableTblCommercialLC.dteInsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintLastActionByNull() {
                return this.IsNull(this.tableTblCommercialLC.intLastActionByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintLastActionByNull() {
                this[this.tableTblCommercialLC.intLastActionByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdteLastActionDateNull() {
                return this.IsNull(this.tableTblCommercialLC.dteLastActionDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdteLastActionDateNull() {
                this[this.tableTblCommercialLC.dteLastActionDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintPaymentModeIDNull() {
                return this.IsNull(this.tableTblCommercialLC.intPaymentModeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintPaymentModeIDNull() {
                this[this.tableTblCommercialLC.intPaymentModeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnumInstallmentNull() {
                return this.IsNull(this.tableTblCommercialLC.numInstallmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnumInstallmentNull() {
                this[this.tableTblCommercialLC.numInstallmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnumInstallmentFrequencyNull() {
                return this.IsNull(this.tableTblCommercialLC.numInstallmentFrequencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnumInstallmentFrequencyNull() {
                this[this.tableTblCommercialLC.numInstallmentFrequencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdteStartDataNull() {
                return this.IsNull(this.tableTblCommercialLC.dteStartDataColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdteStartDataNull() {
                this[this.tableTblCommercialLC.dteStartDataColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnumDaysNull() {
                return this.IsNull(this.tableTblCommercialLC.numDaysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnumDaysNull() {
                this[this.tableTblCommercialLC.numDaysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrIndentNumbersNull() {
                return this.IsNull(this.tableTblCommercialLC.strIndentNumbersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrIndentNumbersNull() {
                this[this.tableTblCommercialLC.strIndentNumbersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrPOCodeNull() {
                return this.IsNull(this.tableTblCommercialLC.strPOCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrPOCodeNull() {
                this[this.tableTblCommercialLC.strPOCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintInsuranceCompanyIDNull() {
                return this.IsNull(this.tableTblCommercialLC.intInsuranceCompanyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintInsuranceCompanyIDNull() {
                this[this.tableTblCommercialLC.intInsuranceCompanyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintCOALCNull() {
                return this.IsNull(this.tableTblCommercialLC.intCOALCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintCOALCNull() {
                this[this.tableTblCommercialLC.intCOALCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintCOABankAccountNull() {
                return this.IsNull(this.tableTblCommercialLC.intCOABankAccountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintCOABankAccountNull() {
                this[this.tableTblCommercialLC.intCOABankAccountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsysnConfirmedNull() {
                return this.IsNull(this.tableTblCommercialLC.ysnConfirmedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetysnConfirmedNull() {
                this[this.tableTblCommercialLC.ysnConfirmedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdteEndDateNull() {
                return this.IsNull(this.tableTblCommercialLC.dteEndDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdteEndDateNull() {
                this[this.tableTblCommercialLC.dteEndDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isysn2ndQuaterNeedNull() {
                return this.IsNull(this.tableTblCommercialLC.ysn2ndQuaterNeedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setysn2ndQuaterNeedNull() {
                this[this.tableTblCommercialLC.ysn2ndQuaterNeedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isysn2ndQuaterPaidNull() {
                return this.IsNull(this.tableTblCommercialLC.ysn2ndQuaterPaidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setysn2ndQuaterPaidNull() {
                this[this.tableTblCommercialLC.ysn2ndQuaterPaidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsysnHasPGNull() {
                return this.IsNull(this.tableTblCommercialLC.ysnHasPGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetysnHasPGNull() {
                this[this.tableTblCommercialLC.ysnHasPGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnumPGPerNull() {
                return this.IsNull(this.tableTblCommercialLC.numPGPerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnumPGPerNull() {
                this[this.tableTblCommercialLC.numPGPerColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SprCommercialGetPaymenTypeInfoRow : global::System.Data.DataRow {
            
            private SprCommercialGetPaymenTypeInfoDataTable tableSprCommercialGetPaymenTypeInfo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SprCommercialGetPaymenTypeInfoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSprCommercialGetPaymenTypeInfo = ((SprCommercialGetPaymenTypeInfoDataTable)(this.Table));
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SprCommercialGetLCListRow : global::System.Data.DataRow {
            
            private SprCommercialGetLCListDataTable tableSprCommercialGetLCList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SprCommercialGetLCListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSprCommercialGetLCList = ((SprCommercialGetLCListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intLCID {
                get {
                    return ((int)(this[this.tableSprCommercialGetLCList.intLCIDColumn]));
                }
                set {
                    this[this.tableSprCommercialGetLCList.intLCIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intIndentID {
                get {
                    try {
                        return ((int)(this[this.tableSprCommercialGetLCList.intIndentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intIndentID\' in table \'SprCommercialGetLCList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCList.intIndentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strLCNumber {
                get {
                    try {
                        return ((string)(this[this.tableSprCommercialGetLCList.strLCNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strLCNumber\' in table \'SprCommercialGetLCList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCList.strLCNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intUnitID {
                get {
                    try {
                        return ((int)(this[this.tableSprCommercialGetLCList.intUnitIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intUnitID\' in table \'SprCommercialGetLCList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCList.intUnitIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strInsuranceCoverNoteNumber {
                get {
                    try {
                        return ((string)(this[this.tableSprCommercialGetLCList.strInsuranceCoverNoteNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strInsuranceCoverNoteNumber\' in table \'SprCommercialGetLCLi" +
                                "st\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCList.strInsuranceCoverNoteNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intSupplierID {
                get {
                    try {
                        return ((int)(this[this.tableSprCommercialGetLCList.intSupplierIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intSupplierID\' in table \'SprCommercialGetLCList\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCList.intSupplierIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal monPIValue {
                get {
                    try {
                        return ((decimal)(this[this.tableSprCommercialGetLCList.monPIValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'monPIValue\' in table \'SprCommercialGetLCList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCList.monPIValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intShipment {
                get {
                    try {
                        return ((int)(this[this.tableSprCommercialGetLCList.intShipmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intShipment\' in table \'SprCommercialGetLCList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCList.intShipmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intShipmentTypeID {
                get {
                    try {
                        return ((int)(this[this.tableSprCommercialGetLCList.intShipmentTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intShipmentTypeID\' in table \'SprCommercialGetLCList\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCList.intShipmentTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intOurBankAccountID {
                get {
                    try {
                        return ((int)(this[this.tableSprCommercialGetLCList.intOurBankAccountIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intOurBankAccountID\' in table \'SprCommercialGetLCList\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCList.intOurBankAccountIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal monToalAmountOFPI {
                get {
                    try {
                        return ((decimal)(this[this.tableSprCommercialGetLCList.monToalAmountOFPIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'monToalAmountOFPI\' in table \'SprCommercialGetLCList\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCList.monToalAmountOFPIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intCurrenyID {
                get {
                    try {
                        return ((int)(this[this.tableSprCommercialGetLCList.intCurrenyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intCurrenyID\' in table \'SprCommercialGetLCList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCList.intCurrenyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal numExRate {
                get {
                    try {
                        return ((decimal)(this[this.tableSprCommercialGetLCList.numExRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'numExRate\' in table \'SprCommercialGetLCList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCList.numExRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal monTotalAmountBDT {
                get {
                    try {
                        return ((decimal)(this[this.tableSprCommercialGetLCList.monTotalAmountBDTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'monTotalAmountBDT\' in table \'SprCommercialGetLCList\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCList.monTotalAmountBDTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ysnEnable {
                get {
                    return ((bool)(this[this.tableSprCommercialGetLCList.ysnEnableColumn]));
                }
                set {
                    this[this.tableSprCommercialGetLCList.ysnEnableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ysnDeleted {
                get {
                    try {
                        return ((bool)(this[this.tableSprCommercialGetLCList.ysnDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ysnDeleted\' in table \'SprCommercialGetLCList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCList.ysnDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intInsertedBy {
                get {
                    try {
                        return ((int)(this[this.tableSprCommercialGetLCList.intInsertedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intInsertedBy\' in table \'SprCommercialGetLCList\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCList.intInsertedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime dteInsertedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSprCommercialGetLCList.dteInsertedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dteInsertedDate\' in table \'SprCommercialGetLCList\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCList.dteInsertedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intLastActionBy {
                get {
                    try {
                        return ((int)(this[this.tableSprCommercialGetLCList.intLastActionByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intLastActionBy\' in table \'SprCommercialGetLCList\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCList.intLastActionByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime dteLastActionDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSprCommercialGetLCList.dteLastActionDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dteLastActionDate\' in table \'SprCommercialGetLCList\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCList.dteLastActionDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intPaymentModeID {
                get {
                    try {
                        return ((int)(this[this.tableSprCommercialGetLCList.intPaymentModeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intPaymentModeID\' in table \'SprCommercialGetLCList\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCList.intPaymentModeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int numInstallment {
                get {
                    try {
                        return ((int)(this[this.tableSprCommercialGetLCList.numInstallmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'numInstallment\' in table \'SprCommercialGetLCList\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCList.numInstallmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int numInstallmentFrequency {
                get {
                    try {
                        return ((int)(this[this.tableSprCommercialGetLCList.numInstallmentFrequencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'numInstallmentFrequency\' in table \'SprCommercialGetLCList\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCList.numInstallmentFrequencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime dteStartData {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSprCommercialGetLCList.dteStartDataColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dteStartData\' in table \'SprCommercialGetLCList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCList.dteStartDataColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int numDays {
                get {
                    try {
                        return ((int)(this[this.tableSprCommercialGetLCList.numDaysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'numDays\' in table \'SprCommercialGetLCList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCList.numDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strIndentNumbers {
                get {
                    try {
                        return ((string)(this[this.tableSprCommercialGetLCList.strIndentNumbersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strIndentNumbers\' in table \'SprCommercialGetLCList\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCList.strIndentNumbersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strPOCode {
                get {
                    try {
                        return ((string)(this[this.tableSprCommercialGetLCList.strPOCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strPOCode\' in table \'SprCommercialGetLCList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCList.strPOCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intInsuranceCompanyID {
                get {
                    try {
                        return ((int)(this[this.tableSprCommercialGetLCList.intInsuranceCompanyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intInsuranceCompanyID\' in table \'SprCommercialGetLCList\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCList.intInsuranceCompanyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intCOALC {
                get {
                    try {
                        return ((int)(this[this.tableSprCommercialGetLCList.intCOALCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intCOALC\' in table \'SprCommercialGetLCList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCList.intCOALCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intCOABankAccount {
                get {
                    try {
                        return ((int)(this[this.tableSprCommercialGetLCList.intCOABankAccountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intCOABankAccount\' in table \'SprCommercialGetLCList\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCList.intCOABankAccountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ysnConfirmed {
                get {
                    try {
                        return ((bool)(this[this.tableSprCommercialGetLCList.ysnConfirmedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ysnConfirmed\' in table \'SprCommercialGetLCList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCList.ysnConfirmedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime dteEndDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSprCommercialGetLCList.dteEndDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dteEndDate\' in table \'SprCommercialGetLCList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCList.dteEndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ysn2ndQuaterNeed {
                get {
                    try {
                        return ((bool)(this[this.tableSprCommercialGetLCList.ysn2ndQuaterNeedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ysn2ndQuaterNeed\' in table \'SprCommercialGetLCList\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCList.ysn2ndQuaterNeedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ysn2ndQuaterPaid {
                get {
                    try {
                        return ((bool)(this[this.tableSprCommercialGetLCList.ysn2ndQuaterPaidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ysn2ndQuaterPaid\' in table \'SprCommercialGetLCList\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCList.ysn2ndQuaterPaidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ysnHasPG {
                get {
                    try {
                        return ((bool)(this[this.tableSprCommercialGetLCList.ysnHasPGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ysnHasPG\' in table \'SprCommercialGetLCList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCList.ysnHasPGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal numPGPer {
                get {
                    try {
                        return ((decimal)(this[this.tableSprCommercialGetLCList.numPGPerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'numPGPer\' in table \'SprCommercialGetLCList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCList.numPGPerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintIndentIDNull() {
                return this.IsNull(this.tableSprCommercialGetLCList.intIndentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintIndentIDNull() {
                this[this.tableSprCommercialGetLCList.intIndentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrLCNumberNull() {
                return this.IsNull(this.tableSprCommercialGetLCList.strLCNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrLCNumberNull() {
                this[this.tableSprCommercialGetLCList.strLCNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintUnitIDNull() {
                return this.IsNull(this.tableSprCommercialGetLCList.intUnitIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintUnitIDNull() {
                this[this.tableSprCommercialGetLCList.intUnitIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrInsuranceCoverNoteNumberNull() {
                return this.IsNull(this.tableSprCommercialGetLCList.strInsuranceCoverNoteNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrInsuranceCoverNoteNumberNull() {
                this[this.tableSprCommercialGetLCList.strInsuranceCoverNoteNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintSupplierIDNull() {
                return this.IsNull(this.tableSprCommercialGetLCList.intSupplierIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintSupplierIDNull() {
                this[this.tableSprCommercialGetLCList.intSupplierIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmonPIValueNull() {
                return this.IsNull(this.tableSprCommercialGetLCList.monPIValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmonPIValueNull() {
                this[this.tableSprCommercialGetLCList.monPIValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintShipmentNull() {
                return this.IsNull(this.tableSprCommercialGetLCList.intShipmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintShipmentNull() {
                this[this.tableSprCommercialGetLCList.intShipmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintShipmentTypeIDNull() {
                return this.IsNull(this.tableSprCommercialGetLCList.intShipmentTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintShipmentTypeIDNull() {
                this[this.tableSprCommercialGetLCList.intShipmentTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintOurBankAccountIDNull() {
                return this.IsNull(this.tableSprCommercialGetLCList.intOurBankAccountIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintOurBankAccountIDNull() {
                this[this.tableSprCommercialGetLCList.intOurBankAccountIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmonToalAmountOFPINull() {
                return this.IsNull(this.tableSprCommercialGetLCList.monToalAmountOFPIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmonToalAmountOFPINull() {
                this[this.tableSprCommercialGetLCList.monToalAmountOFPIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintCurrenyIDNull() {
                return this.IsNull(this.tableSprCommercialGetLCList.intCurrenyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintCurrenyIDNull() {
                this[this.tableSprCommercialGetLCList.intCurrenyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnumExRateNull() {
                return this.IsNull(this.tableSprCommercialGetLCList.numExRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnumExRateNull() {
                this[this.tableSprCommercialGetLCList.numExRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmonTotalAmountBDTNull() {
                return this.IsNull(this.tableSprCommercialGetLCList.monTotalAmountBDTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmonTotalAmountBDTNull() {
                this[this.tableSprCommercialGetLCList.monTotalAmountBDTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsysnDeletedNull() {
                return this.IsNull(this.tableSprCommercialGetLCList.ysnDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetysnDeletedNull() {
                this[this.tableSprCommercialGetLCList.ysnDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintInsertedByNull() {
                return this.IsNull(this.tableSprCommercialGetLCList.intInsertedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintInsertedByNull() {
                this[this.tableSprCommercialGetLCList.intInsertedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdteInsertedDateNull() {
                return this.IsNull(this.tableSprCommercialGetLCList.dteInsertedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdteInsertedDateNull() {
                this[this.tableSprCommercialGetLCList.dteInsertedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintLastActionByNull() {
                return this.IsNull(this.tableSprCommercialGetLCList.intLastActionByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintLastActionByNull() {
                this[this.tableSprCommercialGetLCList.intLastActionByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdteLastActionDateNull() {
                return this.IsNull(this.tableSprCommercialGetLCList.dteLastActionDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdteLastActionDateNull() {
                this[this.tableSprCommercialGetLCList.dteLastActionDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintPaymentModeIDNull() {
                return this.IsNull(this.tableSprCommercialGetLCList.intPaymentModeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintPaymentModeIDNull() {
                this[this.tableSprCommercialGetLCList.intPaymentModeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnumInstallmentNull() {
                return this.IsNull(this.tableSprCommercialGetLCList.numInstallmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnumInstallmentNull() {
                this[this.tableSprCommercialGetLCList.numInstallmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnumInstallmentFrequencyNull() {
                return this.IsNull(this.tableSprCommercialGetLCList.numInstallmentFrequencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnumInstallmentFrequencyNull() {
                this[this.tableSprCommercialGetLCList.numInstallmentFrequencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdteStartDataNull() {
                return this.IsNull(this.tableSprCommercialGetLCList.dteStartDataColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdteStartDataNull() {
                this[this.tableSprCommercialGetLCList.dteStartDataColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnumDaysNull() {
                return this.IsNull(this.tableSprCommercialGetLCList.numDaysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnumDaysNull() {
                this[this.tableSprCommercialGetLCList.numDaysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrIndentNumbersNull() {
                return this.IsNull(this.tableSprCommercialGetLCList.strIndentNumbersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrIndentNumbersNull() {
                this[this.tableSprCommercialGetLCList.strIndentNumbersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrPOCodeNull() {
                return this.IsNull(this.tableSprCommercialGetLCList.strPOCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrPOCodeNull() {
                this[this.tableSprCommercialGetLCList.strPOCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintInsuranceCompanyIDNull() {
                return this.IsNull(this.tableSprCommercialGetLCList.intInsuranceCompanyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintInsuranceCompanyIDNull() {
                this[this.tableSprCommercialGetLCList.intInsuranceCompanyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintCOALCNull() {
                return this.IsNull(this.tableSprCommercialGetLCList.intCOALCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintCOALCNull() {
                this[this.tableSprCommercialGetLCList.intCOALCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintCOABankAccountNull() {
                return this.IsNull(this.tableSprCommercialGetLCList.intCOABankAccountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintCOABankAccountNull() {
                this[this.tableSprCommercialGetLCList.intCOABankAccountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsysnConfirmedNull() {
                return this.IsNull(this.tableSprCommercialGetLCList.ysnConfirmedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetysnConfirmedNull() {
                this[this.tableSprCommercialGetLCList.ysnConfirmedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdteEndDateNull() {
                return this.IsNull(this.tableSprCommercialGetLCList.dteEndDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdteEndDateNull() {
                this[this.tableSprCommercialGetLCList.dteEndDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isysn2ndQuaterNeedNull() {
                return this.IsNull(this.tableSprCommercialGetLCList.ysn2ndQuaterNeedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setysn2ndQuaterNeedNull() {
                this[this.tableSprCommercialGetLCList.ysn2ndQuaterNeedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isysn2ndQuaterPaidNull() {
                return this.IsNull(this.tableSprCommercialGetLCList.ysn2ndQuaterPaidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setysn2ndQuaterPaidNull() {
                this[this.tableSprCommercialGetLCList.ysn2ndQuaterPaidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsysnHasPGNull() {
                return this.IsNull(this.tableSprCommercialGetLCList.ysnHasPGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetysnHasPGNull() {
                this[this.tableSprCommercialGetLCList.ysnHasPGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnumPGPerNull() {
                return this.IsNull(this.tableSprCommercialGetLCList.numPGPerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnumPGPerNull() {
                this[this.tableSprCommercialGetLCList.numPGPerColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class QryCommercialLCDetailWithItemRow : global::System.Data.DataRow {
            
            private QryCommercialLCDetailWithItemDataTable tableQryCommercialLCDetailWithItem;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal QryCommercialLCDetailWithItemRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableQryCommercialLCDetailWithItem = ((QryCommercialLCDetailWithItemDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intLCID {
                get {
                    try {
                        return ((int)(this[this.tableQryCommercialLCDetailWithItem.intLCIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intLCID\' in table \'QryCommercialLCDetailWithItem\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableQryCommercialLCDetailWithItem.intLCIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intItemID {
                get {
                    try {
                        return ((int)(this[this.tableQryCommercialLCDetailWithItem.intItemIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intItemID\' in table \'QryCommercialLCDetailWithItem\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableQryCommercialLCDetailWithItem.intItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strProductName {
                get {
                    return ((string)(this[this.tableQryCommercialLCDetailWithItem.strProductNameColumn]));
                }
                set {
                    this[this.tableQryCommercialLCDetailWithItem.strProductNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal numTotalUnit {
                get {
                    try {
                        return ((decimal)(this[this.tableQryCommercialLCDetailWithItem.numTotalUnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'numTotalUnit\' in table \'QryCommercialLCDetailWithItem\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableQryCommercialLCDetailWithItem.numTotalUnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal monUnitPrice {
                get {
                    try {
                        return ((decimal)(this[this.tableQryCommercialLCDetailWithItem.monUnitPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'monUnitPrice\' in table \'QryCommercialLCDetailWithItem\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableQryCommercialLCDetailWithItem.monUnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal monTotalPrice {
                get {
                    try {
                        return ((decimal)(this[this.tableQryCommercialLCDetailWithItem.monTotalPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'monTotalPrice\' in table \'QryCommercialLCDetailWithItem\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableQryCommercialLCDetailWithItem.monTotalPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strHSCode {
                get {
                    try {
                        return ((string)(this[this.tableQryCommercialLCDetailWithItem.strHSCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strHSCode\' in table \'QryCommercialLCDetailWithItem\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableQryCommercialLCDetailWithItem.strHSCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal numRatio {
                get {
                    try {
                        return ((decimal)(this[this.tableQryCommercialLCDetailWithItem.numRatioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'numRatio\' in table \'QryCommercialLCDetailWithItem\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableQryCommercialLCDetailWithItem.numRatioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintLCIDNull() {
                return this.IsNull(this.tableQryCommercialLCDetailWithItem.intLCIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintLCIDNull() {
                this[this.tableQryCommercialLCDetailWithItem.intLCIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintItemIDNull() {
                return this.IsNull(this.tableQryCommercialLCDetailWithItem.intItemIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintItemIDNull() {
                this[this.tableQryCommercialLCDetailWithItem.intItemIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnumTotalUnitNull() {
                return this.IsNull(this.tableQryCommercialLCDetailWithItem.numTotalUnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnumTotalUnitNull() {
                this[this.tableQryCommercialLCDetailWithItem.numTotalUnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmonUnitPriceNull() {
                return this.IsNull(this.tableQryCommercialLCDetailWithItem.monUnitPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmonUnitPriceNull() {
                this[this.tableQryCommercialLCDetailWithItem.monUnitPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmonTotalPriceNull() {
                return this.IsNull(this.tableQryCommercialLCDetailWithItem.monTotalPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmonTotalPriceNull() {
                this[this.tableQryCommercialLCDetailWithItem.monTotalPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrHSCodeNull() {
                return this.IsNull(this.tableQryCommercialLCDetailWithItem.strHSCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrHSCodeNull() {
                this[this.tableQryCommercialLCDetailWithItem.strHSCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnumRatioNull() {
                return this.IsNull(this.tableQryCommercialLCDetailWithItem.numRatioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnumRatioNull() {
                this[this.tableQryCommercialLCDetailWithItem.numRatioColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SprCommercialInstallmentInsertRow : global::System.Data.DataRow {
            
            private SprCommercialInstallmentInsertDataTable tableSprCommercialInstallmentInsert;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SprCommercialInstallmentInsertRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSprCommercialInstallmentInsert = ((SprCommercialInstallmentInsertDataTable)(this.Table));
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SprCommercialGetLCInfoRow : global::System.Data.DataRow {
            
            private SprCommercialGetLCInfoDataTable tableSprCommercialGetLCInfo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SprCommercialGetLCInfoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSprCommercialGetLCInfo = ((SprCommercialGetLCInfoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intLCID {
                get {
                    return ((int)(this[this.tableSprCommercialGetLCInfo.intLCIDColumn]));
                }
                set {
                    this[this.tableSprCommercialGetLCInfo.intLCIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strLCNumber {
                get {
                    try {
                        return ((string)(this[this.tableSprCommercialGetLCInfo.strLCNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strLCNumber\' in table \'SprCommercialGetLCInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCInfo.strLCNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intUnitID {
                get {
                    try {
                        return ((int)(this[this.tableSprCommercialGetLCInfo.intUnitIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intUnitID\' in table \'SprCommercialGetLCInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCInfo.intUnitIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal monPIValue {
                get {
                    try {
                        return ((decimal)(this[this.tableSprCommercialGetLCInfo.monPIValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'monPIValue\' in table \'SprCommercialGetLCInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCInfo.monPIValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intShipmentTypeID {
                get {
                    try {
                        return ((int)(this[this.tableSprCommercialGetLCInfo.intShipmentTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intShipmentTypeID\' in table \'SprCommercialGetLCInfo\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCInfo.intShipmentTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intOurBankAccountID {
                get {
                    try {
                        return ((int)(this[this.tableSprCommercialGetLCInfo.intOurBankAccountIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intOurBankAccountID\' in table \'SprCommercialGetLCInfo\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCInfo.intOurBankAccountIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intCurrenyID {
                get {
                    try {
                        return ((int)(this[this.tableSprCommercialGetLCInfo.intCurrenyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intCurrenyID\' in table \'SprCommercialGetLCInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCInfo.intCurrenyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intPaymentModeID {
                get {
                    try {
                        return ((int)(this[this.tableSprCommercialGetLCInfo.intPaymentModeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intPaymentModeID\' in table \'SprCommercialGetLCInfo\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCInfo.intPaymentModeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int numInstallment {
                get {
                    try {
                        return ((int)(this[this.tableSprCommercialGetLCInfo.numInstallmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'numInstallment\' in table \'SprCommercialGetLCInfo\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCInfo.numInstallmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int numInstallmentFrequency {
                get {
                    try {
                        return ((int)(this[this.tableSprCommercialGetLCInfo.numInstallmentFrequencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'numInstallmentFrequency\' in table \'SprCommercialGetLCInfo\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCInfo.numInstallmentFrequencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime dteStartData {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSprCommercialGetLCInfo.dteStartDataColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dteStartData\' in table \'SprCommercialGetLCInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCInfo.dteStartDataColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int numDays {
                get {
                    try {
                        return ((int)(this[this.tableSprCommercialGetLCInfo.numDaysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'numDays\' in table \'SprCommercialGetLCInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCInfo.numDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strPOCode {
                get {
                    try {
                        return ((string)(this[this.tableSprCommercialGetLCInfo.strPOCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strPOCode\' in table \'SprCommercialGetLCInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCInfo.strPOCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intBankID {
                get {
                    try {
                        return ((int)(this[this.tableSprCommercialGetLCInfo.intBankIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intBankID\' in table \'SprCommercialGetLCInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCInfo.intBankIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intBankBranchID {
                get {
                    try {
                        return ((int)(this[this.tableSprCommercialGetLCInfo.intBankBranchIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intBankBranchID\' in table \'SprCommercialGetLCInfo\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCInfo.intBankBranchIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strBankName {
                get {
                    return ((string)(this[this.tableSprCommercialGetLCInfo.strBankNameColumn]));
                }
                set {
                    this[this.tableSprCommercialGetLCInfo.strBankNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strUnit {
                get {
                    return ((string)(this[this.tableSprCommercialGetLCInfo.strUnitColumn]));
                }
                set {
                    this[this.tableSprCommercialGetLCInfo.strUnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strBranchName {
                get {
                    return ((string)(this[this.tableSprCommercialGetLCInfo.strBranchNameColumn]));
                }
                set {
                    this[this.tableSprCommercialGetLCInfo.strBranchNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strCurrency {
                get {
                    try {
                        return ((string)(this[this.tableSprCommercialGetLCInfo.strCurrencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strCurrency\' in table \'SprCommercialGetLCInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCInfo.strCurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strAdd1 {
                get {
                    try {
                        return ((string)(this[this.tableSprCommercialGetLCInfo.strAdd1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strAdd1\' in table \'SprCommercialGetLCInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCInfo.strAdd1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strAdd2 {
                get {
                    try {
                        return ((string)(this[this.tableSprCommercialGetLCInfo.strAdd2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strAdd2\' in table \'SprCommercialGetLCInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCInfo.strAdd2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strModeName {
                get {
                    try {
                        return ((string)(this[this.tableSprCommercialGetLCInfo.strModeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strModeName\' in table \'SprCommercialGetLCInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCInfo.strModeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strPaymentModeShortName {
                get {
                    try {
                        return ((string)(this[this.tableSprCommercialGetLCInfo.strPaymentModeShortNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strPaymentModeShortName\' in table \'SprCommercialGetLCInfo\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCInfo.strPaymentModeShortNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intBankServiceID {
                get {
                    try {
                        return ((int)(this[this.tableSprCommercialGetLCInfo.intBankServiceIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intBankServiceID\' in table \'SprCommercialGetLCInfo\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCInfo.intBankServiceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strServeiceType {
                get {
                    try {
                        return ((string)(this[this.tableSprCommercialGetLCInfo.strServeiceTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strServeiceType\' in table \'SprCommercialGetLCInfo\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCInfo.strServeiceTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strPortName {
                get {
                    try {
                        return ((string)(this[this.tableSprCommercialGetLCInfo.strPortNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strPortName\' in table \'SprCommercialGetLCInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCInfo.strPortNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strShipementType {
                get {
                    try {
                        return ((string)(this[this.tableSprCommercialGetLCInfo.strShipementTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strShipementType\' in table \'SprCommercialGetLCInfo\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCInfo.strShipementTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intShipment {
                get {
                    try {
                        return ((int)(this[this.tableSprCommercialGetLCInfo.intShipmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intShipment\' in table \'SprCommercialGetLCInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCInfo.intShipmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intSupplierID {
                get {
                    try {
                        return ((int)(this[this.tableSprCommercialGetLCInfo.intSupplierIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intSupplierID\' in table \'SprCommercialGetLCInfo\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCInfo.intSupplierIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strSuplierName {
                get {
                    return ((string)(this[this.tableSprCommercialGetLCInfo.strSuplierNameColumn]));
                }
                set {
                    this[this.tableSprCommercialGetLCInfo.strSuplierNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strInsuranceCoverNoteNumber {
                get {
                    try {
                        return ((string)(this[this.tableSprCommercialGetLCInfo.strInsuranceCoverNoteNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strInsuranceCoverNoteNumber\' in table \'SprCommercialGetLCIn" +
                                "fo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCInfo.strInsuranceCoverNoteNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intInsuranceCompanyID {
                get {
                    try {
                        return ((int)(this[this.tableSprCommercialGetLCInfo.intInsuranceCompanyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intInsuranceCompanyID\' in table \'SprCommercialGetLCInfo\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCInfo.intInsuranceCompanyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strCompanyName {
                get {
                    try {
                        return ((string)(this[this.tableSprCommercialGetLCInfo.strCompanyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strCompanyName\' in table \'SprCommercialGetLCInfo\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCInfo.strCompanyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ysnHaveTollerence {
                get {
                    try {
                        return ((bool)(this[this.tableSprCommercialGetLCInfo.ysnHaveTollerenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ysnHaveTollerence\' in table \'SprCommercialGetLCInfo\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCInfo.ysnHaveTollerenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal numTollerence {
                get {
                    try {
                        return ((decimal)(this[this.tableSprCommercialGetLCInfo.numTollerenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'numTollerence\' in table \'SprCommercialGetLCInfo\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCInfo.numTollerenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strPlaceOfShipment {
                get {
                    try {
                        return ((string)(this[this.tableSprCommercialGetLCInfo.strPlaceOfShipmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strPlaceOfShipment\' in table \'SprCommercialGetLCInfo\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCInfo.strPlaceOfShipmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intDistinationPort {
                get {
                    try {
                        return ((int)(this[this.tableSprCommercialGetLCInfo.intDistinationPortColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intDistinationPort\' in table \'SprCommercialGetLCInfo\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCInfo.intDistinationPortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ysnHasPertialShipment {
                get {
                    try {
                        return ((bool)(this[this.tableSprCommercialGetLCInfo.ysnHasPertialShipmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ysnHasPertialShipment\' in table \'SprCommercialGetLCInfo\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCInfo.ysnHasPertialShipmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strTermsOfShipment {
                get {
                    try {
                        return ((string)(this[this.tableSprCommercialGetLCInfo.strTermsOfShipmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strTermsOfShipment\' in table \'SprCommercialGetLCInfo\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCInfo.strTermsOfShipmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime dteLastShipment {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSprCommercialGetLCInfo.dteLastShipmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dteLastShipment\' in table \'SprCommercialGetLCInfo\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCInfo.dteLastShipmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime dteEndDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSprCommercialGetLCInfo.dteEndDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dteEndDate\' in table \'SprCommercialGetLCInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCInfo.dteEndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ysnPSIApplicable {
                get {
                    try {
                        return ((bool)(this[this.tableSprCommercialGetLCInfo.ysnPSIApplicableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ysnPSIApplicable\' in table \'SprCommercialGetLCInfo\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCInfo.ysnPSIApplicableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrLCNumberNull() {
                return this.IsNull(this.tableSprCommercialGetLCInfo.strLCNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrLCNumberNull() {
                this[this.tableSprCommercialGetLCInfo.strLCNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintUnitIDNull() {
                return this.IsNull(this.tableSprCommercialGetLCInfo.intUnitIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintUnitIDNull() {
                this[this.tableSprCommercialGetLCInfo.intUnitIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmonPIValueNull() {
                return this.IsNull(this.tableSprCommercialGetLCInfo.monPIValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmonPIValueNull() {
                this[this.tableSprCommercialGetLCInfo.monPIValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintShipmentTypeIDNull() {
                return this.IsNull(this.tableSprCommercialGetLCInfo.intShipmentTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintShipmentTypeIDNull() {
                this[this.tableSprCommercialGetLCInfo.intShipmentTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintOurBankAccountIDNull() {
                return this.IsNull(this.tableSprCommercialGetLCInfo.intOurBankAccountIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintOurBankAccountIDNull() {
                this[this.tableSprCommercialGetLCInfo.intOurBankAccountIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintCurrenyIDNull() {
                return this.IsNull(this.tableSprCommercialGetLCInfo.intCurrenyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintCurrenyIDNull() {
                this[this.tableSprCommercialGetLCInfo.intCurrenyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintPaymentModeIDNull() {
                return this.IsNull(this.tableSprCommercialGetLCInfo.intPaymentModeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintPaymentModeIDNull() {
                this[this.tableSprCommercialGetLCInfo.intPaymentModeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnumInstallmentNull() {
                return this.IsNull(this.tableSprCommercialGetLCInfo.numInstallmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnumInstallmentNull() {
                this[this.tableSprCommercialGetLCInfo.numInstallmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnumInstallmentFrequencyNull() {
                return this.IsNull(this.tableSprCommercialGetLCInfo.numInstallmentFrequencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnumInstallmentFrequencyNull() {
                this[this.tableSprCommercialGetLCInfo.numInstallmentFrequencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdteStartDataNull() {
                return this.IsNull(this.tableSprCommercialGetLCInfo.dteStartDataColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdteStartDataNull() {
                this[this.tableSprCommercialGetLCInfo.dteStartDataColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnumDaysNull() {
                return this.IsNull(this.tableSprCommercialGetLCInfo.numDaysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnumDaysNull() {
                this[this.tableSprCommercialGetLCInfo.numDaysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrPOCodeNull() {
                return this.IsNull(this.tableSprCommercialGetLCInfo.strPOCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrPOCodeNull() {
                this[this.tableSprCommercialGetLCInfo.strPOCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintBankIDNull() {
                return this.IsNull(this.tableSprCommercialGetLCInfo.intBankIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintBankIDNull() {
                this[this.tableSprCommercialGetLCInfo.intBankIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintBankBranchIDNull() {
                return this.IsNull(this.tableSprCommercialGetLCInfo.intBankBranchIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintBankBranchIDNull() {
                this[this.tableSprCommercialGetLCInfo.intBankBranchIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrCurrencyNull() {
                return this.IsNull(this.tableSprCommercialGetLCInfo.strCurrencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrCurrencyNull() {
                this[this.tableSprCommercialGetLCInfo.strCurrencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrAdd1Null() {
                return this.IsNull(this.tableSprCommercialGetLCInfo.strAdd1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrAdd1Null() {
                this[this.tableSprCommercialGetLCInfo.strAdd1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrAdd2Null() {
                return this.IsNull(this.tableSprCommercialGetLCInfo.strAdd2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrAdd2Null() {
                this[this.tableSprCommercialGetLCInfo.strAdd2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrModeNameNull() {
                return this.IsNull(this.tableSprCommercialGetLCInfo.strModeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrModeNameNull() {
                this[this.tableSprCommercialGetLCInfo.strModeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrPaymentModeShortNameNull() {
                return this.IsNull(this.tableSprCommercialGetLCInfo.strPaymentModeShortNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrPaymentModeShortNameNull() {
                this[this.tableSprCommercialGetLCInfo.strPaymentModeShortNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintBankServiceIDNull() {
                return this.IsNull(this.tableSprCommercialGetLCInfo.intBankServiceIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintBankServiceIDNull() {
                this[this.tableSprCommercialGetLCInfo.intBankServiceIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrServeiceTypeNull() {
                return this.IsNull(this.tableSprCommercialGetLCInfo.strServeiceTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrServeiceTypeNull() {
                this[this.tableSprCommercialGetLCInfo.strServeiceTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrPortNameNull() {
                return this.IsNull(this.tableSprCommercialGetLCInfo.strPortNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrPortNameNull() {
                this[this.tableSprCommercialGetLCInfo.strPortNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrShipementTypeNull() {
                return this.IsNull(this.tableSprCommercialGetLCInfo.strShipementTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrShipementTypeNull() {
                this[this.tableSprCommercialGetLCInfo.strShipementTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintShipmentNull() {
                return this.IsNull(this.tableSprCommercialGetLCInfo.intShipmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintShipmentNull() {
                this[this.tableSprCommercialGetLCInfo.intShipmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintSupplierIDNull() {
                return this.IsNull(this.tableSprCommercialGetLCInfo.intSupplierIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintSupplierIDNull() {
                this[this.tableSprCommercialGetLCInfo.intSupplierIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrInsuranceCoverNoteNumberNull() {
                return this.IsNull(this.tableSprCommercialGetLCInfo.strInsuranceCoverNoteNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrInsuranceCoverNoteNumberNull() {
                this[this.tableSprCommercialGetLCInfo.strInsuranceCoverNoteNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintInsuranceCompanyIDNull() {
                return this.IsNull(this.tableSprCommercialGetLCInfo.intInsuranceCompanyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintInsuranceCompanyIDNull() {
                this[this.tableSprCommercialGetLCInfo.intInsuranceCompanyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrCompanyNameNull() {
                return this.IsNull(this.tableSprCommercialGetLCInfo.strCompanyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrCompanyNameNull() {
                this[this.tableSprCommercialGetLCInfo.strCompanyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsysnHaveTollerenceNull() {
                return this.IsNull(this.tableSprCommercialGetLCInfo.ysnHaveTollerenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetysnHaveTollerenceNull() {
                this[this.tableSprCommercialGetLCInfo.ysnHaveTollerenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnumTollerenceNull() {
                return this.IsNull(this.tableSprCommercialGetLCInfo.numTollerenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnumTollerenceNull() {
                this[this.tableSprCommercialGetLCInfo.numTollerenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrPlaceOfShipmentNull() {
                return this.IsNull(this.tableSprCommercialGetLCInfo.strPlaceOfShipmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrPlaceOfShipmentNull() {
                this[this.tableSprCommercialGetLCInfo.strPlaceOfShipmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintDistinationPortNull() {
                return this.IsNull(this.tableSprCommercialGetLCInfo.intDistinationPortColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintDistinationPortNull() {
                this[this.tableSprCommercialGetLCInfo.intDistinationPortColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsysnHasPertialShipmentNull() {
                return this.IsNull(this.tableSprCommercialGetLCInfo.ysnHasPertialShipmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetysnHasPertialShipmentNull() {
                this[this.tableSprCommercialGetLCInfo.ysnHasPertialShipmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrTermsOfShipmentNull() {
                return this.IsNull(this.tableSprCommercialGetLCInfo.strTermsOfShipmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrTermsOfShipmentNull() {
                this[this.tableSprCommercialGetLCInfo.strTermsOfShipmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdteLastShipmentNull() {
                return this.IsNull(this.tableSprCommercialGetLCInfo.dteLastShipmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdteLastShipmentNull() {
                this[this.tableSprCommercialGetLCInfo.dteLastShipmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdteEndDateNull() {
                return this.IsNull(this.tableSprCommercialGetLCInfo.dteEndDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdteEndDateNull() {
                this[this.tableSprCommercialGetLCInfo.dteEndDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsysnPSIApplicableNull() {
                return this.IsNull(this.tableSprCommercialGetLCInfo.ysnPSIApplicableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetysnPSIApplicableNull() {
                this[this.tableSprCommercialGetLCInfo.ysnPSIApplicableColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SprCommercialGetLCDetailsListRow : global::System.Data.DataRow {
            
            private SprCommercialGetLCDetailsListDataTable tableSprCommercialGetLCDetailsList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SprCommercialGetLCDetailsListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSprCommercialGetLCDetailsList = ((SprCommercialGetLCDetailsListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intLCID {
                get {
                    try {
                        return ((int)(this[this.tableSprCommercialGetLCDetailsList.intLCIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intLCID\' in table \'SprCommercialGetLCDetailsList\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCDetailsList.intLCIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intItemID {
                get {
                    try {
                        return ((int)(this[this.tableSprCommercialGetLCDetailsList.intItemIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'intItemID\' in table \'SprCommercialGetLCDetailsList\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCDetailsList.intItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal numTotalUnit {
                get {
                    try {
                        return ((decimal)(this[this.tableSprCommercialGetLCDetailsList.numTotalUnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'numTotalUnit\' in table \'SprCommercialGetLCDetailsList\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCDetailsList.numTotalUnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal monUnitPrice {
                get {
                    try {
                        return ((decimal)(this[this.tableSprCommercialGetLCDetailsList.monUnitPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'monUnitPrice\' in table \'SprCommercialGetLCDetailsList\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCDetailsList.monUnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal monTotalPrice {
                get {
                    try {
                        return ((decimal)(this[this.tableSprCommercialGetLCDetailsList.monTotalPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'monTotalPrice\' in table \'SprCommercialGetLCDetailsList\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCDetailsList.monTotalPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strHSCode {
                get {
                    try {
                        return ((string)(this[this.tableSprCommercialGetLCDetailsList.strHSCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strHSCode\' in table \'SprCommercialGetLCDetailsList\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCDetailsList.strHSCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal numRatio {
                get {
                    try {
                        return ((decimal)(this[this.tableSprCommercialGetLCDetailsList.numRatioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'numRatio\' in table \'SprCommercialGetLCDetailsList\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialGetLCDetailsList.numRatioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintLCIDNull() {
                return this.IsNull(this.tableSprCommercialGetLCDetailsList.intLCIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintLCIDNull() {
                this[this.tableSprCommercialGetLCDetailsList.intLCIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsintItemIDNull() {
                return this.IsNull(this.tableSprCommercialGetLCDetailsList.intItemIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetintItemIDNull() {
                this[this.tableSprCommercialGetLCDetailsList.intItemIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnumTotalUnitNull() {
                return this.IsNull(this.tableSprCommercialGetLCDetailsList.numTotalUnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnumTotalUnitNull() {
                this[this.tableSprCommercialGetLCDetailsList.numTotalUnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmonUnitPriceNull() {
                return this.IsNull(this.tableSprCommercialGetLCDetailsList.monUnitPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmonUnitPriceNull() {
                this[this.tableSprCommercialGetLCDetailsList.monUnitPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmonTotalPriceNull() {
                return this.IsNull(this.tableSprCommercialGetLCDetailsList.monTotalPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmonTotalPriceNull() {
                this[this.tableSprCommercialGetLCDetailsList.monTotalPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrHSCodeNull() {
                return this.IsNull(this.tableSprCommercialGetLCDetailsList.strHSCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrHSCodeNull() {
                this[this.tableSprCommercialGetLCDetailsList.strHSCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnumRatioNull() {
                return this.IsNull(this.tableSprCommercialGetLCDetailsList.numRatioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnumRatioNull() {
                this[this.tableSprCommercialGetLCDetailsList.numRatioColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SprCommercialPOEditRow : global::System.Data.DataRow {
            
            private SprCommercialPOEditDataTable tableSprCommercialPOEdit;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SprCommercialPOEditRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSprCommercialPOEdit = ((SprCommercialPOEditDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strPaymentAttID {
                get {
                    try {
                        return ((string)(this[this.tableSprCommercialPOEdit.strPaymentAttIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strPaymentAttID\' in table \'SprCommercialPOEdit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialPOEdit.strPaymentAttIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal monAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSprCommercialPOEdit.monAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'monAmount\' in table \'SprCommercialPOEdit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSprCommercialPOEdit.monAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrPaymentAttIDNull() {
                return this.IsNull(this.tableSprCommercialPOEdit.strPaymentAttIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrPaymentAttIDNull() {
                this[this.tableSprCommercialPOEdit.strPaymentAttIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmonAmountNull() {
                return this.IsNull(this.tableSprCommercialPOEdit.monAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmonAmountNull() {
                this[this.tableSprCommercialPOEdit.monAmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TblCommercialLCRowChangeEvent : global::System.EventArgs {
            
            private TblCommercialLCRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TblCommercialLCRowChangeEvent(TblCommercialLCRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TblCommercialLCRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SprCommercialGetPaymenTypeInfoRowChangeEvent : global::System.EventArgs {
            
            private SprCommercialGetPaymenTypeInfoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SprCommercialGetPaymenTypeInfoRowChangeEvent(SprCommercialGetPaymenTypeInfoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SprCommercialGetPaymenTypeInfoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SprCommercialGetLCListRowChangeEvent : global::System.EventArgs {
            
            private SprCommercialGetLCListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SprCommercialGetLCListRowChangeEvent(SprCommercialGetLCListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SprCommercialGetLCListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class QryCommercialLCDetailWithItemRowChangeEvent : global::System.EventArgs {
            
            private QryCommercialLCDetailWithItemRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QryCommercialLCDetailWithItemRowChangeEvent(QryCommercialLCDetailWithItemRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QryCommercialLCDetailWithItemRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SprCommercialInstallmentInsertRowChangeEvent : global::System.EventArgs {
            
            private SprCommercialInstallmentInsertRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SprCommercialInstallmentInsertRowChangeEvent(SprCommercialInstallmentInsertRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SprCommercialInstallmentInsertRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SprCommercialGetLCInfoRowChangeEvent : global::System.EventArgs {
            
            private SprCommercialGetLCInfoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SprCommercialGetLCInfoRowChangeEvent(SprCommercialGetLCInfoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SprCommercialGetLCInfoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SprCommercialGetLCDetailsListRowChangeEvent : global::System.EventArgs {
            
            private SprCommercialGetLCDetailsListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SprCommercialGetLCDetailsListRowChangeEvent(SprCommercialGetLCDetailsListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SprCommercialGetLCDetailsListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SprCommercialPOEditRowChangeEvent : global::System.EventArgs {
            
            private SprCommercialPOEditRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SprCommercialPOEditRowChangeEvent(SprCommercialPOEditRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SprCommercialPOEditRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Purchase_DAL.Commercial.LcTDSTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TblCommercialLCTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TblCommercialLCTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TblCommercialLC";
            tableMapping.ColumnMappings.Add("intLCID", "intLCID");
            tableMapping.ColumnMappings.Add("intIndentID", "intIndentID");
            tableMapping.ColumnMappings.Add("strLCNumber", "strLCNumber");
            tableMapping.ColumnMappings.Add("intUnitID", "intUnitID");
            tableMapping.ColumnMappings.Add("strInsuranceCoverNoteNumber", "strInsuranceCoverNoteNumber");
            tableMapping.ColumnMappings.Add("intSupplierID", "intSupplierID");
            tableMapping.ColumnMappings.Add("monPIValue", "monPIValue");
            tableMapping.ColumnMappings.Add("intShipment", "intShipment");
            tableMapping.ColumnMappings.Add("intShipmentTypeID", "intShipmentTypeID");
            tableMapping.ColumnMappings.Add("intOurBankAccountID", "intOurBankAccountID");
            tableMapping.ColumnMappings.Add("monToalAmountOFPI", "monToalAmountOFPI");
            tableMapping.ColumnMappings.Add("intCurrenyID", "intCurrenyID");
            tableMapping.ColumnMappings.Add("numExRate", "numExRate");
            tableMapping.ColumnMappings.Add("monTotalAmountBDT", "monTotalAmountBDT");
            tableMapping.ColumnMappings.Add("ysnEnable", "ysnEnable");
            tableMapping.ColumnMappings.Add("ysnDeleted", "ysnDeleted");
            tableMapping.ColumnMappings.Add("intInsertedBy", "intInsertedBy");
            tableMapping.ColumnMappings.Add("dteInsertedDate", "dteInsertedDate");
            tableMapping.ColumnMappings.Add("intLastActionBy", "intLastActionBy");
            tableMapping.ColumnMappings.Add("dteLastActionDate", "dteLastActionDate");
            tableMapping.ColumnMappings.Add("intPaymentModeID", "intPaymentModeID");
            tableMapping.ColumnMappings.Add("numInstallment", "numInstallment");
            tableMapping.ColumnMappings.Add("numInstallmentFrequency", "numInstallmentFrequency");
            tableMapping.ColumnMappings.Add("dteStartData", "dteStartData");
            tableMapping.ColumnMappings.Add("numDays", "numDays");
            tableMapping.ColumnMappings.Add("strIndentNumbers", "strIndentNumbers");
            tableMapping.ColumnMappings.Add("strPOCode", "strPOCode");
            tableMapping.ColumnMappings.Add("intInsuranceCompanyID", "intInsuranceCompanyID");
            tableMapping.ColumnMappings.Add("intCOALC", "intCOALC");
            tableMapping.ColumnMappings.Add("intCOABankAccount", "intCOABankAccount");
            tableMapping.ColumnMappings.Add("ysnConfirmed", "ysnConfirmed");
            tableMapping.ColumnMappings.Add("dteEndDate", "dteEndDate");
            tableMapping.ColumnMappings.Add("ysn2ndQuaterNeed", "ysn2ndQuaterNeed");
            tableMapping.ColumnMappings.Add("ysn2ndQuaterPaid", "ysn2ndQuaterPaid");
            tableMapping.ColumnMappings.Add("ysnHasPG", "ysnHasPG");
            tableMapping.ColumnMappings.Add("numPGPer", "numPGPer");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [tblCommercialLC] WHERE (([intLCID] = @Original_intLCID) AND ((@IsNul" +
                "l_intIndentID = 1 AND [intIndentID] IS NULL) OR ([intIndentID] = @Original_intIn" +
                "dentID)) AND ((@IsNull_strLCNumber = 1 AND [strLCNumber] IS NULL) OR ([strLCNumb" +
                "er] = @Original_strLCNumber)) AND ((@IsNull_intUnitID = 1 AND [intUnitID] IS NUL" +
                "L) OR ([intUnitID] = @Original_intUnitID)) AND ((@IsNull_strInsuranceCoverNoteNu" +
                "mber = 1 AND [strInsuranceCoverNoteNumber] IS NULL) OR ([strInsuranceCoverNoteNu" +
                "mber] = @Original_strInsuranceCoverNoteNumber)) AND ((@IsNull_intSupplierID = 1 " +
                "AND [intSupplierID] IS NULL) OR ([intSupplierID] = @Original_intSupplierID)) AND" +
                " ((@IsNull_monPIValue = 1 AND [monPIValue] IS NULL) OR ([monPIValue] = @Original" +
                "_monPIValue)) AND ((@IsNull_intShipment = 1 AND [intShipment] IS NULL) OR ([intS" +
                "hipment] = @Original_intShipment)) AND ((@IsNull_intShipmentTypeID = 1 AND [intS" +
                "hipmentTypeID] IS NULL) OR ([intShipmentTypeID] = @Original_intShipmentTypeID)) " +
                "AND ((@IsNull_intOurBankAccountID = 1 AND [intOurBankAccountID] IS NULL) OR ([in" +
                "tOurBankAccountID] = @Original_intOurBankAccountID)) AND ((@IsNull_monToalAmount" +
                "OFPI = 1 AND [monToalAmountOFPI] IS NULL) OR ([monToalAmountOFPI] = @Original_mo" +
                "nToalAmountOFPI)) AND ((@IsNull_intCurrenyID = 1 AND [intCurrenyID] IS NULL) OR " +
                "([intCurrenyID] = @Original_intCurrenyID)) AND ((@IsNull_numExRate = 1 AND [numE" +
                "xRate] IS NULL) OR ([numExRate] = @Original_numExRate)) AND ((@IsNull_monTotalAm" +
                "ountBDT = 1 AND [monTotalAmountBDT] IS NULL) OR ([monTotalAmountBDT] = @Original" +
                "_monTotalAmountBDT)) AND ([ysnEnable] = @Original_ysnEnable) AND ((@IsNull_ysnDe" +
                "leted = 1 AND [ysnDeleted] IS NULL) OR ([ysnDeleted] = @Original_ysnDeleted)) AN" +
                "D ((@IsNull_intInsertedBy = 1 AND [intInsertedBy] IS NULL) OR ([intInsertedBy] =" +
                " @Original_intInsertedBy)) AND ((@IsNull_dteInsertedDate = 1 AND [dteInsertedDat" +
                "e] IS NULL) OR ([dteInsertedDate] = @Original_dteInsertedDate)) AND ((@IsNull_in" +
                "tLastActionBy = 1 AND [intLastActionBy] IS NULL) OR ([intLastActionBy] = @Origin" +
                "al_intLastActionBy)) AND ((@IsNull_dteLastActionDate = 1 AND [dteLastActionDate]" +
                " IS NULL) OR ([dteLastActionDate] = @Original_dteLastActionDate)) AND ((@IsNull_" +
                "intPaymentModeID = 1 AND [intPaymentModeID] IS NULL) OR ([intPaymentModeID] = @O" +
                "riginal_intPaymentModeID)) AND ((@IsNull_numInstallment = 1 AND [numInstallment]" +
                " IS NULL) OR ([numInstallment] = @Original_numInstallment)) AND ((@IsNull_numIns" +
                "tallmentFrequency = 1 AND [numInstallmentFrequency] IS NULL) OR ([numInstallment" +
                "Frequency] = @Original_numInstallmentFrequency)) AND ((@IsNull_dteStartData = 1 " +
                "AND [dteStartData] IS NULL) OR ([dteStartData] = @Original_dteStartData)) AND ((" +
                "@IsNull_numDays = 1 AND [numDays] IS NULL) OR ([numDays] = @Original_numDays)) A" +
                "ND ((@IsNull_strIndentNumbers = 1 AND [strIndentNumbers] IS NULL) OR ([strIndent" +
                "Numbers] = @Original_strIndentNumbers)) AND ((@IsNull_strPOCode = 1 AND [strPOCo" +
                "de] IS NULL) OR ([strPOCode] = @Original_strPOCode)) AND ((@IsNull_intInsuranceC" +
                "ompanyID = 1 AND [intInsuranceCompanyID] IS NULL) OR ([intInsuranceCompanyID] = " +
                "@Original_intInsuranceCompanyID)) AND ((@IsNull_intCOALC = 1 AND [intCOALC] IS N" +
                "ULL) OR ([intCOALC] = @Original_intCOALC)) AND ((@IsNull_intCOABankAccount = 1 A" +
                "ND [intCOABankAccount] IS NULL) OR ([intCOABankAccount] = @Original_intCOABankAc" +
                "count)) AND ((@IsNull_ysnConfirmed = 1 AND [ysnConfirmed] IS NULL) OR ([ysnConfi" +
                "rmed] = @Original_ysnConfirmed)) AND ((@IsNull_dteEndDate = 1 AND [dteEndDate] I" +
                "S NULL) OR ([dteEndDate] = @Original_dteEndDate)) AND ((@IsNull_ysn2ndQuaterNeed" +
                " = 1 AND [ysn2ndQuaterNeed] IS NULL) OR ([ysn2ndQuaterNeed] = @Original_ysn2ndQu" +
                "aterNeed)) AND ((@IsNull_ysn2ndQuaterPaid = 1 AND [ysn2ndQuaterPaid] IS NULL) OR" +
                " ([ysn2ndQuaterPaid] = @Original_ysn2ndQuaterPaid)) AND ((@IsNull_ysnHasPG = 1 A" +
                "ND [ysnHasPG] IS NULL) OR ([ysnHasPG] = @Original_ysnHasPG)) AND ((@IsNull_numPG" +
                "Per = 1 AND [numPGPer] IS NULL) OR ([numPGPer] = @Original_numPGPer)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_intLCID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intLCID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_intIndentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intIndentID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_intIndentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intIndentID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_strLCNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strLCNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_strLCNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strLCNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_intUnitID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intUnitID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_intUnitID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intUnitID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_strInsuranceCoverNoteNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strInsuranceCoverNoteNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_strInsuranceCoverNoteNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strInsuranceCoverNoteNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_intSupplierID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intSupplierID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_intSupplierID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intSupplierID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_monPIValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "monPIValue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_monPIValue", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "monPIValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_intShipment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intShipment", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_intShipment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intShipment", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_intShipmentTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intShipmentTypeID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_intShipmentTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intShipmentTypeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_intOurBankAccountID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intOurBankAccountID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_intOurBankAccountID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intOurBankAccountID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_monToalAmountOFPI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "monToalAmountOFPI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_monToalAmountOFPI", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "monToalAmountOFPI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_intCurrenyID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intCurrenyID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_intCurrenyID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intCurrenyID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_numExRate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "numExRate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_numExRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "numExRate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_monTotalAmountBDT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "monTotalAmountBDT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_monTotalAmountBDT", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "monTotalAmountBDT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ysnEnable", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ysnEnable", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ysnDeleted", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ysnDeleted", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ysnDeleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ysnDeleted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_intInsertedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intInsertedBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_intInsertedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intInsertedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_dteInsertedDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dteInsertedDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dteInsertedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dteInsertedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_intLastActionBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intLastActionBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_intLastActionBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intLastActionBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_dteLastActionDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dteLastActionDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dteLastActionDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dteLastActionDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_intPaymentModeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intPaymentModeID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_intPaymentModeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intPaymentModeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_numInstallment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "numInstallment", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_numInstallment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "numInstallment", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_numInstallmentFrequency", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "numInstallmentFrequency", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_numInstallmentFrequency", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "numInstallmentFrequency", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_dteStartData", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dteStartData", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dteStartData", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dteStartData", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_numDays", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "numDays", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_numDays", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "numDays", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_strIndentNumbers", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strIndentNumbers", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_strIndentNumbers", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strIndentNumbers", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_strPOCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strPOCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_strPOCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strPOCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_intInsuranceCompanyID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intInsuranceCompanyID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_intInsuranceCompanyID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intInsuranceCompanyID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_intCOALC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intCOALC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_intCOALC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intCOALC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_intCOABankAccount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intCOABankAccount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_intCOABankAccount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intCOABankAccount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ysnConfirmed", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ysnConfirmed", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ysnConfirmed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ysnConfirmed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_dteEndDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dteEndDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dteEndDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dteEndDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ysn2ndQuaterNeed", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ysn2ndQuaterNeed", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ysn2ndQuaterNeed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ysn2ndQuaterNeed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ysn2ndQuaterPaid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ysn2ndQuaterPaid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ysn2ndQuaterPaid", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ysn2ndQuaterPaid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ysnHasPG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ysnHasPG", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ysnHasPG", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ysnHasPG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_numPGPer", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "numPGPer", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_numPGPer", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "numPGPer", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [tblCommercialLC] ([intIndentID], [strLCNumber], [intUnitID], [strIns" +
                "uranceCoverNoteNumber], [intSupplierID], [monPIValue], [intShipment], [intShipme" +
                "ntTypeID], [intOurBankAccountID], [monToalAmountOFPI], [intCurrenyID], [numExRat" +
                "e], [monTotalAmountBDT], [ysnEnable], [ysnDeleted], [intInsertedBy], [dteInserte" +
                "dDate], [intLastActionBy], [dteLastActionDate], [intPaymentModeID], [numInstallm" +
                "ent], [numInstallmentFrequency], [dteStartData], [numDays], [strIndentNumbers], " +
                "[strPOCode], [intInsuranceCompanyID], [intCOALC], [intCOABankAccount], [ysnConfi" +
                "rmed], [dteEndDate], [ysn2ndQuaterNeed], [ysn2ndQuaterPaid], [ysnHasPG], [numPGP" +
                "er]) VALUES (@intIndentID, @strLCNumber, @intUnitID, @strInsuranceCoverNoteNumbe" +
                "r, @intSupplierID, @monPIValue, @intShipment, @intShipmentTypeID, @intOurBankAcc" +
                "ountID, @monToalAmountOFPI, @intCurrenyID, @numExRate, @monTotalAmountBDT, @ysnE" +
                "nable, @ysnDeleted, @intInsertedBy, @dteInsertedDate, @intLastActionBy, @dteLast" +
                "ActionDate, @intPaymentModeID, @numInstallment, @numInstallmentFrequency, @dteSt" +
                "artData, @numDays, @strIndentNumbers, @strPOCode, @intInsuranceCompanyID, @intCO" +
                "ALC, @intCOABankAccount, @ysnConfirmed, @dteEndDate, @ysn2ndQuaterNeed, @ysn2ndQ" +
                "uaterPaid, @ysnHasPG, @numPGPer);\r\nSELECT intLCID, intIndentID, strLCNumber, int" +
                "UnitID, strInsuranceCoverNoteNumber, intSupplierID, monPIValue, intShipment, int" +
                "ShipmentTypeID, intOurBankAccountID, monToalAmountOFPI, intCurrenyID, numExRate," +
                " monTotalAmountBDT, ysnEnable, ysnDeleted, intInsertedBy, dteInsertedDate, intLa" +
                "stActionBy, dteLastActionDate, intPaymentModeID, numInstallment, numInstallmentF" +
                "requency, dteStartData, numDays, strIndentNumbers, strPOCode, intInsuranceCompan" +
                "yID, intCOALC, intCOABankAccount, ysnConfirmed, dteEndDate, ysn2ndQuaterNeed, ys" +
                "n2ndQuaterPaid, ysnHasPG, numPGPer FROM tblCommercialLC WHERE (intLCID = SCOPE_I" +
                "DENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intIndentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intIndentID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strLCNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strLCNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intUnitID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intUnitID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strInsuranceCoverNoteNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strInsuranceCoverNoteNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intSupplierID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intSupplierID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@monPIValue", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "monPIValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intShipment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intShipment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intShipmentTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intShipmentTypeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intOurBankAccountID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intOurBankAccountID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@monToalAmountOFPI", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "monToalAmountOFPI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intCurrenyID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intCurrenyID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@numExRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "numExRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@monTotalAmountBDT", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "monTotalAmountBDT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ysnEnable", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ysnEnable", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ysnDeleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ysnDeleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intInsertedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intInsertedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dteInsertedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dteInsertedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intLastActionBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intLastActionBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dteLastActionDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dteLastActionDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intPaymentModeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intPaymentModeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@numInstallment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "numInstallment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@numInstallmentFrequency", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "numInstallmentFrequency", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dteStartData", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dteStartData", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@numDays", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "numDays", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strIndentNumbers", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strIndentNumbers", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strPOCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strPOCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intInsuranceCompanyID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intInsuranceCompanyID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intCOALC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intCOALC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intCOABankAccount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intCOABankAccount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ysnConfirmed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ysnConfirmed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dteEndDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dteEndDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ysn2ndQuaterNeed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ysn2ndQuaterNeed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ysn2ndQuaterPaid", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ysn2ndQuaterPaid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ysnHasPG", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ysnHasPG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@numPGPer", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "numPGPer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [tblCommercialLC] SET [intIndentID] = @intIndentID, [strLCNumber] = @strLC" +
                "Number, [intUnitID] = @intUnitID, [strInsuranceCoverNoteNumber] = @strInsuranceC" +
                "overNoteNumber, [intSupplierID] = @intSupplierID, [monPIValue] = @monPIValue, [i" +
                "ntShipment] = @intShipment, [intShipmentTypeID] = @intShipmentTypeID, [intOurBan" +
                "kAccountID] = @intOurBankAccountID, [monToalAmountOFPI] = @monToalAmountOFPI, [i" +
                "ntCurrenyID] = @intCurrenyID, [numExRate] = @numExRate, [monTotalAmountBDT] = @m" +
                "onTotalAmountBDT, [ysnEnable] = @ysnEnable, [ysnDeleted] = @ysnDeleted, [intInse" +
                "rtedBy] = @intInsertedBy, [dteInsertedDate] = @dteInsertedDate, [intLastActionBy" +
                "] = @intLastActionBy, [dteLastActionDate] = @dteLastActionDate, [intPaymentModeI" +
                "D] = @intPaymentModeID, [numInstallment] = @numInstallment, [numInstallmentFrequ" +
                "ency] = @numInstallmentFrequency, [dteStartData] = @dteStartData, [numDays] = @n" +
                "umDays, [strIndentNumbers] = @strIndentNumbers, [strPOCode] = @strPOCode, [intIn" +
                "suranceCompanyID] = @intInsuranceCompanyID, [intCOALC] = @intCOALC, [intCOABankA" +
                "ccount] = @intCOABankAccount, [ysnConfirmed] = @ysnConfirmed, [dteEndDate] = @dt" +
                "eEndDate, [ysn2ndQuaterNeed] = @ysn2ndQuaterNeed, [ysn2ndQuaterPaid] = @ysn2ndQu" +
                "aterPaid, [ysnHasPG] = @ysnHasPG, [numPGPer] = @numPGPer WHERE (([intLCID] = @Or" +
                "iginal_intLCID) AND ((@IsNull_intIndentID = 1 AND [intIndentID] IS NULL) OR ([in" +
                "tIndentID] = @Original_intIndentID)) AND ((@IsNull_strLCNumber = 1 AND [strLCNum" +
                "ber] IS NULL) OR ([strLCNumber] = @Original_strLCNumber)) AND ((@IsNull_intUnitI" +
                "D = 1 AND [intUnitID] IS NULL) OR ([intUnitID] = @Original_intUnitID)) AND ((@Is" +
                "Null_strInsuranceCoverNoteNumber = 1 AND [strInsuranceCoverNoteNumber] IS NULL) " +
                "OR ([strInsuranceCoverNoteNumber] = @Original_strInsuranceCoverNoteNumber)) AND " +
                "((@IsNull_intSupplierID = 1 AND [intSupplierID] IS NULL) OR ([intSupplierID] = @" +
                "Original_intSupplierID)) AND ((@IsNull_monPIValue = 1 AND [monPIValue] IS NULL) " +
                "OR ([monPIValue] = @Original_monPIValue)) AND ((@IsNull_intShipment = 1 AND [int" +
                "Shipment] IS NULL) OR ([intShipment] = @Original_intShipment)) AND ((@IsNull_int" +
                "ShipmentTypeID = 1 AND [intShipmentTypeID] IS NULL) OR ([intShipmentTypeID] = @O" +
                "riginal_intShipmentTypeID)) AND ((@IsNull_intOurBankAccountID = 1 AND [intOurBan" +
                "kAccountID] IS NULL) OR ([intOurBankAccountID] = @Original_intOurBankAccountID))" +
                " AND ((@IsNull_monToalAmountOFPI = 1 AND [monToalAmountOFPI] IS NULL) OR ([monTo" +
                "alAmountOFPI] = @Original_monToalAmountOFPI)) AND ((@IsNull_intCurrenyID = 1 AND" +
                " [intCurrenyID] IS NULL) OR ([intCurrenyID] = @Original_intCurrenyID)) AND ((@Is" +
                "Null_numExRate = 1 AND [numExRate] IS NULL) OR ([numExRate] = @Original_numExRat" +
                "e)) AND ((@IsNull_monTotalAmountBDT = 1 AND [monTotalAmountBDT] IS NULL) OR ([mo" +
                "nTotalAmountBDT] = @Original_monTotalAmountBDT)) AND ([ysnEnable] = @Original_ys" +
                "nEnable) AND ((@IsNull_ysnDeleted = 1 AND [ysnDeleted] IS NULL) OR ([ysnDeleted]" +
                " = @Original_ysnDeleted)) AND ((@IsNull_intInsertedBy = 1 AND [intInsertedBy] IS" +
                " NULL) OR ([intInsertedBy] = @Original_intInsertedBy)) AND ((@IsNull_dteInserted" +
                "Date = 1 AND [dteInsertedDate] IS NULL) OR ([dteInsertedDate] = @Original_dteIns" +
                "ertedDate)) AND ((@IsNull_intLastActionBy = 1 AND [intLastActionBy] IS NULL) OR " +
                "([intLastActionBy] = @Original_intLastActionBy)) AND ((@IsNull_dteLastActionDate" +
                " = 1 AND [dteLastActionDate] IS NULL) OR ([dteLastActionDate] = @Original_dteLas" +
                "tActionDate)) AND ((@IsNull_intPaymentModeID = 1 AND [intPaymentModeID] IS NULL)" +
                " OR ([intPaymentModeID] = @Original_intPaymentModeID)) AND ((@IsNull_numInstallm" +
                "ent = 1 AND [numInstallment] IS NULL) OR ([numInstallment] = @Original_numInstal" +
                "lment)) AND ((@IsNull_numInstallmentFrequency = 1 AND [numInstallmentFrequency] " +
                "IS NULL) OR ([numInstallmentFrequency] = @Original_numInstallmentFrequency)) AND" +
                " ((@IsNull_dteStartData = 1 AND [dteStartData] IS NULL) OR ([dteStartData] = @Or" +
                "iginal_dteStartData)) AND ((@IsNull_numDays = 1 AND [numDays] IS NULL) OR ([numD" +
                "ays] = @Original_numDays)) AND ((@IsNull_strIndentNumbers = 1 AND [strIndentNumb" +
                "ers] IS NULL) OR ([strIndentNumbers] = @Original_strIndentNumbers)) AND ((@IsNul" +
                "l_strPOCode = 1 AND [strPOCode] IS NULL) OR ([strPOCode] = @Original_strPOCode))" +
                " AND ((@IsNull_intInsuranceCompanyID = 1 AND [intInsuranceCompanyID] IS NULL) OR" +
                " ([intInsuranceCompanyID] = @Original_intInsuranceCompanyID)) AND ((@IsNull_intC" +
                "OALC = 1 AND [intCOALC] IS NULL) OR ([intCOALC] = @Original_intCOALC)) AND ((@Is" +
                "Null_intCOABankAccount = 1 AND [intCOABankAccount] IS NULL) OR ([intCOABankAccou" +
                "nt] = @Original_intCOABankAccount)) AND ((@IsNull_ysnConfirmed = 1 AND [ysnConfi" +
                "rmed] IS NULL) OR ([ysnConfirmed] = @Original_ysnConfirmed)) AND ((@IsNull_dteEn" +
                "dDate = 1 AND [dteEndDate] IS NULL) OR ([dteEndDate] = @Original_dteEndDate)) AN" +
                "D ((@IsNull_ysn2ndQuaterNeed = 1 AND [ysn2ndQuaterNeed] IS NULL) OR ([ysn2ndQuat" +
                "erNeed] = @Original_ysn2ndQuaterNeed)) AND ((@IsNull_ysn2ndQuaterPaid = 1 AND [y" +
                "sn2ndQuaterPaid] IS NULL) OR ([ysn2ndQuaterPaid] = @Original_ysn2ndQuaterPaid)) " +
                "AND ((@IsNull_ysnHasPG = 1 AND [ysnHasPG] IS NULL) OR ([ysnHasPG] = @Original_ys" +
                "nHasPG)) AND ((@IsNull_numPGPer = 1 AND [numPGPer] IS NULL) OR ([numPGPer] = @Or" +
                "iginal_numPGPer)));\r\nSELECT intLCID, intIndentID, strLCNumber, intUnitID, strIns" +
                "uranceCoverNoteNumber, intSupplierID, monPIValue, intShipment, intShipmentTypeID" +
                ", intOurBankAccountID, monToalAmountOFPI, intCurrenyID, numExRate, monTotalAmoun" +
                "tBDT, ysnEnable, ysnDeleted, intInsertedBy, dteInsertedDate, intLastActionBy, dt" +
                "eLastActionDate, intPaymentModeID, numInstallment, numInstallmentFrequency, dteS" +
                "tartData, numDays, strIndentNumbers, strPOCode, intInsuranceCompanyID, intCOALC," +
                " intCOABankAccount, ysnConfirmed, dteEndDate, ysn2ndQuaterNeed, ysn2ndQuaterPaid" +
                ", ysnHasPG, numPGPer FROM tblCommercialLC WHERE (intLCID = @intLCID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intIndentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intIndentID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strLCNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strLCNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intUnitID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intUnitID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strInsuranceCoverNoteNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strInsuranceCoverNoteNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intSupplierID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intSupplierID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@monPIValue", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "monPIValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intShipment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intShipment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intShipmentTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intShipmentTypeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intOurBankAccountID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intOurBankAccountID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@monToalAmountOFPI", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "monToalAmountOFPI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intCurrenyID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intCurrenyID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@numExRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "numExRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@monTotalAmountBDT", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "monTotalAmountBDT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ysnEnable", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ysnEnable", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ysnDeleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ysnDeleted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intInsertedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intInsertedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dteInsertedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dteInsertedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intLastActionBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intLastActionBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dteLastActionDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dteLastActionDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intPaymentModeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intPaymentModeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@numInstallment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "numInstallment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@numInstallmentFrequency", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "numInstallmentFrequency", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dteStartData", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dteStartData", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@numDays", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "numDays", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strIndentNumbers", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strIndentNumbers", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strPOCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strPOCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intInsuranceCompanyID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intInsuranceCompanyID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intCOALC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intCOALC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intCOABankAccount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intCOABankAccount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ysnConfirmed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ysnConfirmed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dteEndDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dteEndDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ysn2ndQuaterNeed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ysn2ndQuaterNeed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ysn2ndQuaterPaid", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ysn2ndQuaterPaid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ysnHasPG", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ysnHasPG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@numPGPer", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "numPGPer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_intLCID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intLCID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_intIndentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intIndentID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_intIndentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intIndentID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_strLCNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strLCNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_strLCNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strLCNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_intUnitID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intUnitID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_intUnitID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intUnitID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_strInsuranceCoverNoteNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strInsuranceCoverNoteNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_strInsuranceCoverNoteNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strInsuranceCoverNoteNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_intSupplierID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intSupplierID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_intSupplierID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intSupplierID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_monPIValue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "monPIValue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_monPIValue", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "monPIValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_intShipment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intShipment", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_intShipment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intShipment", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_intShipmentTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intShipmentTypeID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_intShipmentTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intShipmentTypeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_intOurBankAccountID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intOurBankAccountID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_intOurBankAccountID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intOurBankAccountID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_monToalAmountOFPI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "monToalAmountOFPI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_monToalAmountOFPI", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "monToalAmountOFPI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_intCurrenyID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intCurrenyID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_intCurrenyID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intCurrenyID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_numExRate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "numExRate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_numExRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "numExRate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_monTotalAmountBDT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "monTotalAmountBDT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_monTotalAmountBDT", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "monTotalAmountBDT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ysnEnable", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ysnEnable", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ysnDeleted", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ysnDeleted", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ysnDeleted", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ysnDeleted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_intInsertedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intInsertedBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_intInsertedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intInsertedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_dteInsertedDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dteInsertedDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dteInsertedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dteInsertedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_intLastActionBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intLastActionBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_intLastActionBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intLastActionBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_dteLastActionDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dteLastActionDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dteLastActionDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dteLastActionDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_intPaymentModeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intPaymentModeID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_intPaymentModeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intPaymentModeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_numInstallment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "numInstallment", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_numInstallment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "numInstallment", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_numInstallmentFrequency", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "numInstallmentFrequency", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_numInstallmentFrequency", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "numInstallmentFrequency", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_dteStartData", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dteStartData", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dteStartData", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dteStartData", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_numDays", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "numDays", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_numDays", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "numDays", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_strIndentNumbers", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strIndentNumbers", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_strIndentNumbers", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strIndentNumbers", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_strPOCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strPOCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_strPOCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strPOCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_intInsuranceCompanyID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intInsuranceCompanyID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_intInsuranceCompanyID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intInsuranceCompanyID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_intCOALC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intCOALC", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_intCOALC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intCOALC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_intCOABankAccount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intCOABankAccount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_intCOABankAccount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intCOABankAccount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ysnConfirmed", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ysnConfirmed", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ysnConfirmed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ysnConfirmed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_dteEndDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dteEndDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dteEndDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dteEndDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ysn2ndQuaterNeed", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ysn2ndQuaterNeed", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ysn2ndQuaterNeed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ysn2ndQuaterNeed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ysn2ndQuaterPaid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ysn2ndQuaterPaid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ysn2ndQuaterPaid", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ysn2ndQuaterPaid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ysnHasPG", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ysnHasPG", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ysnHasPG", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ysnHasPG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_numPGPer", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "numPGPer", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_numPGPer", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "numPGPer", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intLCID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "intLCID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Purchase_DAL.Properties.Settings.Default.ERP_PurchaseConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        tblCommercialLC.*\r\nFROM            tblCommercialLC";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT        tblCommercialLC.*\r\n from dbo.tblCommercialLC where ysnEnable=1";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LcTDS.TblCommercialLCDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LcTDS.TblCommercialLCDataTable dataTable = new LcTDS.TblCommercialLCDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual LcTDS.TblCommercialLCDataTable GetPoData() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            LcTDS.TblCommercialLCDataTable dataTable = new LcTDS.TblCommercialLCDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LcTDS.TblCommercialLCDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LcTDS dataSet) {
            return this.Adapter.Update(dataSet, "TblCommercialLC");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_intLCID, 
                    global::System.Nullable<int> Original_intIndentID, 
                    string Original_strLCNumber, 
                    global::System.Nullable<int> Original_intUnitID, 
                    string Original_strInsuranceCoverNoteNumber, 
                    global::System.Nullable<int> Original_intSupplierID, 
                    global::System.Nullable<decimal> Original_monPIValue, 
                    global::System.Nullable<int> Original_intShipment, 
                    global::System.Nullable<int> Original_intShipmentTypeID, 
                    global::System.Nullable<int> Original_intOurBankAccountID, 
                    global::System.Nullable<decimal> Original_monToalAmountOFPI, 
                    global::System.Nullable<int> Original_intCurrenyID, 
                    global::System.Nullable<decimal> Original_numExRate, 
                    global::System.Nullable<decimal> Original_monTotalAmountBDT, 
                    bool Original_ysnEnable, 
                    global::System.Nullable<bool> Original_ysnDeleted, 
                    global::System.Nullable<int> Original_intInsertedBy, 
                    global::System.Nullable<global::System.DateTime> Original_dteInsertedDate, 
                    global::System.Nullable<int> Original_intLastActionBy, 
                    global::System.Nullable<global::System.DateTime> Original_dteLastActionDate, 
                    global::System.Nullable<int> Original_intPaymentModeID, 
                    global::System.Nullable<int> Original_numInstallment, 
                    global::System.Nullable<int> Original_numInstallmentFrequency, 
                    global::System.Nullable<global::System.DateTime> Original_dteStartData, 
                    global::System.Nullable<int> Original_numDays, 
                    string Original_strIndentNumbers, 
                    string Original_strPOCode, 
                    global::System.Nullable<int> Original_intInsuranceCompanyID, 
                    global::System.Nullable<int> Original_intCOALC, 
                    global::System.Nullable<int> Original_intCOABankAccount, 
                    global::System.Nullable<bool> Original_ysnConfirmed, 
                    global::System.Nullable<global::System.DateTime> Original_dteEndDate, 
                    global::System.Nullable<bool> Original_ysn2ndQuaterNeed, 
                    global::System.Nullable<bool> Original_ysn2ndQuaterPaid, 
                    global::System.Nullable<bool> Original_ysnHasPG, 
                    global::System.Nullable<decimal> Original_numPGPer) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_intLCID));
            if ((Original_intIndentID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_intIndentID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_strLCNumber == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_strLCNumber));
            }
            if ((Original_intUnitID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_intUnitID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_strInsuranceCoverNoteNumber == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_strInsuranceCoverNoteNumber));
            }
            if ((Original_intSupplierID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_intSupplierID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_monPIValue.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((decimal)(Original_monPIValue.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_intShipment.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_intShipment.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_intShipmentTypeID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((int)(Original_intShipmentTypeID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_intOurBankAccountID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((int)(Original_intOurBankAccountID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_monToalAmountOFPI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((decimal)(Original_monToalAmountOFPI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_intCurrenyID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((int)(Original_intCurrenyID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_numExRate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((decimal)(Original_numExRate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_monTotalAmountBDT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((decimal)(Original_monTotalAmountBDT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[27].Value = ((bool)(Original_ysnEnable));
            if ((Original_ysnDeleted.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((bool)(Original_ysnDeleted.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_intInsertedBy.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((int)(Original_intInsertedBy.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_dteInsertedDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((System.DateTime)(Original_dteInsertedDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Original_intLastActionBy.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((int)(Original_intLastActionBy.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_dteLastActionDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[37].Value = ((System.DateTime)(Original_dteLastActionDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Original_intPaymentModeID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[39].Value = ((int)(Original_intPaymentModeID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Original_numInstallment.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[41].Value = ((int)(Original_numInstallment.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_numInstallmentFrequency.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[43].Value = ((int)(Original_numInstallmentFrequency.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Original_dteStartData.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[45].Value = ((System.DateTime)(Original_dteStartData.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_numDays.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[47].Value = ((int)(Original_numDays.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Original_strIndentNumbers == null)) {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[49].Value = ((string)(Original_strIndentNumbers));
            }
            if ((Original_strPOCode == null)) {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[51].Value = ((string)(Original_strPOCode));
            }
            if ((Original_intInsuranceCompanyID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[53].Value = ((int)(Original_intInsuranceCompanyID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Original_intCOALC.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[55].Value = ((int)(Original_intCOALC.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((Original_intCOABankAccount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[57].Value = ((int)(Original_intCOABankAccount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Original_ysnConfirmed.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[59].Value = ((bool)(Original_ysnConfirmed.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((Original_dteEndDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[61].Value = ((System.DateTime)(Original_dteEndDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((Original_ysn2ndQuaterNeed.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[63].Value = ((bool)(Original_ysn2ndQuaterNeed.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((Original_ysn2ndQuaterPaid.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[65].Value = ((bool)(Original_ysn2ndQuaterPaid.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((Original_ysnHasPG.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[67].Value = ((bool)(Original_ysnHasPG.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((Original_numPGPer.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[69].Value = ((decimal)(Original_numPGPer.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    global::System.Nullable<int> intIndentID, 
                    string strLCNumber, 
                    global::System.Nullable<int> intUnitID, 
                    string strInsuranceCoverNoteNumber, 
                    global::System.Nullable<int> intSupplierID, 
                    global::System.Nullable<decimal> monPIValue, 
                    global::System.Nullable<int> intShipment, 
                    global::System.Nullable<int> intShipmentTypeID, 
                    global::System.Nullable<int> intOurBankAccountID, 
                    global::System.Nullable<decimal> monToalAmountOFPI, 
                    global::System.Nullable<int> intCurrenyID, 
                    global::System.Nullable<decimal> numExRate, 
                    global::System.Nullable<decimal> monTotalAmountBDT, 
                    bool ysnEnable, 
                    global::System.Nullable<bool> ysnDeleted, 
                    global::System.Nullable<int> intInsertedBy, 
                    global::System.Nullable<global::System.DateTime> dteInsertedDate, 
                    global::System.Nullable<int> intLastActionBy, 
                    global::System.Nullable<global::System.DateTime> dteLastActionDate, 
                    global::System.Nullable<int> intPaymentModeID, 
                    global::System.Nullable<int> numInstallment, 
                    global::System.Nullable<int> numInstallmentFrequency, 
                    global::System.Nullable<global::System.DateTime> dteStartData, 
                    global::System.Nullable<int> numDays, 
                    string strIndentNumbers, 
                    string strPOCode, 
                    global::System.Nullable<int> intInsuranceCompanyID, 
                    global::System.Nullable<int> intCOALC, 
                    global::System.Nullable<int> intCOABankAccount, 
                    global::System.Nullable<bool> ysnConfirmed, 
                    global::System.Nullable<global::System.DateTime> dteEndDate, 
                    global::System.Nullable<bool> ysn2ndQuaterNeed, 
                    global::System.Nullable<bool> ysn2ndQuaterPaid, 
                    global::System.Nullable<bool> ysnHasPG, 
                    global::System.Nullable<decimal> numPGPer) {
            if ((intIndentID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(intIndentID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((strLCNumber == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(strLCNumber));
            }
            if ((intUnitID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(intUnitID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((strInsuranceCoverNoteNumber == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(strInsuranceCoverNoteNumber));
            }
            if ((intSupplierID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(intSupplierID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((monPIValue.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(monPIValue.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((intShipment.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(intShipment.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((intShipmentTypeID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(intShipmentTypeID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((intOurBankAccountID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(intOurBankAccountID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((monToalAmountOFPI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(monToalAmountOFPI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((intCurrenyID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(intCurrenyID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((numExRate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(numExRate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((monTotalAmountBDT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(monTotalAmountBDT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[13].Value = ((bool)(ysnEnable));
            if ((ysnDeleted.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((bool)(ysnDeleted.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((intInsertedBy.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((int)(intInsertedBy.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((dteInsertedDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((System.DateTime)(dteInsertedDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((intLastActionBy.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((int)(intLastActionBy.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((dteLastActionDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((System.DateTime)(dteLastActionDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((intPaymentModeID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((int)(intPaymentModeID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((numInstallment.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((int)(numInstallment.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((numInstallmentFrequency.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((int)(numInstallmentFrequency.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((dteStartData.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((System.DateTime)(dteStartData.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((numDays.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((int)(numDays.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((strIndentNumbers == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(strIndentNumbers));
            }
            if ((strPOCode == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(strPOCode));
            }
            if ((intInsuranceCompanyID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((int)(intInsuranceCompanyID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((intCOALC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((int)(intCOALC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((intCOABankAccount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((int)(intCOABankAccount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((ysnConfirmed.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((bool)(ysnConfirmed.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((dteEndDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((System.DateTime)(dteEndDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((ysn2ndQuaterNeed.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((bool)(ysn2ndQuaterNeed.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((ysn2ndQuaterPaid.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((bool)(ysn2ndQuaterPaid.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((ysnHasPG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((bool)(ysnHasPG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((numPGPer.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((decimal)(numPGPer.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> intIndentID, 
                    string strLCNumber, 
                    global::System.Nullable<int> intUnitID, 
                    string strInsuranceCoverNoteNumber, 
                    global::System.Nullable<int> intSupplierID, 
                    global::System.Nullable<decimal> monPIValue, 
                    global::System.Nullable<int> intShipment, 
                    global::System.Nullable<int> intShipmentTypeID, 
                    global::System.Nullable<int> intOurBankAccountID, 
                    global::System.Nullable<decimal> monToalAmountOFPI, 
                    global::System.Nullable<int> intCurrenyID, 
                    global::System.Nullable<decimal> numExRate, 
                    global::System.Nullable<decimal> monTotalAmountBDT, 
                    bool ysnEnable, 
                    global::System.Nullable<bool> ysnDeleted, 
                    global::System.Nullable<int> intInsertedBy, 
                    global::System.Nullable<global::System.DateTime> dteInsertedDate, 
                    global::System.Nullable<int> intLastActionBy, 
                    global::System.Nullable<global::System.DateTime> dteLastActionDate, 
                    global::System.Nullable<int> intPaymentModeID, 
                    global::System.Nullable<int> numInstallment, 
                    global::System.Nullable<int> numInstallmentFrequency, 
                    global::System.Nullable<global::System.DateTime> dteStartData, 
                    global::System.Nullable<int> numDays, 
                    string strIndentNumbers, 
                    string strPOCode, 
                    global::System.Nullable<int> intInsuranceCompanyID, 
                    global::System.Nullable<int> intCOALC, 
                    global::System.Nullable<int> intCOABankAccount, 
                    global::System.Nullable<bool> ysnConfirmed, 
                    global::System.Nullable<global::System.DateTime> dteEndDate, 
                    global::System.Nullable<bool> ysn2ndQuaterNeed, 
                    global::System.Nullable<bool> ysn2ndQuaterPaid, 
                    global::System.Nullable<bool> ysnHasPG, 
                    global::System.Nullable<decimal> numPGPer, 
                    int Original_intLCID, 
                    global::System.Nullable<int> Original_intIndentID, 
                    string Original_strLCNumber, 
                    global::System.Nullable<int> Original_intUnitID, 
                    string Original_strInsuranceCoverNoteNumber, 
                    global::System.Nullable<int> Original_intSupplierID, 
                    global::System.Nullable<decimal> Original_monPIValue, 
                    global::System.Nullable<int> Original_intShipment, 
                    global::System.Nullable<int> Original_intShipmentTypeID, 
                    global::System.Nullable<int> Original_intOurBankAccountID, 
                    global::System.Nullable<decimal> Original_monToalAmountOFPI, 
                    global::System.Nullable<int> Original_intCurrenyID, 
                    global::System.Nullable<decimal> Original_numExRate, 
                    global::System.Nullable<decimal> Original_monTotalAmountBDT, 
                    bool Original_ysnEnable, 
                    global::System.Nullable<bool> Original_ysnDeleted, 
                    global::System.Nullable<int> Original_intInsertedBy, 
                    global::System.Nullable<global::System.DateTime> Original_dteInsertedDate, 
                    global::System.Nullable<int> Original_intLastActionBy, 
                    global::System.Nullable<global::System.DateTime> Original_dteLastActionDate, 
                    global::System.Nullable<int> Original_intPaymentModeID, 
                    global::System.Nullable<int> Original_numInstallment, 
                    global::System.Nullable<int> Original_numInstallmentFrequency, 
                    global::System.Nullable<global::System.DateTime> Original_dteStartData, 
                    global::System.Nullable<int> Original_numDays, 
                    string Original_strIndentNumbers, 
                    string Original_strPOCode, 
                    global::System.Nullable<int> Original_intInsuranceCompanyID, 
                    global::System.Nullable<int> Original_intCOALC, 
                    global::System.Nullable<int> Original_intCOABankAccount, 
                    global::System.Nullable<bool> Original_ysnConfirmed, 
                    global::System.Nullable<global::System.DateTime> Original_dteEndDate, 
                    global::System.Nullable<bool> Original_ysn2ndQuaterNeed, 
                    global::System.Nullable<bool> Original_ysn2ndQuaterPaid, 
                    global::System.Nullable<bool> Original_ysnHasPG, 
                    global::System.Nullable<decimal> Original_numPGPer, 
                    int intLCID) {
            if ((intIndentID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(intIndentID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((strLCNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(strLCNumber));
            }
            if ((intUnitID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(intUnitID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((strInsuranceCoverNoteNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(strInsuranceCoverNoteNumber));
            }
            if ((intSupplierID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(intSupplierID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((monPIValue.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(monPIValue.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((intShipment.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(intShipment.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((intShipmentTypeID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(intShipmentTypeID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((intOurBankAccountID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(intOurBankAccountID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((monToalAmountOFPI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(monToalAmountOFPI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((intCurrenyID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(intCurrenyID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((numExRate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(numExRate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((monTotalAmountBDT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(monTotalAmountBDT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((bool)(ysnEnable));
            if ((ysnDeleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((bool)(ysnDeleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((intInsertedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(intInsertedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((dteInsertedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(dteInsertedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((intLastActionBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(intLastActionBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((dteLastActionDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(dteLastActionDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((intPaymentModeID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(intPaymentModeID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((numInstallment.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(numInstallment.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((numInstallmentFrequency.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(numInstallmentFrequency.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((dteStartData.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((System.DateTime)(dteStartData.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((numDays.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(numDays.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((strIndentNumbers == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(strIndentNumbers));
            }
            if ((strPOCode == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(strPOCode));
            }
            if ((intInsuranceCompanyID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(intInsuranceCompanyID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((intCOALC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(intCOALC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((intCOABankAccount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(intCOABankAccount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((ysnConfirmed.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((bool)(ysnConfirmed.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((dteEndDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((System.DateTime)(dteEndDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((ysn2ndQuaterNeed.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((bool)(ysn2ndQuaterNeed.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((ysn2ndQuaterPaid.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((bool)(ysn2ndQuaterPaid.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((ysnHasPG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((bool)(ysnHasPG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((numPGPer.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((decimal)(numPGPer.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[35].Value = ((int)(Original_intLCID));
            if ((Original_intIndentID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((int)(Original_intIndentID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Original_strLCNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Original_strLCNumber));
            }
            if ((Original_intUnitID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((int)(Original_intUnitID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_strInsuranceCoverNoteNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_strInsuranceCoverNoteNumber));
            }
            if ((Original_intSupplierID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((int)(Original_intSupplierID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_monPIValue.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((decimal)(Original_monPIValue.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Original_intShipment.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((int)(Original_intShipment.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_intShipmentTypeID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((int)(Original_intShipmentTypeID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Original_intOurBankAccountID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((int)(Original_intOurBankAccountID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Original_monToalAmountOFPI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((decimal)(Original_monToalAmountOFPI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((Original_intCurrenyID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((int)(Original_intCurrenyID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Original_numExRate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((decimal)(Original_numExRate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((Original_monTotalAmountBDT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((decimal)(Original_monTotalAmountBDT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[62].Value = ((bool)(Original_ysnEnable));
            if ((Original_ysnDeleted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[64].Value = ((bool)(Original_ysnDeleted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((Original_intInsertedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[66].Value = ((int)(Original_intInsertedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Original_dteInsertedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[68].Value = ((System.DateTime)(Original_dteInsertedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((Original_intLastActionBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[70].Value = ((int)(Original_intLastActionBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((Original_dteLastActionDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[72].Value = ((System.DateTime)(Original_dteLastActionDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((Original_intPaymentModeID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[74].Value = ((int)(Original_intPaymentModeID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((Original_numInstallment.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[76].Value = ((int)(Original_numInstallment.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((Original_numInstallmentFrequency.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[78].Value = ((int)(Original_numInstallmentFrequency.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((Original_dteStartData.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[80].Value = ((System.DateTime)(Original_dteStartData.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((Original_numDays.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[82].Value = ((int)(Original_numDays.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((Original_strIndentNumbers == null)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[84].Value = ((string)(Original_strIndentNumbers));
            }
            if ((Original_strPOCode == null)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[86].Value = ((string)(Original_strPOCode));
            }
            if ((Original_intInsuranceCompanyID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[88].Value = ((int)(Original_intInsuranceCompanyID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            if ((Original_intCOALC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[90].Value = ((int)(Original_intCOALC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            if ((Original_intCOABankAccount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[92].Value = ((int)(Original_intCOABankAccount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            if ((Original_ysnConfirmed.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[94].Value = ((bool)(Original_ysnConfirmed.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            if ((Original_dteEndDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[96].Value = ((System.DateTime)(Original_dteEndDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            if ((Original_ysn2ndQuaterNeed.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[98].Value = ((bool)(Original_ysn2ndQuaterNeed.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            if ((Original_ysn2ndQuaterPaid.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[100].Value = ((bool)(Original_ysn2ndQuaterPaid.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            if ((Original_ysnHasPG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[102].Value = ((bool)(Original_ysnHasPG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            if ((Original_numPGPer.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[104].Value = ((decimal)(Original_numPGPer.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[105].Value = ((int)(intLCID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> intIndentID, 
                    string strLCNumber, 
                    global::System.Nullable<int> intUnitID, 
                    string strInsuranceCoverNoteNumber, 
                    global::System.Nullable<int> intSupplierID, 
                    global::System.Nullable<decimal> monPIValue, 
                    global::System.Nullable<int> intShipment, 
                    global::System.Nullable<int> intShipmentTypeID, 
                    global::System.Nullable<int> intOurBankAccountID, 
                    global::System.Nullable<decimal> monToalAmountOFPI, 
                    global::System.Nullable<int> intCurrenyID, 
                    global::System.Nullable<decimal> numExRate, 
                    global::System.Nullable<decimal> monTotalAmountBDT, 
                    bool ysnEnable, 
                    global::System.Nullable<bool> ysnDeleted, 
                    global::System.Nullable<int> intInsertedBy, 
                    global::System.Nullable<global::System.DateTime> dteInsertedDate, 
                    global::System.Nullable<int> intLastActionBy, 
                    global::System.Nullable<global::System.DateTime> dteLastActionDate, 
                    global::System.Nullable<int> intPaymentModeID, 
                    global::System.Nullable<int> numInstallment, 
                    global::System.Nullable<int> numInstallmentFrequency, 
                    global::System.Nullable<global::System.DateTime> dteStartData, 
                    global::System.Nullable<int> numDays, 
                    string strIndentNumbers, 
                    string strPOCode, 
                    global::System.Nullable<int> intInsuranceCompanyID, 
                    global::System.Nullable<int> intCOALC, 
                    global::System.Nullable<int> intCOABankAccount, 
                    global::System.Nullable<bool> ysnConfirmed, 
                    global::System.Nullable<global::System.DateTime> dteEndDate, 
                    global::System.Nullable<bool> ysn2ndQuaterNeed, 
                    global::System.Nullable<bool> ysn2ndQuaterPaid, 
                    global::System.Nullable<bool> ysnHasPG, 
                    global::System.Nullable<decimal> numPGPer, 
                    int Original_intLCID, 
                    global::System.Nullable<int> Original_intIndentID, 
                    string Original_strLCNumber, 
                    global::System.Nullable<int> Original_intUnitID, 
                    string Original_strInsuranceCoverNoteNumber, 
                    global::System.Nullable<int> Original_intSupplierID, 
                    global::System.Nullable<decimal> Original_monPIValue, 
                    global::System.Nullable<int> Original_intShipment, 
                    global::System.Nullable<int> Original_intShipmentTypeID, 
                    global::System.Nullable<int> Original_intOurBankAccountID, 
                    global::System.Nullable<decimal> Original_monToalAmountOFPI, 
                    global::System.Nullable<int> Original_intCurrenyID, 
                    global::System.Nullable<decimal> Original_numExRate, 
                    global::System.Nullable<decimal> Original_monTotalAmountBDT, 
                    bool Original_ysnEnable, 
                    global::System.Nullable<bool> Original_ysnDeleted, 
                    global::System.Nullable<int> Original_intInsertedBy, 
                    global::System.Nullable<global::System.DateTime> Original_dteInsertedDate, 
                    global::System.Nullable<int> Original_intLastActionBy, 
                    global::System.Nullable<global::System.DateTime> Original_dteLastActionDate, 
                    global::System.Nullable<int> Original_intPaymentModeID, 
                    global::System.Nullable<int> Original_numInstallment, 
                    global::System.Nullable<int> Original_numInstallmentFrequency, 
                    global::System.Nullable<global::System.DateTime> Original_dteStartData, 
                    global::System.Nullable<int> Original_numDays, 
                    string Original_strIndentNumbers, 
                    string Original_strPOCode, 
                    global::System.Nullable<int> Original_intInsuranceCompanyID, 
                    global::System.Nullable<int> Original_intCOALC, 
                    global::System.Nullable<int> Original_intCOABankAccount, 
                    global::System.Nullable<bool> Original_ysnConfirmed, 
                    global::System.Nullable<global::System.DateTime> Original_dteEndDate, 
                    global::System.Nullable<bool> Original_ysn2ndQuaterNeed, 
                    global::System.Nullable<bool> Original_ysn2ndQuaterPaid, 
                    global::System.Nullable<bool> Original_ysnHasPG, 
                    global::System.Nullable<decimal> Original_numPGPer) {
            return this.Update(intIndentID, strLCNumber, intUnitID, strInsuranceCoverNoteNumber, intSupplierID, monPIValue, intShipment, intShipmentTypeID, intOurBankAccountID, monToalAmountOFPI, intCurrenyID, numExRate, monTotalAmountBDT, ysnEnable, ysnDeleted, intInsertedBy, dteInsertedDate, intLastActionBy, dteLastActionDate, intPaymentModeID, numInstallment, numInstallmentFrequency, dteStartData, numDays, strIndentNumbers, strPOCode, intInsuranceCompanyID, intCOALC, intCOABankAccount, ysnConfirmed, dteEndDate, ysn2ndQuaterNeed, ysn2ndQuaterPaid, ysnHasPG, numPGPer, Original_intLCID, Original_intIndentID, Original_strLCNumber, Original_intUnitID, Original_strInsuranceCoverNoteNumber, Original_intSupplierID, Original_monPIValue, Original_intShipment, Original_intShipmentTypeID, Original_intOurBankAccountID, Original_monToalAmountOFPI, Original_intCurrenyID, Original_numExRate, Original_monTotalAmountBDT, Original_ysnEnable, Original_ysnDeleted, Original_intInsertedBy, Original_dteInsertedDate, Original_intLastActionBy, Original_dteLastActionDate, Original_intPaymentModeID, Original_numInstallment, Original_numInstallmentFrequency, Original_dteStartData, Original_numDays, Original_strIndentNumbers, Original_strPOCode, Original_intInsuranceCompanyID, Original_intCOALC, Original_intCOABankAccount, Original_ysnConfirmed, Original_dteEndDate, Original_ysn2ndQuaterNeed, Original_ysn2ndQuaterPaid, Original_ysnHasPG, Original_numPGPer, Original_intLCID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SprCommercialGetPaymenTypeInfoTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SprCommercialGetPaymenTypeInfoTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Purchase_DAL.Properties.Settings.Default.ERP_PurchaseConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.sprCommercialGetPaymenTypeInfo";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intLCID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@monInvoicevalue", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.InputOutput, 19, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strPaymentNode", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.InputOutput, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strCurrency", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.InputOutput, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@numDays", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.InputOutput, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intFequency", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.InputOutput, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intTotalInstallment", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.InputOutput, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LcTDS.SprCommercialGetPaymenTypeInfoDataTable GetDatapaymentMode(global::System.Nullable<int> intLCID, ref global::System.Nullable<decimal> monInvoicevalue, ref string strPaymentNode, ref string strCurrency, ref global::System.Nullable<int> numDays, ref global::System.Nullable<int> intFequency, ref global::System.Nullable<int> intTotalInstallment) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((intLCID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(intLCID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((monInvoicevalue.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((decimal)(monInvoicevalue.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((strPaymentNode == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(strPaymentNode));
            }
            if ((strCurrency == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(strCurrency));
            }
            if ((numDays.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((int)(numDays.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((intFequency.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((int)(intFequency.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((intTotalInstallment.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((int)(intTotalInstallment.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            LcTDS.SprCommercialGetPaymenTypeInfoDataTable dataTable = new LcTDS.SprCommercialGetPaymenTypeInfoDataTable();
            this.Adapter.Fill(dataTable);
            if (((this.Adapter.SelectCommand.Parameters[2].Value == null) 
                        || (this.Adapter.SelectCommand.Parameters[2].Value.GetType() == typeof(global::System.DBNull)))) {
                monInvoicevalue = new global::System.Nullable<decimal>();
            }
            else {
                monInvoicevalue = new global::System.Nullable<decimal>(((decimal)(this.Adapter.SelectCommand.Parameters[2].Value)));
            }
            if (((this.Adapter.SelectCommand.Parameters[3].Value == null) 
                        || (this.Adapter.SelectCommand.Parameters[3].Value.GetType() == typeof(global::System.DBNull)))) {
                strPaymentNode = null;
            }
            else {
                strPaymentNode = ((string)(this.Adapter.SelectCommand.Parameters[3].Value));
            }
            if (((this.Adapter.SelectCommand.Parameters[4].Value == null) 
                        || (this.Adapter.SelectCommand.Parameters[4].Value.GetType() == typeof(global::System.DBNull)))) {
                strCurrency = null;
            }
            else {
                strCurrency = ((string)(this.Adapter.SelectCommand.Parameters[4].Value));
            }
            if (((this.Adapter.SelectCommand.Parameters[5].Value == null) 
                        || (this.Adapter.SelectCommand.Parameters[5].Value.GetType() == typeof(global::System.DBNull)))) {
                numDays = new global::System.Nullable<int>();
            }
            else {
                numDays = new global::System.Nullable<int>(((int)(this.Adapter.SelectCommand.Parameters[5].Value)));
            }
            if (((this.Adapter.SelectCommand.Parameters[6].Value == null) 
                        || (this.Adapter.SelectCommand.Parameters[6].Value.GetType() == typeof(global::System.DBNull)))) {
                intFequency = new global::System.Nullable<int>();
            }
            else {
                intFequency = new global::System.Nullable<int>(((int)(this.Adapter.SelectCommand.Parameters[6].Value)));
            }
            if (((this.Adapter.SelectCommand.Parameters[7].Value == null) 
                        || (this.Adapter.SelectCommand.Parameters[7].Value.GetType() == typeof(global::System.DBNull)))) {
                intTotalInstallment = new global::System.Nullable<int>();
            }
            else {
                intTotalInstallment = new global::System.Nullable<int>(((int)(this.Adapter.SelectCommand.Parameters[7].Value)));
            }
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SprCommercialGetLCListTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SprCommercialGetLCListTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SprCommercialGetLCList";
            tableMapping.ColumnMappings.Add("intLCID", "intLCID");
            tableMapping.ColumnMappings.Add("intIndentID", "intIndentID");
            tableMapping.ColumnMappings.Add("strLCNumber", "strLCNumber");
            tableMapping.ColumnMappings.Add("intUnitID", "intUnitID");
            tableMapping.ColumnMappings.Add("strInsuranceCoverNoteNumber", "strInsuranceCoverNoteNumber");
            tableMapping.ColumnMappings.Add("intSupplierID", "intSupplierID");
            tableMapping.ColumnMappings.Add("monPIValue", "monPIValue");
            tableMapping.ColumnMappings.Add("intShipment", "intShipment");
            tableMapping.ColumnMappings.Add("intShipmentTypeID", "intShipmentTypeID");
            tableMapping.ColumnMappings.Add("intOurBankAccountID", "intOurBankAccountID");
            tableMapping.ColumnMappings.Add("monToalAmountOFPI", "monToalAmountOFPI");
            tableMapping.ColumnMappings.Add("intCurrenyID", "intCurrenyID");
            tableMapping.ColumnMappings.Add("numExRate", "numExRate");
            tableMapping.ColumnMappings.Add("monTotalAmountBDT", "monTotalAmountBDT");
            tableMapping.ColumnMappings.Add("ysnEnable", "ysnEnable");
            tableMapping.ColumnMappings.Add("ysnDeleted", "ysnDeleted");
            tableMapping.ColumnMappings.Add("intInsertedBy", "intInsertedBy");
            tableMapping.ColumnMappings.Add("dteInsertedDate", "dteInsertedDate");
            tableMapping.ColumnMappings.Add("intLastActionBy", "intLastActionBy");
            tableMapping.ColumnMappings.Add("dteLastActionDate", "dteLastActionDate");
            tableMapping.ColumnMappings.Add("intPaymentModeID", "intPaymentModeID");
            tableMapping.ColumnMappings.Add("numInstallment", "numInstallment");
            tableMapping.ColumnMappings.Add("numInstallmentFrequency", "numInstallmentFrequency");
            tableMapping.ColumnMappings.Add("dteStartData", "dteStartData");
            tableMapping.ColumnMappings.Add("numDays", "numDays");
            tableMapping.ColumnMappings.Add("strIndentNumbers", "strIndentNumbers");
            tableMapping.ColumnMappings.Add("strPOCode", "strPOCode");
            tableMapping.ColumnMappings.Add("intInsuranceCompanyID", "intInsuranceCompanyID");
            tableMapping.ColumnMappings.Add("intCOALC", "intCOALC");
            tableMapping.ColumnMappings.Add("intCOABankAccount", "intCOABankAccount");
            tableMapping.ColumnMappings.Add("ysnConfirmed", "ysnConfirmed");
            tableMapping.ColumnMappings.Add("dteEndDate", "dteEndDate");
            tableMapping.ColumnMappings.Add("ysn2ndQuaterNeed", "ysn2ndQuaterNeed");
            tableMapping.ColumnMappings.Add("ysn2ndQuaterPaid", "ysn2ndQuaterPaid");
            tableMapping.ColumnMappings.Add("ysnHasPG", "ysnHasPG");
            tableMapping.ColumnMappings.Add("numPGPer", "numPGPer");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Purchase_DAL.Properties.Settings.Default.ERP_PurchaseConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.sprCommercialGetLCList";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LcTDS.SprCommercialGetLCListDataTable GetLCData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LcTDS.SprCommercialGetLCListDataTable dataTable = new LcTDS.SprCommercialGetLCListDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class QryCommercialLCDetailWithItemTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public QryCommercialLCDetailWithItemTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "QryCommercialLCDetailWithItem";
            tableMapping.ColumnMappings.Add("intLCID", "intLCID");
            tableMapping.ColumnMappings.Add("intItemID", "intItemID");
            tableMapping.ColumnMappings.Add("strProductName", "strProductName");
            tableMapping.ColumnMappings.Add("numTotalUnit", "numTotalUnit");
            tableMapping.ColumnMappings.Add("monUnitPrice", "monUnitPrice");
            tableMapping.ColumnMappings.Add("monTotalPrice", "monTotalPrice");
            tableMapping.ColumnMappings.Add("strHSCode", "strHSCode");
            tableMapping.ColumnMappings.Add("numRatio", "numRatio");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Purchase_DAL.Properties.Settings.Default.ERP_PurchaseConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        intLCID, intItemID, strProductName, numTotalUnit, monUnitPrice, mon" +
                "TotalPrice, strHSCode, numRatio\r\nFROM            qryCommercialLCDetailWithItem";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT        intLCID, intItemID, strProductName, numTotalUnit, monUnitPrice, mon" +
                "TotalPrice, strHSCode, numRatio\r\nFROM            qryCommercialLCDetailWithItem\r\n" +
                "where intLCID=@lcID";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@lcID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "intLCID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LcTDS.QryCommercialLCDetailWithItemDataTable GetLCDataByItem() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LcTDS.QryCommercialLCDetailWithItemDataTable dataTable = new LcTDS.QryCommercialLCDetailWithItemDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual LcTDS.QryCommercialLCDetailWithItemDataTable GetItemDataByID(global::System.Nullable<int> lcID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((lcID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(lcID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            LcTDS.QryCommercialLCDetailWithItemDataTable dataTable = new LcTDS.QryCommercialLCDetailWithItemDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SprCommercialInstallmentInsertTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SprCommercialInstallmentInsertTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Purchase_DAL.Properties.Settings.Default.ERP_PurchaseConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.sprCommercialInstallmentInsert";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@installmentXML", global::System.Data.SqlDbType.VarChar, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@exRate", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 4, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@lcID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shipmentID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strResult", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.InputOutput, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LcTDS.SprCommercialInstallmentInsertDataTable InsertInstallmentData(string installmentXML, global::System.Nullable<decimal> exRate, global::System.Nullable<int> lcID, global::System.Nullable<int> shipmentID, ref string strResult) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((installmentXML == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(installmentXML));
            }
            if ((exRate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((decimal)(exRate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((lcID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(lcID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((shipmentID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(shipmentID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((strResult == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(strResult));
            }
            LcTDS.SprCommercialInstallmentInsertDataTable dataTable = new LcTDS.SprCommercialInstallmentInsertDataTable();
            this.Adapter.Fill(dataTable);
            if (((this.Adapter.SelectCommand.Parameters[5].Value == null) 
                        || (this.Adapter.SelectCommand.Parameters[5].Value.GetType() == typeof(global::System.DBNull)))) {
                strResult = null;
            }
            else {
                strResult = ((string)(this.Adapter.SelectCommand.Parameters[5].Value));
            }
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SprCommercialGetLCInfoTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SprCommercialGetLCInfoTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SprCommercialGetLCInfo";
            tableMapping.ColumnMappings.Add("intLCID", "intLCID");
            tableMapping.ColumnMappings.Add("strLCNumber", "strLCNumber");
            tableMapping.ColumnMappings.Add("intUnitID", "intUnitID");
            tableMapping.ColumnMappings.Add("monPIValue", "monPIValue");
            tableMapping.ColumnMappings.Add("intShipmentTypeID", "intShipmentTypeID");
            tableMapping.ColumnMappings.Add("intOurBankAccountID", "intOurBankAccountID");
            tableMapping.ColumnMappings.Add("intCurrenyID", "intCurrenyID");
            tableMapping.ColumnMappings.Add("intPaymentModeID", "intPaymentModeID");
            tableMapping.ColumnMappings.Add("numInstallment", "numInstallment");
            tableMapping.ColumnMappings.Add("numInstallmentFrequency", "numInstallmentFrequency");
            tableMapping.ColumnMappings.Add("dteStartData", "dteStartData");
            tableMapping.ColumnMappings.Add("numDays", "numDays");
            tableMapping.ColumnMappings.Add("strPOCode", "strPOCode");
            tableMapping.ColumnMappings.Add("intBankID", "intBankID");
            tableMapping.ColumnMappings.Add("intBankBranchID", "intBankBranchID");
            tableMapping.ColumnMappings.Add("strBankName", "strBankName");
            tableMapping.ColumnMappings.Add("strUnit", "strUnit");
            tableMapping.ColumnMappings.Add("strBranchName", "strBranchName");
            tableMapping.ColumnMappings.Add("strCurrency", "strCurrency");
            tableMapping.ColumnMappings.Add("strAdd1", "strAdd1");
            tableMapping.ColumnMappings.Add("strAdd2", "strAdd2");
            tableMapping.ColumnMappings.Add("strModeName", "strModeName");
            tableMapping.ColumnMappings.Add("strPaymentModeShortName", "strPaymentModeShortName");
            tableMapping.ColumnMappings.Add("intBankServiceID", "intBankServiceID");
            tableMapping.ColumnMappings.Add("strServeiceType", "strServeiceType");
            tableMapping.ColumnMappings.Add("strPortName", "strPortName");
            tableMapping.ColumnMappings.Add("strShipementType", "strShipementType");
            tableMapping.ColumnMappings.Add("intShipment", "intShipment");
            tableMapping.ColumnMappings.Add("intSupplierID", "intSupplierID");
            tableMapping.ColumnMappings.Add("strSuplierName", "strSuplierName");
            tableMapping.ColumnMappings.Add("strInsuranceCoverNoteNumber", "strInsuranceCoverNoteNumber");
            tableMapping.ColumnMappings.Add("intInsuranceCompanyID", "intInsuranceCompanyID");
            tableMapping.ColumnMappings.Add("strCompanyName", "strCompanyName");
            tableMapping.ColumnMappings.Add("ysnHaveTollerence", "ysnHaveTollerence");
            tableMapping.ColumnMappings.Add("numTollerence", "numTollerence");
            tableMapping.ColumnMappings.Add("strPlaceOfShipment", "strPlaceOfShipment");
            tableMapping.ColumnMappings.Add("intDistinationPort", "intDistinationPort");
            tableMapping.ColumnMappings.Add("ysnHasPertialShipment", "ysnHasPertialShipment");
            tableMapping.ColumnMappings.Add("strTermsOfShipment", "strTermsOfShipment");
            tableMapping.ColumnMappings.Add("dteLastShipment", "dteLastShipment");
            tableMapping.ColumnMappings.Add("dteEndDate", "dteEndDate");
            tableMapping.ColumnMappings.Add("ysnPSIApplicable", "ysnPSIApplicable");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Purchase_DAL.Properties.Settings.Default.ERP_PurchaseConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.sprCommercialGetLCInfo";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intLCID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LcTDS.SprCommercialGetLCInfoDataTable GetDataByLC(global::System.Nullable<int> intLCID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((intLCID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(intLCID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            LcTDS.SprCommercialGetLCInfoDataTable dataTable = new LcTDS.SprCommercialGetLCInfoDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SprCommercialGetLCDetailsListTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SprCommercialGetLCDetailsListTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SprCommercialGetLCDetailsList";
            tableMapping.ColumnMappings.Add("intLCID", "intLCID");
            tableMapping.ColumnMappings.Add("intItemID", "intItemID");
            tableMapping.ColumnMappings.Add("numTotalUnit", "numTotalUnit");
            tableMapping.ColumnMappings.Add("monUnitPrice", "monUnitPrice");
            tableMapping.ColumnMappings.Add("monTotalPrice", "monTotalPrice");
            tableMapping.ColumnMappings.Add("strHSCode", "strHSCode");
            tableMapping.ColumnMappings.Add("numRatio", "numRatio");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Purchase_DAL.Properties.Settings.Default.ERP_PurchaseConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.sprCommercialGetLCDetailsList";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@lcID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LcTDS.SprCommercialGetLCDetailsListDataTable GetLCDetailData(global::System.Nullable<int> lcID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((lcID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(lcID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            LcTDS.SprCommercialGetLCDetailsListDataTable dataTable = new LcTDS.SprCommercialGetLCDetailsListDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SprCommercialPOEditTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SprCommercialPOEditTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SprCommercialPOEdit";
            tableMapping.ColumnMappings.Add("strPaymentAttID", "strPaymentAttID");
            tableMapping.ColumnMappings.Add("monAmount", "monAmount");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Purchase_DAL.Properties.Settings.Default.ERP_PurchaseConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.sprCommercialPOEdit";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@itemXML", global::System.Data.SqlDbType.Xml, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strLCnumber", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strItermsOFShipment", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intINSComID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strInsCoverNoteNumber", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intDistinationPortID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ysPSIEnable", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@newExpireDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@newTollerence", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 8, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@exRateForAmentment", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 8, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@amentMentDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dteBudgetDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ysnInfoChange", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ysnValueChange", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ysnPeriodChange", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ysnAmendent", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intLCID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intUserID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LcTDS.SprCommercialPOEditDataTable GetDataAmenCharges(
                    object itemXML, 
                    string strLCnumber, 
                    string strItermsOFShipment, 
                    global::System.Nullable<int> intINSComID, 
                    string strInsCoverNoteNumber, 
                    global::System.Nullable<int> intDistinationPortID, 
                    global::System.Nullable<bool> ysPSIEnable, 
                    global::System.Nullable<global::System.DateTime> newExpireDate, 
                    global::System.Nullable<decimal> newTollerence, 
                    global::System.Nullable<decimal> exRateForAmentment, 
                    global::System.Nullable<global::System.DateTime> amentMentDate, 
                    global::System.Nullable<global::System.DateTime> dteBudgetDate, 
                    global::System.Nullable<bool> ysnInfoChange, 
                    global::System.Nullable<bool> ysnValueChange, 
                    global::System.Nullable<bool> ysnPeriodChange, 
                    global::System.Nullable<bool> ysnAmendent, 
                    global::System.Nullable<int> intLCID, 
                    global::System.Nullable<int> intUserID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((itemXML == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((object)(itemXML));
            }
            if ((strLCnumber == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(strLCnumber));
            }
            if ((strItermsOFShipment == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(strItermsOFShipment));
            }
            if ((intINSComID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(intINSComID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((strInsCoverNoteNumber == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(strInsCoverNoteNumber));
            }
            if ((intDistinationPortID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((int)(intDistinationPortID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((ysPSIEnable.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((bool)(ysPSIEnable.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((newExpireDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[8].Value = ((System.DateTime)(newExpireDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((newTollerence.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[9].Value = ((decimal)(newTollerence.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((exRateForAmentment.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[10].Value = ((decimal)(exRateForAmentment.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((amentMentDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[11].Value = ((System.DateTime)(amentMentDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((dteBudgetDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[12].Value = ((System.DateTime)(dteBudgetDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((ysnInfoChange.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[13].Value = ((bool)(ysnInfoChange.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((ysnValueChange.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[14].Value = ((bool)(ysnValueChange.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((ysnPeriodChange.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[15].Value = ((bool)(ysnPeriodChange.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((ysnAmendent.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[16].Value = ((bool)(ysnAmendent.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((intLCID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[17].Value = ((int)(intLCID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((intUserID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[18].Value = ((int)(intUserID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            LcTDS.SprCommercialPOEditDataTable dataTable = new LcTDS.SprCommercialPOEditDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private TblCommercialLCTableAdapter _tblCommercialLCTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TblCommercialLCTableAdapter TblCommercialLCTableAdapter {
            get {
                return this._tblCommercialLCTableAdapter;
            }
            set {
                this._tblCommercialLCTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._tblCommercialLCTableAdapter != null) 
                            && (this._tblCommercialLCTableAdapter.Connection != null))) {
                    return this._tblCommercialLCTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._tblCommercialLCTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(LcTDS dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tblCommercialLCTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TblCommercialLC.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tblCommercialLCTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(LcTDS dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tblCommercialLCTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TblCommercialLC.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tblCommercialLCTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(LcTDS dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._tblCommercialLCTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TblCommercialLC.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tblCommercialLCTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(LcTDS dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._tblCommercialLCTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tblCommercialLCTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._tblCommercialLCTableAdapter != null)) {
                    revertConnections.Add(this._tblCommercialLCTableAdapter, this._tblCommercialLCTableAdapter.Connection);
                    this._tblCommercialLCTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tblCommercialLCTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tblCommercialLCTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tblCommercialLCTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tblCommercialLCTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._tblCommercialLCTableAdapter != null)) {
                    this._tblCommercialLCTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tblCommercialLCTableAdapter]));
                    this._tblCommercialLCTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591