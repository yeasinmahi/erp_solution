//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Purchase_DAL.Commercial {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("LetterTDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class LetterTDS : global::System.Data.DataSet {
        
        private FunCommercialLetterOpenningDataTable tableFunCommercialLetterOpenning;
        
        private TblCommercialLetterDataTable tableTblCommercialLetter;
        
        private FumCommercialLetterDuyPortShippingDataTable tableFumCommercialLetterDuyPortShipping;
        
        private FunCommercialLetterFCDataTable tableFunCommercialLetterFC;
        
        private FunCommercialLetterCoptDocumentDataTable tableFunCommercialLetterCoptDocument;
        
        private FunCommercialLetterCNFDataTable tableFunCommercialLetterCNF;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public LetterTDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected LetterTDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["FunCommercialLetterOpenning"] != null)) {
                    base.Tables.Add(new FunCommercialLetterOpenningDataTable(ds.Tables["FunCommercialLetterOpenning"]));
                }
                if ((ds.Tables["TblCommercialLetter"] != null)) {
                    base.Tables.Add(new TblCommercialLetterDataTable(ds.Tables["TblCommercialLetter"]));
                }
                if ((ds.Tables["FumCommercialLetterDuyPortShipping"] != null)) {
                    base.Tables.Add(new FumCommercialLetterDuyPortShippingDataTable(ds.Tables["FumCommercialLetterDuyPortShipping"]));
                }
                if ((ds.Tables["FunCommercialLetterFC"] != null)) {
                    base.Tables.Add(new FunCommercialLetterFCDataTable(ds.Tables["FunCommercialLetterFC"]));
                }
                if ((ds.Tables["FunCommercialLetterCoptDocument"] != null)) {
                    base.Tables.Add(new FunCommercialLetterCoptDocumentDataTable(ds.Tables["FunCommercialLetterCoptDocument"]));
                }
                if ((ds.Tables["FunCommercialLetterCNF"] != null)) {
                    base.Tables.Add(new FunCommercialLetterCNFDataTable(ds.Tables["FunCommercialLetterCNF"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FunCommercialLetterOpenningDataTable FunCommercialLetterOpenning {
            get {
                return this.tableFunCommercialLetterOpenning;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TblCommercialLetterDataTable TblCommercialLetter {
            get {
                return this.tableTblCommercialLetter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FumCommercialLetterDuyPortShippingDataTable FumCommercialLetterDuyPortShipping {
            get {
                return this.tableFumCommercialLetterDuyPortShipping;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FunCommercialLetterFCDataTable FunCommercialLetterFC {
            get {
                return this.tableFunCommercialLetterFC;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FunCommercialLetterCoptDocumentDataTable FunCommercialLetterCoptDocument {
            get {
                return this.tableFunCommercialLetterCoptDocument;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FunCommercialLetterCNFDataTable FunCommercialLetterCNF {
            get {
                return this.tableFunCommercialLetterCNF;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            LetterTDS cln = ((LetterTDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["FunCommercialLetterOpenning"] != null)) {
                    base.Tables.Add(new FunCommercialLetterOpenningDataTable(ds.Tables["FunCommercialLetterOpenning"]));
                }
                if ((ds.Tables["TblCommercialLetter"] != null)) {
                    base.Tables.Add(new TblCommercialLetterDataTable(ds.Tables["TblCommercialLetter"]));
                }
                if ((ds.Tables["FumCommercialLetterDuyPortShipping"] != null)) {
                    base.Tables.Add(new FumCommercialLetterDuyPortShippingDataTable(ds.Tables["FumCommercialLetterDuyPortShipping"]));
                }
                if ((ds.Tables["FunCommercialLetterFC"] != null)) {
                    base.Tables.Add(new FunCommercialLetterFCDataTable(ds.Tables["FunCommercialLetterFC"]));
                }
                if ((ds.Tables["FunCommercialLetterCoptDocument"] != null)) {
                    base.Tables.Add(new FunCommercialLetterCoptDocumentDataTable(ds.Tables["FunCommercialLetterCoptDocument"]));
                }
                if ((ds.Tables["FunCommercialLetterCNF"] != null)) {
                    base.Tables.Add(new FunCommercialLetterCNFDataTable(ds.Tables["FunCommercialLetterCNF"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableFunCommercialLetterOpenning = ((FunCommercialLetterOpenningDataTable)(base.Tables["FunCommercialLetterOpenning"]));
            if ((initTable == true)) {
                if ((this.tableFunCommercialLetterOpenning != null)) {
                    this.tableFunCommercialLetterOpenning.InitVars();
                }
            }
            this.tableTblCommercialLetter = ((TblCommercialLetterDataTable)(base.Tables["TblCommercialLetter"]));
            if ((initTable == true)) {
                if ((this.tableTblCommercialLetter != null)) {
                    this.tableTblCommercialLetter.InitVars();
                }
            }
            this.tableFumCommercialLetterDuyPortShipping = ((FumCommercialLetterDuyPortShippingDataTable)(base.Tables["FumCommercialLetterDuyPortShipping"]));
            if ((initTable == true)) {
                if ((this.tableFumCommercialLetterDuyPortShipping != null)) {
                    this.tableFumCommercialLetterDuyPortShipping.InitVars();
                }
            }
            this.tableFunCommercialLetterFC = ((FunCommercialLetterFCDataTable)(base.Tables["FunCommercialLetterFC"]));
            if ((initTable == true)) {
                if ((this.tableFunCommercialLetterFC != null)) {
                    this.tableFunCommercialLetterFC.InitVars();
                }
            }
            this.tableFunCommercialLetterCoptDocument = ((FunCommercialLetterCoptDocumentDataTable)(base.Tables["FunCommercialLetterCoptDocument"]));
            if ((initTable == true)) {
                if ((this.tableFunCommercialLetterCoptDocument != null)) {
                    this.tableFunCommercialLetterCoptDocument.InitVars();
                }
            }
            this.tableFunCommercialLetterCNF = ((FunCommercialLetterCNFDataTable)(base.Tables["FunCommercialLetterCNF"]));
            if ((initTable == true)) {
                if ((this.tableFunCommercialLetterCNF != null)) {
                    this.tableFunCommercialLetterCNF.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "LetterTDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/LetterTDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableFunCommercialLetterOpenning = new FunCommercialLetterOpenningDataTable();
            base.Tables.Add(this.tableFunCommercialLetterOpenning);
            this.tableTblCommercialLetter = new TblCommercialLetterDataTable();
            base.Tables.Add(this.tableTblCommercialLetter);
            this.tableFumCommercialLetterDuyPortShipping = new FumCommercialLetterDuyPortShippingDataTable();
            base.Tables.Add(this.tableFumCommercialLetterDuyPortShipping);
            this.tableFunCommercialLetterFC = new FunCommercialLetterFCDataTable();
            base.Tables.Add(this.tableFunCommercialLetterFC);
            this.tableFunCommercialLetterCoptDocument = new FunCommercialLetterCoptDocumentDataTable();
            base.Tables.Add(this.tableFunCommercialLetterCoptDocument);
            this.tableFunCommercialLetterCNF = new FunCommercialLetterCNFDataTable();
            base.Tables.Add(this.tableFunCommercialLetterCNF);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeFunCommercialLetterOpenning() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTblCommercialLetter() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeFumCommercialLetterDuyPortShipping() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeFunCommercialLetterFC() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeFunCommercialLetterCoptDocument() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeFunCommercialLetterCNF() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            LetterTDS ds = new LetterTDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void FunCommercialLetterOpenningRowChangeEventHandler(object sender, FunCommercialLetterOpenningRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TblCommercialLetterRowChangeEventHandler(object sender, TblCommercialLetterRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void FumCommercialLetterDuyPortShippingRowChangeEventHandler(object sender, FumCommercialLetterDuyPortShippingRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void FunCommercialLetterFCRowChangeEventHandler(object sender, FunCommercialLetterFCRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void FunCommercialLetterCoptDocumentRowChangeEventHandler(object sender, FunCommercialLetterCoptDocumentRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void FunCommercialLetterCNFRowChangeEventHandler(object sender, FunCommercialLetterCNFRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FunCommercialLetterOpenningDataTable : global::System.Data.TypedTableBase<FunCommercialLetterOpenningRow> {
            
            private global::System.Data.DataColumn columnstrBankName;
            
            private global::System.Data.DataColumn columnstrBranchName;
            
            private global::System.Data.DataColumn columnstrBranchAdd1;
            
            private global::System.Data.DataColumn columnstrBranchAdd2;
            
            private global::System.Data.DataColumn columnstrLCNumber;
            
            private global::System.Data.DataColumn columnmonPIAmount;
            
            private global::System.Data.DataColumn columnmonInvoiceAmount;
            
            private global::System.Data.DataColumn columnstrLoanAccNames;
            
            private global::System.Data.DataColumn columnstrCDAccountNumber;
            
            private global::System.Data.DataColumn columnstrUnitShortName;
            
            private global::System.Data.DataColumn columndteLCDate;
            
            private global::System.Data.DataColumn columnstrCurrency;
            
            private global::System.Data.DataColumn columnstrPaymentModeName;
            
            private global::System.Data.DataColumn columnstrNarr1;
            
            private global::System.Data.DataColumn columnstrAdviceNumber;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FunCommercialLetterOpenningDataTable() {
                this.TableName = "FunCommercialLetterOpenning";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FunCommercialLetterOpenningDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected FunCommercialLetterOpenningDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strBankNameColumn {
                get {
                    return this.columnstrBankName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strBranchNameColumn {
                get {
                    return this.columnstrBranchName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strBranchAdd1Column {
                get {
                    return this.columnstrBranchAdd1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strBranchAdd2Column {
                get {
                    return this.columnstrBranchAdd2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strLCNumberColumn {
                get {
                    return this.columnstrLCNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn monPIAmountColumn {
                get {
                    return this.columnmonPIAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn monInvoiceAmountColumn {
                get {
                    return this.columnmonInvoiceAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strLoanAccNamesColumn {
                get {
                    return this.columnstrLoanAccNames;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strCDAccountNumberColumn {
                get {
                    return this.columnstrCDAccountNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strUnitShortNameColumn {
                get {
                    return this.columnstrUnitShortName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dteLCDateColumn {
                get {
                    return this.columndteLCDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strCurrencyColumn {
                get {
                    return this.columnstrCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strPaymentModeNameColumn {
                get {
                    return this.columnstrPaymentModeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strNarr1Column {
                get {
                    return this.columnstrNarr1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strAdviceNumberColumn {
                get {
                    return this.columnstrAdviceNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FunCommercialLetterOpenningRow this[int index] {
                get {
                    return ((FunCommercialLetterOpenningRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FunCommercialLetterOpenningRowChangeEventHandler FunCommercialLetterOpenningRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FunCommercialLetterOpenningRowChangeEventHandler FunCommercialLetterOpenningRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FunCommercialLetterOpenningRowChangeEventHandler FunCommercialLetterOpenningRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FunCommercialLetterOpenningRowChangeEventHandler FunCommercialLetterOpenningRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddFunCommercialLetterOpenningRow(FunCommercialLetterOpenningRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FunCommercialLetterOpenningRow AddFunCommercialLetterOpenningRow(string strBankName, string strBranchName, string strBranchAdd1, string strBranchAdd2, string strLCNumber, decimal monPIAmount, decimal monInvoiceAmount, string strLoanAccNames, string strCDAccountNumber, string strUnitShortName, System.DateTime dteLCDate, string strCurrency, string strPaymentModeName, string strNarr1, string strAdviceNumber) {
                FunCommercialLetterOpenningRow rowFunCommercialLetterOpenningRow = ((FunCommercialLetterOpenningRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        strBankName,
                        strBranchName,
                        strBranchAdd1,
                        strBranchAdd2,
                        strLCNumber,
                        monPIAmount,
                        monInvoiceAmount,
                        strLoanAccNames,
                        strCDAccountNumber,
                        strUnitShortName,
                        dteLCDate,
                        strCurrency,
                        strPaymentModeName,
                        strNarr1,
                        strAdviceNumber};
                rowFunCommercialLetterOpenningRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFunCommercialLetterOpenningRow);
                return rowFunCommercialLetterOpenningRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FunCommercialLetterOpenningDataTable cln = ((FunCommercialLetterOpenningDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FunCommercialLetterOpenningDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnstrBankName = base.Columns["strBankName"];
                this.columnstrBranchName = base.Columns["strBranchName"];
                this.columnstrBranchAdd1 = base.Columns["strBranchAdd1"];
                this.columnstrBranchAdd2 = base.Columns["strBranchAdd2"];
                this.columnstrLCNumber = base.Columns["strLCNumber"];
                this.columnmonPIAmount = base.Columns["monPIAmount"];
                this.columnmonInvoiceAmount = base.Columns["monInvoiceAmount"];
                this.columnstrLoanAccNames = base.Columns["strLoanAccNames"];
                this.columnstrCDAccountNumber = base.Columns["strCDAccountNumber"];
                this.columnstrUnitShortName = base.Columns["strUnitShortName"];
                this.columndteLCDate = base.Columns["dteLCDate"];
                this.columnstrCurrency = base.Columns["strCurrency"];
                this.columnstrPaymentModeName = base.Columns["strPaymentModeName"];
                this.columnstrNarr1 = base.Columns["strNarr1"];
                this.columnstrAdviceNumber = base.Columns["strAdviceNumber"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnstrBankName = new global::System.Data.DataColumn("strBankName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrBankName);
                this.columnstrBranchName = new global::System.Data.DataColumn("strBranchName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrBranchName);
                this.columnstrBranchAdd1 = new global::System.Data.DataColumn("strBranchAdd1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrBranchAdd1);
                this.columnstrBranchAdd2 = new global::System.Data.DataColumn("strBranchAdd2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrBranchAdd2);
                this.columnstrLCNumber = new global::System.Data.DataColumn("strLCNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrLCNumber);
                this.columnmonPIAmount = new global::System.Data.DataColumn("monPIAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmonPIAmount);
                this.columnmonInvoiceAmount = new global::System.Data.DataColumn("monInvoiceAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmonInvoiceAmount);
                this.columnstrLoanAccNames = new global::System.Data.DataColumn("strLoanAccNames", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrLoanAccNames);
                this.columnstrCDAccountNumber = new global::System.Data.DataColumn("strCDAccountNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrCDAccountNumber);
                this.columnstrUnitShortName = new global::System.Data.DataColumn("strUnitShortName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrUnitShortName);
                this.columndteLCDate = new global::System.Data.DataColumn("dteLCDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndteLCDate);
                this.columnstrCurrency = new global::System.Data.DataColumn("strCurrency", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrCurrency);
                this.columnstrPaymentModeName = new global::System.Data.DataColumn("strPaymentModeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrPaymentModeName);
                this.columnstrNarr1 = new global::System.Data.DataColumn("strNarr1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrNarr1);
                this.columnstrAdviceNumber = new global::System.Data.DataColumn("strAdviceNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrAdviceNumber);
                this.columnstrBankName.MaxLength = 1000;
                this.columnstrBranchName.MaxLength = 1000;
                this.columnstrBranchAdd1.MaxLength = 1000;
                this.columnstrBranchAdd2.MaxLength = 1000;
                this.columnstrLCNumber.MaxLength = 1000;
                this.columnstrLoanAccNames.MaxLength = 1000;
                this.columnstrCDAccountNumber.MaxLength = 1000;
                this.columnstrUnitShortName.MaxLength = 100;
                this.columnstrCurrency.MaxLength = 1000;
                this.columnstrPaymentModeName.MaxLength = 100;
                this.columnstrNarr1.MaxLength = 100;
                this.columnstrAdviceNumber.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FunCommercialLetterOpenningRow NewFunCommercialLetterOpenningRow() {
                return ((FunCommercialLetterOpenningRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FunCommercialLetterOpenningRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FunCommercialLetterOpenningRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FunCommercialLetterOpenningRowChanged != null)) {
                    this.FunCommercialLetterOpenningRowChanged(this, new FunCommercialLetterOpenningRowChangeEvent(((FunCommercialLetterOpenningRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FunCommercialLetterOpenningRowChanging != null)) {
                    this.FunCommercialLetterOpenningRowChanging(this, new FunCommercialLetterOpenningRowChangeEvent(((FunCommercialLetterOpenningRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FunCommercialLetterOpenningRowDeleted != null)) {
                    this.FunCommercialLetterOpenningRowDeleted(this, new FunCommercialLetterOpenningRowChangeEvent(((FunCommercialLetterOpenningRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FunCommercialLetterOpenningRowDeleting != null)) {
                    this.FunCommercialLetterOpenningRowDeleting(this, new FunCommercialLetterOpenningRowChangeEvent(((FunCommercialLetterOpenningRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveFunCommercialLetterOpenningRow(FunCommercialLetterOpenningRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LetterTDS ds = new LetterTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FunCommercialLetterOpenningDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TblCommercialLetterDataTable : global::System.Data.TypedTableBase<TblCommercialLetterRow> {
            
            private global::System.Data.DataColumn columnintLetterType;
            
            private global::System.Data.DataColumn columnstrLetterName;
            
            private global::System.Data.DataColumn columnstrShortName;
            
            private global::System.Data.DataColumn columnstrUrlForLetterBody;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TblCommercialLetterDataTable() {
                this.TableName = "TblCommercialLetter";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TblCommercialLetterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TblCommercialLetterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn intLetterTypeColumn {
                get {
                    return this.columnintLetterType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strLetterNameColumn {
                get {
                    return this.columnstrLetterName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strShortNameColumn {
                get {
                    return this.columnstrShortName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strUrlForLetterBodyColumn {
                get {
                    return this.columnstrUrlForLetterBody;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TblCommercialLetterRow this[int index] {
                get {
                    return ((TblCommercialLetterRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TblCommercialLetterRowChangeEventHandler TblCommercialLetterRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TblCommercialLetterRowChangeEventHandler TblCommercialLetterRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TblCommercialLetterRowChangeEventHandler TblCommercialLetterRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TblCommercialLetterRowChangeEventHandler TblCommercialLetterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTblCommercialLetterRow(TblCommercialLetterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TblCommercialLetterRow AddTblCommercialLetterRow(string strLetterName, string strShortName, string strUrlForLetterBody) {
                TblCommercialLetterRow rowTblCommercialLetterRow = ((TblCommercialLetterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        strLetterName,
                        strShortName,
                        strUrlForLetterBody};
                rowTblCommercialLetterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTblCommercialLetterRow);
                return rowTblCommercialLetterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TblCommercialLetterRow FindByintLetterType(int intLetterType) {
                return ((TblCommercialLetterRow)(this.Rows.Find(new object[] {
                            intLetterType})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TblCommercialLetterDataTable cln = ((TblCommercialLetterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TblCommercialLetterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnintLetterType = base.Columns["intLetterType"];
                this.columnstrLetterName = base.Columns["strLetterName"];
                this.columnstrShortName = base.Columns["strShortName"];
                this.columnstrUrlForLetterBody = base.Columns["strUrlForLetterBody"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnintLetterType = new global::System.Data.DataColumn("intLetterType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnintLetterType);
                this.columnstrLetterName = new global::System.Data.DataColumn("strLetterName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrLetterName);
                this.columnstrShortName = new global::System.Data.DataColumn("strShortName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrShortName);
                this.columnstrUrlForLetterBody = new global::System.Data.DataColumn("strUrlForLetterBody", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrUrlForLetterBody);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnintLetterType}, true));
                this.columnintLetterType.AutoIncrement = true;
                this.columnintLetterType.AutoIncrementSeed = -1;
                this.columnintLetterType.AutoIncrementStep = -1;
                this.columnintLetterType.AllowDBNull = false;
                this.columnintLetterType.ReadOnly = true;
                this.columnintLetterType.Unique = true;
                this.columnstrLetterName.MaxLength = 1000;
                this.columnstrShortName.MaxLength = 100;
                this.columnstrUrlForLetterBody.MaxLength = 1000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TblCommercialLetterRow NewTblCommercialLetterRow() {
                return ((TblCommercialLetterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TblCommercialLetterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TblCommercialLetterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TblCommercialLetterRowChanged != null)) {
                    this.TblCommercialLetterRowChanged(this, new TblCommercialLetterRowChangeEvent(((TblCommercialLetterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TblCommercialLetterRowChanging != null)) {
                    this.TblCommercialLetterRowChanging(this, new TblCommercialLetterRowChangeEvent(((TblCommercialLetterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TblCommercialLetterRowDeleted != null)) {
                    this.TblCommercialLetterRowDeleted(this, new TblCommercialLetterRowChangeEvent(((TblCommercialLetterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TblCommercialLetterRowDeleting != null)) {
                    this.TblCommercialLetterRowDeleting(this, new TblCommercialLetterRowChangeEvent(((TblCommercialLetterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTblCommercialLetterRow(TblCommercialLetterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LetterTDS ds = new LetterTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TblCommercialLetterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FumCommercialLetterDuyPortShippingDataTable : global::System.Data.TypedTableBase<FumCommercialLetterDuyPortShippingRow> {
            
            private global::System.Data.DataColumn columnstrBankName;
            
            private global::System.Data.DataColumn columnstrBranchName;
            
            private global::System.Data.DataColumn columnstrBranchAdd1;
            
            private global::System.Data.DataColumn columnstrBranchAdd2;
            
            private global::System.Data.DataColumn columnstrLCNumber;
            
            private global::System.Data.DataColumn columnmonPIAmount;
            
            private global::System.Data.DataColumn columnmonInvoiceAmount;
            
            private global::System.Data.DataColumn columnstrLoanAccNames;
            
            private global::System.Data.DataColumn columnstrCDAccountNumber;
            
            private global::System.Data.DataColumn columnstrUnitShortName;
            
            private global::System.Data.DataColumn columndteLCDate;
            
            private global::System.Data.DataColumn columnstrCurrency;
            
            private global::System.Data.DataColumn columnstrPaymentModeName;
            
            private global::System.Data.DataColumn columnstrBankServiceType;
            
            private global::System.Data.DataColumn columnmonTotalAmount;
            
            private global::System.Data.DataColumn columnmonDutyAmount;
            
            private global::System.Data.DataColumn columnmonPortDue;
            
            private global::System.Data.DataColumn columnmonShippingDue;
            
            private global::System.Data.DataColumn columnstrAdviceNumber;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FumCommercialLetterDuyPortShippingDataTable() {
                this.TableName = "FumCommercialLetterDuyPortShipping";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FumCommercialLetterDuyPortShippingDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected FumCommercialLetterDuyPortShippingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strBankNameColumn {
                get {
                    return this.columnstrBankName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strBranchNameColumn {
                get {
                    return this.columnstrBranchName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strBranchAdd1Column {
                get {
                    return this.columnstrBranchAdd1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strBranchAdd2Column {
                get {
                    return this.columnstrBranchAdd2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strLCNumberColumn {
                get {
                    return this.columnstrLCNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn monPIAmountColumn {
                get {
                    return this.columnmonPIAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn monInvoiceAmountColumn {
                get {
                    return this.columnmonInvoiceAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strLoanAccNamesColumn {
                get {
                    return this.columnstrLoanAccNames;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strCDAccountNumberColumn {
                get {
                    return this.columnstrCDAccountNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strUnitShortNameColumn {
                get {
                    return this.columnstrUnitShortName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dteLCDateColumn {
                get {
                    return this.columndteLCDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strCurrencyColumn {
                get {
                    return this.columnstrCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strPaymentModeNameColumn {
                get {
                    return this.columnstrPaymentModeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strBankServiceTypeColumn {
                get {
                    return this.columnstrBankServiceType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn monTotalAmountColumn {
                get {
                    return this.columnmonTotalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn monDutyAmountColumn {
                get {
                    return this.columnmonDutyAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn monPortDueColumn {
                get {
                    return this.columnmonPortDue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn monShippingDueColumn {
                get {
                    return this.columnmonShippingDue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strAdviceNumberColumn {
                get {
                    return this.columnstrAdviceNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FumCommercialLetterDuyPortShippingRow this[int index] {
                get {
                    return ((FumCommercialLetterDuyPortShippingRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FumCommercialLetterDuyPortShippingRowChangeEventHandler FumCommercialLetterDuyPortShippingRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FumCommercialLetterDuyPortShippingRowChangeEventHandler FumCommercialLetterDuyPortShippingRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FumCommercialLetterDuyPortShippingRowChangeEventHandler FumCommercialLetterDuyPortShippingRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FumCommercialLetterDuyPortShippingRowChangeEventHandler FumCommercialLetterDuyPortShippingRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddFumCommercialLetterDuyPortShippingRow(FumCommercialLetterDuyPortShippingRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FumCommercialLetterDuyPortShippingRow AddFumCommercialLetterDuyPortShippingRow(
                        string strBankName, 
                        string strBranchName, 
                        string strBranchAdd1, 
                        string strBranchAdd2, 
                        string strLCNumber, 
                        decimal monPIAmount, 
                        decimal monInvoiceAmount, 
                        string strLoanAccNames, 
                        string strCDAccountNumber, 
                        string strUnitShortName, 
                        System.DateTime dteLCDate, 
                        string strCurrency, 
                        string strPaymentModeName, 
                        string strBankServiceType, 
                        decimal monTotalAmount, 
                        decimal monDutyAmount, 
                        decimal monPortDue, 
                        decimal monShippingDue, 
                        string strAdviceNumber) {
                FumCommercialLetterDuyPortShippingRow rowFumCommercialLetterDuyPortShippingRow = ((FumCommercialLetterDuyPortShippingRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        strBankName,
                        strBranchName,
                        strBranchAdd1,
                        strBranchAdd2,
                        strLCNumber,
                        monPIAmount,
                        monInvoiceAmount,
                        strLoanAccNames,
                        strCDAccountNumber,
                        strUnitShortName,
                        dteLCDate,
                        strCurrency,
                        strPaymentModeName,
                        strBankServiceType,
                        monTotalAmount,
                        monDutyAmount,
                        monPortDue,
                        monShippingDue,
                        strAdviceNumber};
                rowFumCommercialLetterDuyPortShippingRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFumCommercialLetterDuyPortShippingRow);
                return rowFumCommercialLetterDuyPortShippingRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FumCommercialLetterDuyPortShippingDataTable cln = ((FumCommercialLetterDuyPortShippingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FumCommercialLetterDuyPortShippingDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnstrBankName = base.Columns["strBankName"];
                this.columnstrBranchName = base.Columns["strBranchName"];
                this.columnstrBranchAdd1 = base.Columns["strBranchAdd1"];
                this.columnstrBranchAdd2 = base.Columns["strBranchAdd2"];
                this.columnstrLCNumber = base.Columns["strLCNumber"];
                this.columnmonPIAmount = base.Columns["monPIAmount"];
                this.columnmonInvoiceAmount = base.Columns["monInvoiceAmount"];
                this.columnstrLoanAccNames = base.Columns["strLoanAccNames"];
                this.columnstrCDAccountNumber = base.Columns["strCDAccountNumber"];
                this.columnstrUnitShortName = base.Columns["strUnitShortName"];
                this.columndteLCDate = base.Columns["dteLCDate"];
                this.columnstrCurrency = base.Columns["strCurrency"];
                this.columnstrPaymentModeName = base.Columns["strPaymentModeName"];
                this.columnstrBankServiceType = base.Columns["strBankServiceType"];
                this.columnmonTotalAmount = base.Columns["monTotalAmount"];
                this.columnmonDutyAmount = base.Columns["monDutyAmount"];
                this.columnmonPortDue = base.Columns["monPortDue"];
                this.columnmonShippingDue = base.Columns["monShippingDue"];
                this.columnstrAdviceNumber = base.Columns["strAdviceNumber"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnstrBankName = new global::System.Data.DataColumn("strBankName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrBankName);
                this.columnstrBranchName = new global::System.Data.DataColumn("strBranchName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrBranchName);
                this.columnstrBranchAdd1 = new global::System.Data.DataColumn("strBranchAdd1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrBranchAdd1);
                this.columnstrBranchAdd2 = new global::System.Data.DataColumn("strBranchAdd2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrBranchAdd2);
                this.columnstrLCNumber = new global::System.Data.DataColumn("strLCNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrLCNumber);
                this.columnmonPIAmount = new global::System.Data.DataColumn("monPIAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmonPIAmount);
                this.columnmonInvoiceAmount = new global::System.Data.DataColumn("monInvoiceAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmonInvoiceAmount);
                this.columnstrLoanAccNames = new global::System.Data.DataColumn("strLoanAccNames", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrLoanAccNames);
                this.columnstrCDAccountNumber = new global::System.Data.DataColumn("strCDAccountNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrCDAccountNumber);
                this.columnstrUnitShortName = new global::System.Data.DataColumn("strUnitShortName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrUnitShortName);
                this.columndteLCDate = new global::System.Data.DataColumn("dteLCDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndteLCDate);
                this.columnstrCurrency = new global::System.Data.DataColumn("strCurrency", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrCurrency);
                this.columnstrPaymentModeName = new global::System.Data.DataColumn("strPaymentModeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrPaymentModeName);
                this.columnstrBankServiceType = new global::System.Data.DataColumn("strBankServiceType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrBankServiceType);
                this.columnmonTotalAmount = new global::System.Data.DataColumn("monTotalAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmonTotalAmount);
                this.columnmonDutyAmount = new global::System.Data.DataColumn("monDutyAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmonDutyAmount);
                this.columnmonPortDue = new global::System.Data.DataColumn("monPortDue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmonPortDue);
                this.columnmonShippingDue = new global::System.Data.DataColumn("monShippingDue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmonShippingDue);
                this.columnstrAdviceNumber = new global::System.Data.DataColumn("strAdviceNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrAdviceNumber);
                this.columnstrBankName.MaxLength = 1000;
                this.columnstrBranchName.MaxLength = 1000;
                this.columnstrBranchAdd1.MaxLength = 1000;
                this.columnstrBranchAdd2.MaxLength = 1000;
                this.columnstrLCNumber.MaxLength = 1000;
                this.columnstrLoanAccNames.MaxLength = 1000;
                this.columnstrCDAccountNumber.MaxLength = 1000;
                this.columnstrUnitShortName.MaxLength = 100;
                this.columnstrCurrency.MaxLength = 1000;
                this.columnstrPaymentModeName.MaxLength = 100;
                this.columnstrBankServiceType.MaxLength = 100;
                this.columnstrAdviceNumber.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FumCommercialLetterDuyPortShippingRow NewFumCommercialLetterDuyPortShippingRow() {
                return ((FumCommercialLetterDuyPortShippingRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FumCommercialLetterDuyPortShippingRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FumCommercialLetterDuyPortShippingRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FumCommercialLetterDuyPortShippingRowChanged != null)) {
                    this.FumCommercialLetterDuyPortShippingRowChanged(this, new FumCommercialLetterDuyPortShippingRowChangeEvent(((FumCommercialLetterDuyPortShippingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FumCommercialLetterDuyPortShippingRowChanging != null)) {
                    this.FumCommercialLetterDuyPortShippingRowChanging(this, new FumCommercialLetterDuyPortShippingRowChangeEvent(((FumCommercialLetterDuyPortShippingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FumCommercialLetterDuyPortShippingRowDeleted != null)) {
                    this.FumCommercialLetterDuyPortShippingRowDeleted(this, new FumCommercialLetterDuyPortShippingRowChangeEvent(((FumCommercialLetterDuyPortShippingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FumCommercialLetterDuyPortShippingRowDeleting != null)) {
                    this.FumCommercialLetterDuyPortShippingRowDeleting(this, new FumCommercialLetterDuyPortShippingRowChangeEvent(((FumCommercialLetterDuyPortShippingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveFumCommercialLetterDuyPortShippingRow(FumCommercialLetterDuyPortShippingRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LetterTDS ds = new LetterTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FumCommercialLetterDuyPortShippingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FunCommercialLetterFCDataTable : global::System.Data.TypedTableBase<FunCommercialLetterFCRow> {
            
            private global::System.Data.DataColumn columnstrBankName;
            
            private global::System.Data.DataColumn columnstrBranchName;
            
            private global::System.Data.DataColumn columnstrBranchAdd1;
            
            private global::System.Data.DataColumn columnstrBranchAdd2;
            
            private global::System.Data.DataColumn columnstrLCNumber;
            
            private global::System.Data.DataColumn columnmonPIAmount;
            
            private global::System.Data.DataColumn columnmonInvoiceAmount;
            
            private global::System.Data.DataColumn columnstrLoanAccNames;
            
            private global::System.Data.DataColumn columnstrCDAccountNumber;
            
            private global::System.Data.DataColumn columnstrUnitShortName;
            
            private global::System.Data.DataColumn columndteLCDate;
            
            private global::System.Data.DataColumn columnstrCurrency;
            
            private global::System.Data.DataColumn columnstrPaymentModeName;
            
            private global::System.Data.DataColumn columnstrNarrationFC1;
            
            private global::System.Data.DataColumn columnstrNarrationFC2;
            
            private global::System.Data.DataColumn columnstrAdviceNumber;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FunCommercialLetterFCDataTable() {
                this.TableName = "FunCommercialLetterFC";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FunCommercialLetterFCDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected FunCommercialLetterFCDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strBankNameColumn {
                get {
                    return this.columnstrBankName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strBranchNameColumn {
                get {
                    return this.columnstrBranchName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strBranchAdd1Column {
                get {
                    return this.columnstrBranchAdd1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strBranchAdd2Column {
                get {
                    return this.columnstrBranchAdd2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strLCNumberColumn {
                get {
                    return this.columnstrLCNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn monPIAmountColumn {
                get {
                    return this.columnmonPIAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn monInvoiceAmountColumn {
                get {
                    return this.columnmonInvoiceAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strLoanAccNamesColumn {
                get {
                    return this.columnstrLoanAccNames;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strCDAccountNumberColumn {
                get {
                    return this.columnstrCDAccountNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strUnitShortNameColumn {
                get {
                    return this.columnstrUnitShortName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dteLCDateColumn {
                get {
                    return this.columndteLCDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strCurrencyColumn {
                get {
                    return this.columnstrCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strPaymentModeNameColumn {
                get {
                    return this.columnstrPaymentModeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strNarrationFC1Column {
                get {
                    return this.columnstrNarrationFC1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strNarrationFC2Column {
                get {
                    return this.columnstrNarrationFC2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strAdviceNumberColumn {
                get {
                    return this.columnstrAdviceNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FunCommercialLetterFCRow this[int index] {
                get {
                    return ((FunCommercialLetterFCRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FunCommercialLetterFCRowChangeEventHandler FunCommercialLetterFCRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FunCommercialLetterFCRowChangeEventHandler FunCommercialLetterFCRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FunCommercialLetterFCRowChangeEventHandler FunCommercialLetterFCRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FunCommercialLetterFCRowChangeEventHandler FunCommercialLetterFCRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddFunCommercialLetterFCRow(FunCommercialLetterFCRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FunCommercialLetterFCRow AddFunCommercialLetterFCRow(
                        string strBankName, 
                        string strBranchName, 
                        string strBranchAdd1, 
                        string strBranchAdd2, 
                        string strLCNumber, 
                        decimal monPIAmount, 
                        decimal monInvoiceAmount, 
                        string strLoanAccNames, 
                        string strCDAccountNumber, 
                        string strUnitShortName, 
                        System.DateTime dteLCDate, 
                        string strCurrency, 
                        string strPaymentModeName, 
                        string strNarrationFC1, 
                        string strNarrationFC2, 
                        string strAdviceNumber) {
                FunCommercialLetterFCRow rowFunCommercialLetterFCRow = ((FunCommercialLetterFCRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        strBankName,
                        strBranchName,
                        strBranchAdd1,
                        strBranchAdd2,
                        strLCNumber,
                        monPIAmount,
                        monInvoiceAmount,
                        strLoanAccNames,
                        strCDAccountNumber,
                        strUnitShortName,
                        dteLCDate,
                        strCurrency,
                        strPaymentModeName,
                        strNarrationFC1,
                        strNarrationFC2,
                        strAdviceNumber};
                rowFunCommercialLetterFCRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFunCommercialLetterFCRow);
                return rowFunCommercialLetterFCRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FunCommercialLetterFCDataTable cln = ((FunCommercialLetterFCDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FunCommercialLetterFCDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnstrBankName = base.Columns["strBankName"];
                this.columnstrBranchName = base.Columns["strBranchName"];
                this.columnstrBranchAdd1 = base.Columns["strBranchAdd1"];
                this.columnstrBranchAdd2 = base.Columns["strBranchAdd2"];
                this.columnstrLCNumber = base.Columns["strLCNumber"];
                this.columnmonPIAmount = base.Columns["monPIAmount"];
                this.columnmonInvoiceAmount = base.Columns["monInvoiceAmount"];
                this.columnstrLoanAccNames = base.Columns["strLoanAccNames"];
                this.columnstrCDAccountNumber = base.Columns["strCDAccountNumber"];
                this.columnstrUnitShortName = base.Columns["strUnitShortName"];
                this.columndteLCDate = base.Columns["dteLCDate"];
                this.columnstrCurrency = base.Columns["strCurrency"];
                this.columnstrPaymentModeName = base.Columns["strPaymentModeName"];
                this.columnstrNarrationFC1 = base.Columns["strNarrationFC1"];
                this.columnstrNarrationFC2 = base.Columns["strNarrationFC2"];
                this.columnstrAdviceNumber = base.Columns["strAdviceNumber"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnstrBankName = new global::System.Data.DataColumn("strBankName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrBankName);
                this.columnstrBranchName = new global::System.Data.DataColumn("strBranchName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrBranchName);
                this.columnstrBranchAdd1 = new global::System.Data.DataColumn("strBranchAdd1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrBranchAdd1);
                this.columnstrBranchAdd2 = new global::System.Data.DataColumn("strBranchAdd2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrBranchAdd2);
                this.columnstrLCNumber = new global::System.Data.DataColumn("strLCNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrLCNumber);
                this.columnmonPIAmount = new global::System.Data.DataColumn("monPIAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmonPIAmount);
                this.columnmonInvoiceAmount = new global::System.Data.DataColumn("monInvoiceAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmonInvoiceAmount);
                this.columnstrLoanAccNames = new global::System.Data.DataColumn("strLoanAccNames", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrLoanAccNames);
                this.columnstrCDAccountNumber = new global::System.Data.DataColumn("strCDAccountNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrCDAccountNumber);
                this.columnstrUnitShortName = new global::System.Data.DataColumn("strUnitShortName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrUnitShortName);
                this.columndteLCDate = new global::System.Data.DataColumn("dteLCDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndteLCDate);
                this.columnstrCurrency = new global::System.Data.DataColumn("strCurrency", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrCurrency);
                this.columnstrPaymentModeName = new global::System.Data.DataColumn("strPaymentModeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrPaymentModeName);
                this.columnstrNarrationFC1 = new global::System.Data.DataColumn("strNarrationFC1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrNarrationFC1);
                this.columnstrNarrationFC2 = new global::System.Data.DataColumn("strNarrationFC2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrNarrationFC2);
                this.columnstrAdviceNumber = new global::System.Data.DataColumn("strAdviceNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrAdviceNumber);
                this.columnstrBankName.MaxLength = 1000;
                this.columnstrBranchName.MaxLength = 1000;
                this.columnstrBranchAdd1.MaxLength = 1000;
                this.columnstrBranchAdd2.MaxLength = 1000;
                this.columnstrLCNumber.MaxLength = 1000;
                this.columnstrLoanAccNames.MaxLength = 1000;
                this.columnstrCDAccountNumber.MaxLength = 1000;
                this.columnstrUnitShortName.MaxLength = 100;
                this.columnstrCurrency.MaxLength = 1000;
                this.columnstrPaymentModeName.MaxLength = 100;
                this.columnstrNarrationFC1.MaxLength = 100;
                this.columnstrNarrationFC2.MaxLength = 100;
                this.columnstrAdviceNumber.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FunCommercialLetterFCRow NewFunCommercialLetterFCRow() {
                return ((FunCommercialLetterFCRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FunCommercialLetterFCRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FunCommercialLetterFCRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FunCommercialLetterFCRowChanged != null)) {
                    this.FunCommercialLetterFCRowChanged(this, new FunCommercialLetterFCRowChangeEvent(((FunCommercialLetterFCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FunCommercialLetterFCRowChanging != null)) {
                    this.FunCommercialLetterFCRowChanging(this, new FunCommercialLetterFCRowChangeEvent(((FunCommercialLetterFCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FunCommercialLetterFCRowDeleted != null)) {
                    this.FunCommercialLetterFCRowDeleted(this, new FunCommercialLetterFCRowChangeEvent(((FunCommercialLetterFCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FunCommercialLetterFCRowDeleting != null)) {
                    this.FunCommercialLetterFCRowDeleting(this, new FunCommercialLetterFCRowChangeEvent(((FunCommercialLetterFCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveFunCommercialLetterFCRow(FunCommercialLetterFCRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LetterTDS ds = new LetterTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FunCommercialLetterFCDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FunCommercialLetterCoptDocumentDataTable : global::System.Data.TypedTableBase<FunCommercialLetterCoptDocumentRow> {
            
            private global::System.Data.DataColumn columnstrBankName;
            
            private global::System.Data.DataColumn columnstrBranchName;
            
            private global::System.Data.DataColumn columnstrBranchAdd1;
            
            private global::System.Data.DataColumn columnstrBranchAdd2;
            
            private global::System.Data.DataColumn columnstrLCNumber;
            
            private global::System.Data.DataColumn columnmonPIAmount;
            
            private global::System.Data.DataColumn columnmonInvoiceAmount;
            
            private global::System.Data.DataColumn columnstrLoanAccNames;
            
            private global::System.Data.DataColumn columnstrCDAccountNumber;
            
            private global::System.Data.DataColumn columnstrUnitShortName;
            
            private global::System.Data.DataColumn columndteLCDate;
            
            private global::System.Data.DataColumn columnstrCurrency;
            
            private global::System.Data.DataColumn columnstrPaymentModeName;
            
            private global::System.Data.DataColumn columnstrDisPortName;
            
            private global::System.Data.DataColumn columnstrDasignation;
            
            private global::System.Data.DataColumn columnstrAdviceNumber;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FunCommercialLetterCoptDocumentDataTable() {
                this.TableName = "FunCommercialLetterCoptDocument";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FunCommercialLetterCoptDocumentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected FunCommercialLetterCoptDocumentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strBankNameColumn {
                get {
                    return this.columnstrBankName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strBranchNameColumn {
                get {
                    return this.columnstrBranchName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strBranchAdd1Column {
                get {
                    return this.columnstrBranchAdd1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strBranchAdd2Column {
                get {
                    return this.columnstrBranchAdd2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strLCNumberColumn {
                get {
                    return this.columnstrLCNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn monPIAmountColumn {
                get {
                    return this.columnmonPIAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn monInvoiceAmountColumn {
                get {
                    return this.columnmonInvoiceAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strLoanAccNamesColumn {
                get {
                    return this.columnstrLoanAccNames;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strCDAccountNumberColumn {
                get {
                    return this.columnstrCDAccountNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strUnitShortNameColumn {
                get {
                    return this.columnstrUnitShortName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dteLCDateColumn {
                get {
                    return this.columndteLCDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strCurrencyColumn {
                get {
                    return this.columnstrCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strPaymentModeNameColumn {
                get {
                    return this.columnstrPaymentModeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strDisPortNameColumn {
                get {
                    return this.columnstrDisPortName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strDasignationColumn {
                get {
                    return this.columnstrDasignation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strAdviceNumberColumn {
                get {
                    return this.columnstrAdviceNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FunCommercialLetterCoptDocumentRow this[int index] {
                get {
                    return ((FunCommercialLetterCoptDocumentRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FunCommercialLetterCoptDocumentRowChangeEventHandler FunCommercialLetterCoptDocumentRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FunCommercialLetterCoptDocumentRowChangeEventHandler FunCommercialLetterCoptDocumentRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FunCommercialLetterCoptDocumentRowChangeEventHandler FunCommercialLetterCoptDocumentRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FunCommercialLetterCoptDocumentRowChangeEventHandler FunCommercialLetterCoptDocumentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddFunCommercialLetterCoptDocumentRow(FunCommercialLetterCoptDocumentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FunCommercialLetterCoptDocumentRow AddFunCommercialLetterCoptDocumentRow(
                        string strBankName, 
                        string strBranchName, 
                        string strBranchAdd1, 
                        string strBranchAdd2, 
                        string strLCNumber, 
                        decimal monPIAmount, 
                        decimal monInvoiceAmount, 
                        string strLoanAccNames, 
                        string strCDAccountNumber, 
                        string strUnitShortName, 
                        System.DateTime dteLCDate, 
                        string strCurrency, 
                        string strPaymentModeName, 
                        string strDisPortName, 
                        string strDasignation, 
                        string strAdviceNumber) {
                FunCommercialLetterCoptDocumentRow rowFunCommercialLetterCoptDocumentRow = ((FunCommercialLetterCoptDocumentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        strBankName,
                        strBranchName,
                        strBranchAdd1,
                        strBranchAdd2,
                        strLCNumber,
                        monPIAmount,
                        monInvoiceAmount,
                        strLoanAccNames,
                        strCDAccountNumber,
                        strUnitShortName,
                        dteLCDate,
                        strCurrency,
                        strPaymentModeName,
                        strDisPortName,
                        strDasignation,
                        strAdviceNumber};
                rowFunCommercialLetterCoptDocumentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFunCommercialLetterCoptDocumentRow);
                return rowFunCommercialLetterCoptDocumentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FunCommercialLetterCoptDocumentDataTable cln = ((FunCommercialLetterCoptDocumentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FunCommercialLetterCoptDocumentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnstrBankName = base.Columns["strBankName"];
                this.columnstrBranchName = base.Columns["strBranchName"];
                this.columnstrBranchAdd1 = base.Columns["strBranchAdd1"];
                this.columnstrBranchAdd2 = base.Columns["strBranchAdd2"];
                this.columnstrLCNumber = base.Columns["strLCNumber"];
                this.columnmonPIAmount = base.Columns["monPIAmount"];
                this.columnmonInvoiceAmount = base.Columns["monInvoiceAmount"];
                this.columnstrLoanAccNames = base.Columns["strLoanAccNames"];
                this.columnstrCDAccountNumber = base.Columns["strCDAccountNumber"];
                this.columnstrUnitShortName = base.Columns["strUnitShortName"];
                this.columndteLCDate = base.Columns["dteLCDate"];
                this.columnstrCurrency = base.Columns["strCurrency"];
                this.columnstrPaymentModeName = base.Columns["strPaymentModeName"];
                this.columnstrDisPortName = base.Columns["strDisPortName"];
                this.columnstrDasignation = base.Columns["strDasignation"];
                this.columnstrAdviceNumber = base.Columns["strAdviceNumber"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnstrBankName = new global::System.Data.DataColumn("strBankName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrBankName);
                this.columnstrBranchName = new global::System.Data.DataColumn("strBranchName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrBranchName);
                this.columnstrBranchAdd1 = new global::System.Data.DataColumn("strBranchAdd1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrBranchAdd1);
                this.columnstrBranchAdd2 = new global::System.Data.DataColumn("strBranchAdd2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrBranchAdd2);
                this.columnstrLCNumber = new global::System.Data.DataColumn("strLCNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrLCNumber);
                this.columnmonPIAmount = new global::System.Data.DataColumn("monPIAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmonPIAmount);
                this.columnmonInvoiceAmount = new global::System.Data.DataColumn("monInvoiceAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmonInvoiceAmount);
                this.columnstrLoanAccNames = new global::System.Data.DataColumn("strLoanAccNames", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrLoanAccNames);
                this.columnstrCDAccountNumber = new global::System.Data.DataColumn("strCDAccountNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrCDAccountNumber);
                this.columnstrUnitShortName = new global::System.Data.DataColumn("strUnitShortName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrUnitShortName);
                this.columndteLCDate = new global::System.Data.DataColumn("dteLCDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndteLCDate);
                this.columnstrCurrency = new global::System.Data.DataColumn("strCurrency", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrCurrency);
                this.columnstrPaymentModeName = new global::System.Data.DataColumn("strPaymentModeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrPaymentModeName);
                this.columnstrDisPortName = new global::System.Data.DataColumn("strDisPortName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrDisPortName);
                this.columnstrDasignation = new global::System.Data.DataColumn("strDasignation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrDasignation);
                this.columnstrAdviceNumber = new global::System.Data.DataColumn("strAdviceNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrAdviceNumber);
                this.columnstrBankName.MaxLength = 1000;
                this.columnstrBranchName.MaxLength = 1000;
                this.columnstrBranchAdd1.MaxLength = 1000;
                this.columnstrBranchAdd2.MaxLength = 1000;
                this.columnstrLCNumber.MaxLength = 1000;
                this.columnstrLoanAccNames.MaxLength = 1000;
                this.columnstrCDAccountNumber.MaxLength = 1000;
                this.columnstrUnitShortName.MaxLength = 100;
                this.columnstrCurrency.MaxLength = 1000;
                this.columnstrPaymentModeName.MaxLength = 100;
                this.columnstrDisPortName.MaxLength = 1000;
                this.columnstrDasignation.MaxLength = 1000;
                this.columnstrAdviceNumber.MaxLength = 1000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FunCommercialLetterCoptDocumentRow NewFunCommercialLetterCoptDocumentRow() {
                return ((FunCommercialLetterCoptDocumentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FunCommercialLetterCoptDocumentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FunCommercialLetterCoptDocumentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FunCommercialLetterCoptDocumentRowChanged != null)) {
                    this.FunCommercialLetterCoptDocumentRowChanged(this, new FunCommercialLetterCoptDocumentRowChangeEvent(((FunCommercialLetterCoptDocumentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FunCommercialLetterCoptDocumentRowChanging != null)) {
                    this.FunCommercialLetterCoptDocumentRowChanging(this, new FunCommercialLetterCoptDocumentRowChangeEvent(((FunCommercialLetterCoptDocumentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FunCommercialLetterCoptDocumentRowDeleted != null)) {
                    this.FunCommercialLetterCoptDocumentRowDeleted(this, new FunCommercialLetterCoptDocumentRowChangeEvent(((FunCommercialLetterCoptDocumentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FunCommercialLetterCoptDocumentRowDeleting != null)) {
                    this.FunCommercialLetterCoptDocumentRowDeleting(this, new FunCommercialLetterCoptDocumentRowChangeEvent(((FunCommercialLetterCoptDocumentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveFunCommercialLetterCoptDocumentRow(FunCommercialLetterCoptDocumentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LetterTDS ds = new LetterTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FunCommercialLetterCoptDocumentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FunCommercialLetterCNFDataTable : global::System.Data.TypedTableBase<FunCommercialLetterCNFRow> {
            
            private global::System.Data.DataColumn columnstrBankName;
            
            private global::System.Data.DataColumn columnstrBranchName;
            
            private global::System.Data.DataColumn columnstrBranchAdd1;
            
            private global::System.Data.DataColumn columnstrBranchAdd2;
            
            private global::System.Data.DataColumn columnstrLCNumber;
            
            private global::System.Data.DataColumn columnmonPIAmount;
            
            private global::System.Data.DataColumn columnmonInvoiceAmount;
            
            private global::System.Data.DataColumn columnstrLoanAccNames;
            
            private global::System.Data.DataColumn columnstrCDAccountNumber;
            
            private global::System.Data.DataColumn columnstrUnitShortName;
            
            private global::System.Data.DataColumn columndteLCDate;
            
            private global::System.Data.DataColumn columnstrCurrency;
            
            private global::System.Data.DataColumn columnstrPaymentModeName;
            
            private global::System.Data.DataColumn columnstrNarrationCNF;
            
            private global::System.Data.DataColumn columnstrCNFName;
            
            private global::System.Data.DataColumn columnstrCNFAddress;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FunCommercialLetterCNFDataTable() {
                this.TableName = "FunCommercialLetterCNF";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FunCommercialLetterCNFDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected FunCommercialLetterCNFDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strBankNameColumn {
                get {
                    return this.columnstrBankName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strBranchNameColumn {
                get {
                    return this.columnstrBranchName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strBranchAdd1Column {
                get {
                    return this.columnstrBranchAdd1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strBranchAdd2Column {
                get {
                    return this.columnstrBranchAdd2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strLCNumberColumn {
                get {
                    return this.columnstrLCNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn monPIAmountColumn {
                get {
                    return this.columnmonPIAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn monInvoiceAmountColumn {
                get {
                    return this.columnmonInvoiceAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strLoanAccNamesColumn {
                get {
                    return this.columnstrLoanAccNames;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strCDAccountNumberColumn {
                get {
                    return this.columnstrCDAccountNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strUnitShortNameColumn {
                get {
                    return this.columnstrUnitShortName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dteLCDateColumn {
                get {
                    return this.columndteLCDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strCurrencyColumn {
                get {
                    return this.columnstrCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strPaymentModeNameColumn {
                get {
                    return this.columnstrPaymentModeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strNarrationCNFColumn {
                get {
                    return this.columnstrNarrationCNF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strCNFNameColumn {
                get {
                    return this.columnstrCNFName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn strCNFAddressColumn {
                get {
                    return this.columnstrCNFAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FunCommercialLetterCNFRow this[int index] {
                get {
                    return ((FunCommercialLetterCNFRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FunCommercialLetterCNFRowChangeEventHandler FunCommercialLetterCNFRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FunCommercialLetterCNFRowChangeEventHandler FunCommercialLetterCNFRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FunCommercialLetterCNFRowChangeEventHandler FunCommercialLetterCNFRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FunCommercialLetterCNFRowChangeEventHandler FunCommercialLetterCNFRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddFunCommercialLetterCNFRow(FunCommercialLetterCNFRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FunCommercialLetterCNFRow AddFunCommercialLetterCNFRow(
                        string strBankName, 
                        string strBranchName, 
                        string strBranchAdd1, 
                        string strBranchAdd2, 
                        string strLCNumber, 
                        decimal monPIAmount, 
                        decimal monInvoiceAmount, 
                        string strLoanAccNames, 
                        string strCDAccountNumber, 
                        string strUnitShortName, 
                        System.DateTime dteLCDate, 
                        string strCurrency, 
                        string strPaymentModeName, 
                        string strNarrationCNF, 
                        string strCNFName, 
                        string strCNFAddress) {
                FunCommercialLetterCNFRow rowFunCommercialLetterCNFRow = ((FunCommercialLetterCNFRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        strBankName,
                        strBranchName,
                        strBranchAdd1,
                        strBranchAdd2,
                        strLCNumber,
                        monPIAmount,
                        monInvoiceAmount,
                        strLoanAccNames,
                        strCDAccountNumber,
                        strUnitShortName,
                        dteLCDate,
                        strCurrency,
                        strPaymentModeName,
                        strNarrationCNF,
                        strCNFName,
                        strCNFAddress};
                rowFunCommercialLetterCNFRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFunCommercialLetterCNFRow);
                return rowFunCommercialLetterCNFRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FunCommercialLetterCNFDataTable cln = ((FunCommercialLetterCNFDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FunCommercialLetterCNFDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnstrBankName = base.Columns["strBankName"];
                this.columnstrBranchName = base.Columns["strBranchName"];
                this.columnstrBranchAdd1 = base.Columns["strBranchAdd1"];
                this.columnstrBranchAdd2 = base.Columns["strBranchAdd2"];
                this.columnstrLCNumber = base.Columns["strLCNumber"];
                this.columnmonPIAmount = base.Columns["monPIAmount"];
                this.columnmonInvoiceAmount = base.Columns["monInvoiceAmount"];
                this.columnstrLoanAccNames = base.Columns["strLoanAccNames"];
                this.columnstrCDAccountNumber = base.Columns["strCDAccountNumber"];
                this.columnstrUnitShortName = base.Columns["strUnitShortName"];
                this.columndteLCDate = base.Columns["dteLCDate"];
                this.columnstrCurrency = base.Columns["strCurrency"];
                this.columnstrPaymentModeName = base.Columns["strPaymentModeName"];
                this.columnstrNarrationCNF = base.Columns["strNarrationCNF"];
                this.columnstrCNFName = base.Columns["strCNFName"];
                this.columnstrCNFAddress = base.Columns["strCNFAddress"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnstrBankName = new global::System.Data.DataColumn("strBankName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrBankName);
                this.columnstrBranchName = new global::System.Data.DataColumn("strBranchName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrBranchName);
                this.columnstrBranchAdd1 = new global::System.Data.DataColumn("strBranchAdd1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrBranchAdd1);
                this.columnstrBranchAdd2 = new global::System.Data.DataColumn("strBranchAdd2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrBranchAdd2);
                this.columnstrLCNumber = new global::System.Data.DataColumn("strLCNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrLCNumber);
                this.columnmonPIAmount = new global::System.Data.DataColumn("monPIAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmonPIAmount);
                this.columnmonInvoiceAmount = new global::System.Data.DataColumn("monInvoiceAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmonInvoiceAmount);
                this.columnstrLoanAccNames = new global::System.Data.DataColumn("strLoanAccNames", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrLoanAccNames);
                this.columnstrCDAccountNumber = new global::System.Data.DataColumn("strCDAccountNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrCDAccountNumber);
                this.columnstrUnitShortName = new global::System.Data.DataColumn("strUnitShortName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrUnitShortName);
                this.columndteLCDate = new global::System.Data.DataColumn("dteLCDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndteLCDate);
                this.columnstrCurrency = new global::System.Data.DataColumn("strCurrency", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrCurrency);
                this.columnstrPaymentModeName = new global::System.Data.DataColumn("strPaymentModeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrPaymentModeName);
                this.columnstrNarrationCNF = new global::System.Data.DataColumn("strNarrationCNF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrNarrationCNF);
                this.columnstrCNFName = new global::System.Data.DataColumn("strCNFName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrCNFName);
                this.columnstrCNFAddress = new global::System.Data.DataColumn("strCNFAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrCNFAddress);
                this.columnstrBankName.MaxLength = 1000;
                this.columnstrBranchName.MaxLength = 1000;
                this.columnstrBranchAdd1.MaxLength = 1000;
                this.columnstrBranchAdd2.MaxLength = 1000;
                this.columnstrLCNumber.MaxLength = 1000;
                this.columnstrLoanAccNames.MaxLength = 1000;
                this.columnstrCDAccountNumber.MaxLength = 1000;
                this.columnstrUnitShortName.MaxLength = 100;
                this.columnstrCurrency.MaxLength = 1000;
                this.columnstrPaymentModeName.MaxLength = 100;
                this.columnstrNarrationCNF.MaxLength = 1000;
                this.columnstrCNFName.MaxLength = 1000;
                this.columnstrCNFAddress.MaxLength = 1000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FunCommercialLetterCNFRow NewFunCommercialLetterCNFRow() {
                return ((FunCommercialLetterCNFRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FunCommercialLetterCNFRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FunCommercialLetterCNFRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FunCommercialLetterCNFRowChanged != null)) {
                    this.FunCommercialLetterCNFRowChanged(this, new FunCommercialLetterCNFRowChangeEvent(((FunCommercialLetterCNFRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FunCommercialLetterCNFRowChanging != null)) {
                    this.FunCommercialLetterCNFRowChanging(this, new FunCommercialLetterCNFRowChangeEvent(((FunCommercialLetterCNFRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FunCommercialLetterCNFRowDeleted != null)) {
                    this.FunCommercialLetterCNFRowDeleted(this, new FunCommercialLetterCNFRowChangeEvent(((FunCommercialLetterCNFRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FunCommercialLetterCNFRowDeleting != null)) {
                    this.FunCommercialLetterCNFRowDeleting(this, new FunCommercialLetterCNFRowChangeEvent(((FunCommercialLetterCNFRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveFunCommercialLetterCNFRow(FunCommercialLetterCNFRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LetterTDS ds = new LetterTDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FunCommercialLetterCNFDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FunCommercialLetterOpenningRow : global::System.Data.DataRow {
            
            private FunCommercialLetterOpenningDataTable tableFunCommercialLetterOpenning;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FunCommercialLetterOpenningRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFunCommercialLetterOpenning = ((FunCommercialLetterOpenningDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strBankName {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterOpenning.strBankNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strBankName\' in table \'FunCommercialLetterOpenning\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterOpenning.strBankNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strBranchName {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterOpenning.strBranchNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strBranchName\' in table \'FunCommercialLetterOpenning\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterOpenning.strBranchNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strBranchAdd1 {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterOpenning.strBranchAdd1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strBranchAdd1\' in table \'FunCommercialLetterOpenning\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterOpenning.strBranchAdd1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strBranchAdd2 {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterOpenning.strBranchAdd2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strBranchAdd2\' in table \'FunCommercialLetterOpenning\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterOpenning.strBranchAdd2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strLCNumber {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterOpenning.strLCNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strLCNumber\' in table \'FunCommercialLetterOpenning\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterOpenning.strLCNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal monPIAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableFunCommercialLetterOpenning.monPIAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'monPIAmount\' in table \'FunCommercialLetterOpenning\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterOpenning.monPIAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal monInvoiceAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableFunCommercialLetterOpenning.monInvoiceAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'monInvoiceAmount\' in table \'FunCommercialLetterOpenning\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterOpenning.monInvoiceAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strLoanAccNames {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterOpenning.strLoanAccNamesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strLoanAccNames\' in table \'FunCommercialLetterOpenning\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterOpenning.strLoanAccNamesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strCDAccountNumber {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterOpenning.strCDAccountNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strCDAccountNumber\' in table \'FunCommercialLetterOpenning\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterOpenning.strCDAccountNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strUnitShortName {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterOpenning.strUnitShortNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strUnitShortName\' in table \'FunCommercialLetterOpenning\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterOpenning.strUnitShortNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime dteLCDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFunCommercialLetterOpenning.dteLCDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dteLCDate\' in table \'FunCommercialLetterOpenning\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterOpenning.dteLCDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strCurrency {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterOpenning.strCurrencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strCurrency\' in table \'FunCommercialLetterOpenning\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterOpenning.strCurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strPaymentModeName {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterOpenning.strPaymentModeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strPaymentModeName\' in table \'FunCommercialLetterOpenning\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterOpenning.strPaymentModeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strNarr1 {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterOpenning.strNarr1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strNarr1\' in table \'FunCommercialLetterOpenning\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterOpenning.strNarr1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strAdviceNumber {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterOpenning.strAdviceNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strAdviceNumber\' in table \'FunCommercialLetterOpenning\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterOpenning.strAdviceNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrBankNameNull() {
                return this.IsNull(this.tableFunCommercialLetterOpenning.strBankNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrBankNameNull() {
                this[this.tableFunCommercialLetterOpenning.strBankNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrBranchNameNull() {
                return this.IsNull(this.tableFunCommercialLetterOpenning.strBranchNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrBranchNameNull() {
                this[this.tableFunCommercialLetterOpenning.strBranchNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrBranchAdd1Null() {
                return this.IsNull(this.tableFunCommercialLetterOpenning.strBranchAdd1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrBranchAdd1Null() {
                this[this.tableFunCommercialLetterOpenning.strBranchAdd1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrBranchAdd2Null() {
                return this.IsNull(this.tableFunCommercialLetterOpenning.strBranchAdd2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrBranchAdd2Null() {
                this[this.tableFunCommercialLetterOpenning.strBranchAdd2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrLCNumberNull() {
                return this.IsNull(this.tableFunCommercialLetterOpenning.strLCNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrLCNumberNull() {
                this[this.tableFunCommercialLetterOpenning.strLCNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmonPIAmountNull() {
                return this.IsNull(this.tableFunCommercialLetterOpenning.monPIAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmonPIAmountNull() {
                this[this.tableFunCommercialLetterOpenning.monPIAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmonInvoiceAmountNull() {
                return this.IsNull(this.tableFunCommercialLetterOpenning.monInvoiceAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmonInvoiceAmountNull() {
                this[this.tableFunCommercialLetterOpenning.monInvoiceAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrLoanAccNamesNull() {
                return this.IsNull(this.tableFunCommercialLetterOpenning.strLoanAccNamesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrLoanAccNamesNull() {
                this[this.tableFunCommercialLetterOpenning.strLoanAccNamesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrCDAccountNumberNull() {
                return this.IsNull(this.tableFunCommercialLetterOpenning.strCDAccountNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrCDAccountNumberNull() {
                this[this.tableFunCommercialLetterOpenning.strCDAccountNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrUnitShortNameNull() {
                return this.IsNull(this.tableFunCommercialLetterOpenning.strUnitShortNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrUnitShortNameNull() {
                this[this.tableFunCommercialLetterOpenning.strUnitShortNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdteLCDateNull() {
                return this.IsNull(this.tableFunCommercialLetterOpenning.dteLCDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdteLCDateNull() {
                this[this.tableFunCommercialLetterOpenning.dteLCDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrCurrencyNull() {
                return this.IsNull(this.tableFunCommercialLetterOpenning.strCurrencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrCurrencyNull() {
                this[this.tableFunCommercialLetterOpenning.strCurrencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrPaymentModeNameNull() {
                return this.IsNull(this.tableFunCommercialLetterOpenning.strPaymentModeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrPaymentModeNameNull() {
                this[this.tableFunCommercialLetterOpenning.strPaymentModeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrNarr1Null() {
                return this.IsNull(this.tableFunCommercialLetterOpenning.strNarr1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrNarr1Null() {
                this[this.tableFunCommercialLetterOpenning.strNarr1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrAdviceNumberNull() {
                return this.IsNull(this.tableFunCommercialLetterOpenning.strAdviceNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrAdviceNumberNull() {
                this[this.tableFunCommercialLetterOpenning.strAdviceNumberColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TblCommercialLetterRow : global::System.Data.DataRow {
            
            private TblCommercialLetterDataTable tableTblCommercialLetter;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TblCommercialLetterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTblCommercialLetter = ((TblCommercialLetterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int intLetterType {
                get {
                    return ((int)(this[this.tableTblCommercialLetter.intLetterTypeColumn]));
                }
                set {
                    this[this.tableTblCommercialLetter.intLetterTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strLetterName {
                get {
                    try {
                        return ((string)(this[this.tableTblCommercialLetter.strLetterNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strLetterName\' in table \'TblCommercialLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblCommercialLetter.strLetterNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strShortName {
                get {
                    try {
                        return ((string)(this[this.tableTblCommercialLetter.strShortNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strShortName\' in table \'TblCommercialLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblCommercialLetter.strShortNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strUrlForLetterBody {
                get {
                    try {
                        return ((string)(this[this.tableTblCommercialLetter.strUrlForLetterBodyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strUrlForLetterBody\' in table \'TblCommercialLetter\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableTblCommercialLetter.strUrlForLetterBodyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrLetterNameNull() {
                return this.IsNull(this.tableTblCommercialLetter.strLetterNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrLetterNameNull() {
                this[this.tableTblCommercialLetter.strLetterNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrShortNameNull() {
                return this.IsNull(this.tableTblCommercialLetter.strShortNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrShortNameNull() {
                this[this.tableTblCommercialLetter.strShortNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrUrlForLetterBodyNull() {
                return this.IsNull(this.tableTblCommercialLetter.strUrlForLetterBodyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrUrlForLetterBodyNull() {
                this[this.tableTblCommercialLetter.strUrlForLetterBodyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FumCommercialLetterDuyPortShippingRow : global::System.Data.DataRow {
            
            private FumCommercialLetterDuyPortShippingDataTable tableFumCommercialLetterDuyPortShipping;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FumCommercialLetterDuyPortShippingRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFumCommercialLetterDuyPortShipping = ((FumCommercialLetterDuyPortShippingDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strBankName {
                get {
                    try {
                        return ((string)(this[this.tableFumCommercialLetterDuyPortShipping.strBankNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strBankName\' in table \'FumCommercialLetterDuyPortShipping\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFumCommercialLetterDuyPortShipping.strBankNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strBranchName {
                get {
                    try {
                        return ((string)(this[this.tableFumCommercialLetterDuyPortShipping.strBranchNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strBranchName\' in table \'FumCommercialLetterDuyPortShipping" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFumCommercialLetterDuyPortShipping.strBranchNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strBranchAdd1 {
                get {
                    try {
                        return ((string)(this[this.tableFumCommercialLetterDuyPortShipping.strBranchAdd1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strBranchAdd1\' in table \'FumCommercialLetterDuyPortShipping" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFumCommercialLetterDuyPortShipping.strBranchAdd1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strBranchAdd2 {
                get {
                    try {
                        return ((string)(this[this.tableFumCommercialLetterDuyPortShipping.strBranchAdd2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strBranchAdd2\' in table \'FumCommercialLetterDuyPortShipping" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFumCommercialLetterDuyPortShipping.strBranchAdd2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strLCNumber {
                get {
                    try {
                        return ((string)(this[this.tableFumCommercialLetterDuyPortShipping.strLCNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strLCNumber\' in table \'FumCommercialLetterDuyPortShipping\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFumCommercialLetterDuyPortShipping.strLCNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal monPIAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableFumCommercialLetterDuyPortShipping.monPIAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'monPIAmount\' in table \'FumCommercialLetterDuyPortShipping\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFumCommercialLetterDuyPortShipping.monPIAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal monInvoiceAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableFumCommercialLetterDuyPortShipping.monInvoiceAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'monInvoiceAmount\' in table \'FumCommercialLetterDuyPortShipp" +
                                "ing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFumCommercialLetterDuyPortShipping.monInvoiceAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strLoanAccNames {
                get {
                    try {
                        return ((string)(this[this.tableFumCommercialLetterDuyPortShipping.strLoanAccNamesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strLoanAccNames\' in table \'FumCommercialLetterDuyPortShippi" +
                                "ng\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFumCommercialLetterDuyPortShipping.strLoanAccNamesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strCDAccountNumber {
                get {
                    try {
                        return ((string)(this[this.tableFumCommercialLetterDuyPortShipping.strCDAccountNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strCDAccountNumber\' in table \'FumCommercialLetterDuyPortShi" +
                                "pping\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFumCommercialLetterDuyPortShipping.strCDAccountNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strUnitShortName {
                get {
                    try {
                        return ((string)(this[this.tableFumCommercialLetterDuyPortShipping.strUnitShortNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strUnitShortName\' in table \'FumCommercialLetterDuyPortShipp" +
                                "ing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFumCommercialLetterDuyPortShipping.strUnitShortNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime dteLCDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFumCommercialLetterDuyPortShipping.dteLCDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dteLCDate\' in table \'FumCommercialLetterDuyPortShipping\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableFumCommercialLetterDuyPortShipping.dteLCDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strCurrency {
                get {
                    try {
                        return ((string)(this[this.tableFumCommercialLetterDuyPortShipping.strCurrencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strCurrency\' in table \'FumCommercialLetterDuyPortShipping\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFumCommercialLetterDuyPortShipping.strCurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strPaymentModeName {
                get {
                    try {
                        return ((string)(this[this.tableFumCommercialLetterDuyPortShipping.strPaymentModeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strPaymentModeName\' in table \'FumCommercialLetterDuyPortShi" +
                                "pping\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFumCommercialLetterDuyPortShipping.strPaymentModeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strBankServiceType {
                get {
                    try {
                        return ((string)(this[this.tableFumCommercialLetterDuyPortShipping.strBankServiceTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strBankServiceType\' in table \'FumCommercialLetterDuyPortShi" +
                                "pping\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFumCommercialLetterDuyPortShipping.strBankServiceTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal monTotalAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableFumCommercialLetterDuyPortShipping.monTotalAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'monTotalAmount\' in table \'FumCommercialLetterDuyPortShippin" +
                                "g\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFumCommercialLetterDuyPortShipping.monTotalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal monDutyAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableFumCommercialLetterDuyPortShipping.monDutyAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'monDutyAmount\' in table \'FumCommercialLetterDuyPortShipping" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFumCommercialLetterDuyPortShipping.monDutyAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal monPortDue {
                get {
                    try {
                        return ((decimal)(this[this.tableFumCommercialLetterDuyPortShipping.monPortDueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'monPortDue\' in table \'FumCommercialLetterDuyPortShipping\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableFumCommercialLetterDuyPortShipping.monPortDueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal monShippingDue {
                get {
                    try {
                        return ((decimal)(this[this.tableFumCommercialLetterDuyPortShipping.monShippingDueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'monShippingDue\' in table \'FumCommercialLetterDuyPortShippin" +
                                "g\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFumCommercialLetterDuyPortShipping.monShippingDueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strAdviceNumber {
                get {
                    try {
                        return ((string)(this[this.tableFumCommercialLetterDuyPortShipping.strAdviceNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strAdviceNumber\' in table \'FumCommercialLetterDuyPortShippi" +
                                "ng\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFumCommercialLetterDuyPortShipping.strAdviceNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrBankNameNull() {
                return this.IsNull(this.tableFumCommercialLetterDuyPortShipping.strBankNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrBankNameNull() {
                this[this.tableFumCommercialLetterDuyPortShipping.strBankNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrBranchNameNull() {
                return this.IsNull(this.tableFumCommercialLetterDuyPortShipping.strBranchNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrBranchNameNull() {
                this[this.tableFumCommercialLetterDuyPortShipping.strBranchNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrBranchAdd1Null() {
                return this.IsNull(this.tableFumCommercialLetterDuyPortShipping.strBranchAdd1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrBranchAdd1Null() {
                this[this.tableFumCommercialLetterDuyPortShipping.strBranchAdd1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrBranchAdd2Null() {
                return this.IsNull(this.tableFumCommercialLetterDuyPortShipping.strBranchAdd2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrBranchAdd2Null() {
                this[this.tableFumCommercialLetterDuyPortShipping.strBranchAdd2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrLCNumberNull() {
                return this.IsNull(this.tableFumCommercialLetterDuyPortShipping.strLCNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrLCNumberNull() {
                this[this.tableFumCommercialLetterDuyPortShipping.strLCNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmonPIAmountNull() {
                return this.IsNull(this.tableFumCommercialLetterDuyPortShipping.monPIAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmonPIAmountNull() {
                this[this.tableFumCommercialLetterDuyPortShipping.monPIAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmonInvoiceAmountNull() {
                return this.IsNull(this.tableFumCommercialLetterDuyPortShipping.monInvoiceAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmonInvoiceAmountNull() {
                this[this.tableFumCommercialLetterDuyPortShipping.monInvoiceAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrLoanAccNamesNull() {
                return this.IsNull(this.tableFumCommercialLetterDuyPortShipping.strLoanAccNamesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrLoanAccNamesNull() {
                this[this.tableFumCommercialLetterDuyPortShipping.strLoanAccNamesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrCDAccountNumberNull() {
                return this.IsNull(this.tableFumCommercialLetterDuyPortShipping.strCDAccountNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrCDAccountNumberNull() {
                this[this.tableFumCommercialLetterDuyPortShipping.strCDAccountNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrUnitShortNameNull() {
                return this.IsNull(this.tableFumCommercialLetterDuyPortShipping.strUnitShortNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrUnitShortNameNull() {
                this[this.tableFumCommercialLetterDuyPortShipping.strUnitShortNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdteLCDateNull() {
                return this.IsNull(this.tableFumCommercialLetterDuyPortShipping.dteLCDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdteLCDateNull() {
                this[this.tableFumCommercialLetterDuyPortShipping.dteLCDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrCurrencyNull() {
                return this.IsNull(this.tableFumCommercialLetterDuyPortShipping.strCurrencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrCurrencyNull() {
                this[this.tableFumCommercialLetterDuyPortShipping.strCurrencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrPaymentModeNameNull() {
                return this.IsNull(this.tableFumCommercialLetterDuyPortShipping.strPaymentModeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrPaymentModeNameNull() {
                this[this.tableFumCommercialLetterDuyPortShipping.strPaymentModeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrBankServiceTypeNull() {
                return this.IsNull(this.tableFumCommercialLetterDuyPortShipping.strBankServiceTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrBankServiceTypeNull() {
                this[this.tableFumCommercialLetterDuyPortShipping.strBankServiceTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmonTotalAmountNull() {
                return this.IsNull(this.tableFumCommercialLetterDuyPortShipping.monTotalAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmonTotalAmountNull() {
                this[this.tableFumCommercialLetterDuyPortShipping.monTotalAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmonDutyAmountNull() {
                return this.IsNull(this.tableFumCommercialLetterDuyPortShipping.monDutyAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmonDutyAmountNull() {
                this[this.tableFumCommercialLetterDuyPortShipping.monDutyAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmonPortDueNull() {
                return this.IsNull(this.tableFumCommercialLetterDuyPortShipping.monPortDueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmonPortDueNull() {
                this[this.tableFumCommercialLetterDuyPortShipping.monPortDueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmonShippingDueNull() {
                return this.IsNull(this.tableFumCommercialLetterDuyPortShipping.monShippingDueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmonShippingDueNull() {
                this[this.tableFumCommercialLetterDuyPortShipping.monShippingDueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrAdviceNumberNull() {
                return this.IsNull(this.tableFumCommercialLetterDuyPortShipping.strAdviceNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrAdviceNumberNull() {
                this[this.tableFumCommercialLetterDuyPortShipping.strAdviceNumberColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FunCommercialLetterFCRow : global::System.Data.DataRow {
            
            private FunCommercialLetterFCDataTable tableFunCommercialLetterFC;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FunCommercialLetterFCRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFunCommercialLetterFC = ((FunCommercialLetterFCDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strBankName {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterFC.strBankNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strBankName\' in table \'FunCommercialLetterFC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterFC.strBankNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strBranchName {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterFC.strBranchNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strBranchName\' in table \'FunCommercialLetterFC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterFC.strBranchNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strBranchAdd1 {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterFC.strBranchAdd1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strBranchAdd1\' in table \'FunCommercialLetterFC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterFC.strBranchAdd1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strBranchAdd2 {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterFC.strBranchAdd2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strBranchAdd2\' in table \'FunCommercialLetterFC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterFC.strBranchAdd2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strLCNumber {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterFC.strLCNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strLCNumber\' in table \'FunCommercialLetterFC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterFC.strLCNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal monPIAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableFunCommercialLetterFC.monPIAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'monPIAmount\' in table \'FunCommercialLetterFC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterFC.monPIAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal monInvoiceAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableFunCommercialLetterFC.monInvoiceAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'monInvoiceAmount\' in table \'FunCommercialLetterFC\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterFC.monInvoiceAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strLoanAccNames {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterFC.strLoanAccNamesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strLoanAccNames\' in table \'FunCommercialLetterFC\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterFC.strLoanAccNamesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strCDAccountNumber {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterFC.strCDAccountNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strCDAccountNumber\' in table \'FunCommercialLetterFC\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterFC.strCDAccountNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strUnitShortName {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterFC.strUnitShortNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strUnitShortName\' in table \'FunCommercialLetterFC\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterFC.strUnitShortNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime dteLCDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFunCommercialLetterFC.dteLCDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dteLCDate\' in table \'FunCommercialLetterFC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterFC.dteLCDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strCurrency {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterFC.strCurrencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strCurrency\' in table \'FunCommercialLetterFC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterFC.strCurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strPaymentModeName {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterFC.strPaymentModeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strPaymentModeName\' in table \'FunCommercialLetterFC\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterFC.strPaymentModeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strNarrationFC1 {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterFC.strNarrationFC1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strNarrationFC1\' in table \'FunCommercialLetterFC\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterFC.strNarrationFC1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strNarrationFC2 {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterFC.strNarrationFC2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strNarrationFC2\' in table \'FunCommercialLetterFC\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterFC.strNarrationFC2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strAdviceNumber {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterFC.strAdviceNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strAdviceNumber\' in table \'FunCommercialLetterFC\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterFC.strAdviceNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrBankNameNull() {
                return this.IsNull(this.tableFunCommercialLetterFC.strBankNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrBankNameNull() {
                this[this.tableFunCommercialLetterFC.strBankNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrBranchNameNull() {
                return this.IsNull(this.tableFunCommercialLetterFC.strBranchNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrBranchNameNull() {
                this[this.tableFunCommercialLetterFC.strBranchNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrBranchAdd1Null() {
                return this.IsNull(this.tableFunCommercialLetterFC.strBranchAdd1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrBranchAdd1Null() {
                this[this.tableFunCommercialLetterFC.strBranchAdd1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrBranchAdd2Null() {
                return this.IsNull(this.tableFunCommercialLetterFC.strBranchAdd2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrBranchAdd2Null() {
                this[this.tableFunCommercialLetterFC.strBranchAdd2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrLCNumberNull() {
                return this.IsNull(this.tableFunCommercialLetterFC.strLCNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrLCNumberNull() {
                this[this.tableFunCommercialLetterFC.strLCNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmonPIAmountNull() {
                return this.IsNull(this.tableFunCommercialLetterFC.monPIAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmonPIAmountNull() {
                this[this.tableFunCommercialLetterFC.monPIAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmonInvoiceAmountNull() {
                return this.IsNull(this.tableFunCommercialLetterFC.monInvoiceAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmonInvoiceAmountNull() {
                this[this.tableFunCommercialLetterFC.monInvoiceAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrLoanAccNamesNull() {
                return this.IsNull(this.tableFunCommercialLetterFC.strLoanAccNamesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrLoanAccNamesNull() {
                this[this.tableFunCommercialLetterFC.strLoanAccNamesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrCDAccountNumberNull() {
                return this.IsNull(this.tableFunCommercialLetterFC.strCDAccountNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrCDAccountNumberNull() {
                this[this.tableFunCommercialLetterFC.strCDAccountNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrUnitShortNameNull() {
                return this.IsNull(this.tableFunCommercialLetterFC.strUnitShortNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrUnitShortNameNull() {
                this[this.tableFunCommercialLetterFC.strUnitShortNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdteLCDateNull() {
                return this.IsNull(this.tableFunCommercialLetterFC.dteLCDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdteLCDateNull() {
                this[this.tableFunCommercialLetterFC.dteLCDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrCurrencyNull() {
                return this.IsNull(this.tableFunCommercialLetterFC.strCurrencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrCurrencyNull() {
                this[this.tableFunCommercialLetterFC.strCurrencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrPaymentModeNameNull() {
                return this.IsNull(this.tableFunCommercialLetterFC.strPaymentModeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrPaymentModeNameNull() {
                this[this.tableFunCommercialLetterFC.strPaymentModeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrNarrationFC1Null() {
                return this.IsNull(this.tableFunCommercialLetterFC.strNarrationFC1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrNarrationFC1Null() {
                this[this.tableFunCommercialLetterFC.strNarrationFC1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrNarrationFC2Null() {
                return this.IsNull(this.tableFunCommercialLetterFC.strNarrationFC2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrNarrationFC2Null() {
                this[this.tableFunCommercialLetterFC.strNarrationFC2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrAdviceNumberNull() {
                return this.IsNull(this.tableFunCommercialLetterFC.strAdviceNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrAdviceNumberNull() {
                this[this.tableFunCommercialLetterFC.strAdviceNumberColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FunCommercialLetterCoptDocumentRow : global::System.Data.DataRow {
            
            private FunCommercialLetterCoptDocumentDataTable tableFunCommercialLetterCoptDocument;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FunCommercialLetterCoptDocumentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFunCommercialLetterCoptDocument = ((FunCommercialLetterCoptDocumentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strBankName {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterCoptDocument.strBankNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strBankName\' in table \'FunCommercialLetterCoptDocument\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterCoptDocument.strBankNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strBranchName {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterCoptDocument.strBranchNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strBranchName\' in table \'FunCommercialLetterCoptDocument\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterCoptDocument.strBranchNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strBranchAdd1 {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterCoptDocument.strBranchAdd1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strBranchAdd1\' in table \'FunCommercialLetterCoptDocument\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterCoptDocument.strBranchAdd1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strBranchAdd2 {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterCoptDocument.strBranchAdd2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strBranchAdd2\' in table \'FunCommercialLetterCoptDocument\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterCoptDocument.strBranchAdd2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strLCNumber {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterCoptDocument.strLCNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strLCNumber\' in table \'FunCommercialLetterCoptDocument\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterCoptDocument.strLCNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal monPIAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableFunCommercialLetterCoptDocument.monPIAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'monPIAmount\' in table \'FunCommercialLetterCoptDocument\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterCoptDocument.monPIAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal monInvoiceAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableFunCommercialLetterCoptDocument.monInvoiceAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'monInvoiceAmount\' in table \'FunCommercialLetterCoptDocument" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterCoptDocument.monInvoiceAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strLoanAccNames {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterCoptDocument.strLoanAccNamesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strLoanAccNames\' in table \'FunCommercialLetterCoptDocument\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterCoptDocument.strLoanAccNamesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strCDAccountNumber {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterCoptDocument.strCDAccountNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strCDAccountNumber\' in table \'FunCommercialLetterCoptDocume" +
                                "nt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterCoptDocument.strCDAccountNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strUnitShortName {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterCoptDocument.strUnitShortNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strUnitShortName\' in table \'FunCommercialLetterCoptDocument" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterCoptDocument.strUnitShortNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime dteLCDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFunCommercialLetterCoptDocument.dteLCDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dteLCDate\' in table \'FunCommercialLetterCoptDocument\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterCoptDocument.dteLCDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strCurrency {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterCoptDocument.strCurrencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strCurrency\' in table \'FunCommercialLetterCoptDocument\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterCoptDocument.strCurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strPaymentModeName {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterCoptDocument.strPaymentModeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strPaymentModeName\' in table \'FunCommercialLetterCoptDocume" +
                                "nt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterCoptDocument.strPaymentModeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strDisPortName {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterCoptDocument.strDisPortNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strDisPortName\' in table \'FunCommercialLetterCoptDocument\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterCoptDocument.strDisPortNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strDasignation {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterCoptDocument.strDasignationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strDasignation\' in table \'FunCommercialLetterCoptDocument\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterCoptDocument.strDasignationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strAdviceNumber {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterCoptDocument.strAdviceNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strAdviceNumber\' in table \'FunCommercialLetterCoptDocument\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterCoptDocument.strAdviceNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrBankNameNull() {
                return this.IsNull(this.tableFunCommercialLetterCoptDocument.strBankNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrBankNameNull() {
                this[this.tableFunCommercialLetterCoptDocument.strBankNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrBranchNameNull() {
                return this.IsNull(this.tableFunCommercialLetterCoptDocument.strBranchNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrBranchNameNull() {
                this[this.tableFunCommercialLetterCoptDocument.strBranchNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrBranchAdd1Null() {
                return this.IsNull(this.tableFunCommercialLetterCoptDocument.strBranchAdd1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrBranchAdd1Null() {
                this[this.tableFunCommercialLetterCoptDocument.strBranchAdd1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrBranchAdd2Null() {
                return this.IsNull(this.tableFunCommercialLetterCoptDocument.strBranchAdd2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrBranchAdd2Null() {
                this[this.tableFunCommercialLetterCoptDocument.strBranchAdd2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrLCNumberNull() {
                return this.IsNull(this.tableFunCommercialLetterCoptDocument.strLCNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrLCNumberNull() {
                this[this.tableFunCommercialLetterCoptDocument.strLCNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmonPIAmountNull() {
                return this.IsNull(this.tableFunCommercialLetterCoptDocument.monPIAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmonPIAmountNull() {
                this[this.tableFunCommercialLetterCoptDocument.monPIAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmonInvoiceAmountNull() {
                return this.IsNull(this.tableFunCommercialLetterCoptDocument.monInvoiceAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmonInvoiceAmountNull() {
                this[this.tableFunCommercialLetterCoptDocument.monInvoiceAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrLoanAccNamesNull() {
                return this.IsNull(this.tableFunCommercialLetterCoptDocument.strLoanAccNamesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrLoanAccNamesNull() {
                this[this.tableFunCommercialLetterCoptDocument.strLoanAccNamesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrCDAccountNumberNull() {
                return this.IsNull(this.tableFunCommercialLetterCoptDocument.strCDAccountNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrCDAccountNumberNull() {
                this[this.tableFunCommercialLetterCoptDocument.strCDAccountNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrUnitShortNameNull() {
                return this.IsNull(this.tableFunCommercialLetterCoptDocument.strUnitShortNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrUnitShortNameNull() {
                this[this.tableFunCommercialLetterCoptDocument.strUnitShortNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdteLCDateNull() {
                return this.IsNull(this.tableFunCommercialLetterCoptDocument.dteLCDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdteLCDateNull() {
                this[this.tableFunCommercialLetterCoptDocument.dteLCDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrCurrencyNull() {
                return this.IsNull(this.tableFunCommercialLetterCoptDocument.strCurrencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrCurrencyNull() {
                this[this.tableFunCommercialLetterCoptDocument.strCurrencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrPaymentModeNameNull() {
                return this.IsNull(this.tableFunCommercialLetterCoptDocument.strPaymentModeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrPaymentModeNameNull() {
                this[this.tableFunCommercialLetterCoptDocument.strPaymentModeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrDisPortNameNull() {
                return this.IsNull(this.tableFunCommercialLetterCoptDocument.strDisPortNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrDisPortNameNull() {
                this[this.tableFunCommercialLetterCoptDocument.strDisPortNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrDasignationNull() {
                return this.IsNull(this.tableFunCommercialLetterCoptDocument.strDasignationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrDasignationNull() {
                this[this.tableFunCommercialLetterCoptDocument.strDasignationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrAdviceNumberNull() {
                return this.IsNull(this.tableFunCommercialLetterCoptDocument.strAdviceNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrAdviceNumberNull() {
                this[this.tableFunCommercialLetterCoptDocument.strAdviceNumberColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FunCommercialLetterCNFRow : global::System.Data.DataRow {
            
            private FunCommercialLetterCNFDataTable tableFunCommercialLetterCNF;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FunCommercialLetterCNFRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFunCommercialLetterCNF = ((FunCommercialLetterCNFDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strBankName {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterCNF.strBankNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strBankName\' in table \'FunCommercialLetterCNF\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterCNF.strBankNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strBranchName {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterCNF.strBranchNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strBranchName\' in table \'FunCommercialLetterCNF\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterCNF.strBranchNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strBranchAdd1 {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterCNF.strBranchAdd1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strBranchAdd1\' in table \'FunCommercialLetterCNF\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterCNF.strBranchAdd1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strBranchAdd2 {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterCNF.strBranchAdd2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strBranchAdd2\' in table \'FunCommercialLetterCNF\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterCNF.strBranchAdd2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strLCNumber {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterCNF.strLCNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strLCNumber\' in table \'FunCommercialLetterCNF\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterCNF.strLCNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal monPIAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableFunCommercialLetterCNF.monPIAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'monPIAmount\' in table \'FunCommercialLetterCNF\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterCNF.monPIAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal monInvoiceAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableFunCommercialLetterCNF.monInvoiceAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'monInvoiceAmount\' in table \'FunCommercialLetterCNF\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterCNF.monInvoiceAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strLoanAccNames {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterCNF.strLoanAccNamesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strLoanAccNames\' in table \'FunCommercialLetterCNF\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterCNF.strLoanAccNamesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strCDAccountNumber {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterCNF.strCDAccountNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strCDAccountNumber\' in table \'FunCommercialLetterCNF\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterCNF.strCDAccountNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strUnitShortName {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterCNF.strUnitShortNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strUnitShortName\' in table \'FunCommercialLetterCNF\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterCNF.strUnitShortNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime dteLCDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFunCommercialLetterCNF.dteLCDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dteLCDate\' in table \'FunCommercialLetterCNF\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterCNF.dteLCDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strCurrency {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterCNF.strCurrencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strCurrency\' in table \'FunCommercialLetterCNF\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterCNF.strCurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strPaymentModeName {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterCNF.strPaymentModeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strPaymentModeName\' in table \'FunCommercialLetterCNF\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterCNF.strPaymentModeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strNarrationCNF {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterCNF.strNarrationCNFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strNarrationCNF\' in table \'FunCommercialLetterCNF\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterCNF.strNarrationCNFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strCNFName {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterCNF.strCNFNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strCNFName\' in table \'FunCommercialLetterCNF\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterCNF.strCNFNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string strCNFAddress {
                get {
                    try {
                        return ((string)(this[this.tableFunCommercialLetterCNF.strCNFAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'strCNFAddress\' in table \'FunCommercialLetterCNF\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFunCommercialLetterCNF.strCNFAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrBankNameNull() {
                return this.IsNull(this.tableFunCommercialLetterCNF.strBankNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrBankNameNull() {
                this[this.tableFunCommercialLetterCNF.strBankNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrBranchNameNull() {
                return this.IsNull(this.tableFunCommercialLetterCNF.strBranchNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrBranchNameNull() {
                this[this.tableFunCommercialLetterCNF.strBranchNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrBranchAdd1Null() {
                return this.IsNull(this.tableFunCommercialLetterCNF.strBranchAdd1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrBranchAdd1Null() {
                this[this.tableFunCommercialLetterCNF.strBranchAdd1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrBranchAdd2Null() {
                return this.IsNull(this.tableFunCommercialLetterCNF.strBranchAdd2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrBranchAdd2Null() {
                this[this.tableFunCommercialLetterCNF.strBranchAdd2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrLCNumberNull() {
                return this.IsNull(this.tableFunCommercialLetterCNF.strLCNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrLCNumberNull() {
                this[this.tableFunCommercialLetterCNF.strLCNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmonPIAmountNull() {
                return this.IsNull(this.tableFunCommercialLetterCNF.monPIAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmonPIAmountNull() {
                this[this.tableFunCommercialLetterCNF.monPIAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmonInvoiceAmountNull() {
                return this.IsNull(this.tableFunCommercialLetterCNF.monInvoiceAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmonInvoiceAmountNull() {
                this[this.tableFunCommercialLetterCNF.monInvoiceAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrLoanAccNamesNull() {
                return this.IsNull(this.tableFunCommercialLetterCNF.strLoanAccNamesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrLoanAccNamesNull() {
                this[this.tableFunCommercialLetterCNF.strLoanAccNamesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrCDAccountNumberNull() {
                return this.IsNull(this.tableFunCommercialLetterCNF.strCDAccountNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrCDAccountNumberNull() {
                this[this.tableFunCommercialLetterCNF.strCDAccountNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrUnitShortNameNull() {
                return this.IsNull(this.tableFunCommercialLetterCNF.strUnitShortNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrUnitShortNameNull() {
                this[this.tableFunCommercialLetterCNF.strUnitShortNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdteLCDateNull() {
                return this.IsNull(this.tableFunCommercialLetterCNF.dteLCDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdteLCDateNull() {
                this[this.tableFunCommercialLetterCNF.dteLCDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrCurrencyNull() {
                return this.IsNull(this.tableFunCommercialLetterCNF.strCurrencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrCurrencyNull() {
                this[this.tableFunCommercialLetterCNF.strCurrencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrPaymentModeNameNull() {
                return this.IsNull(this.tableFunCommercialLetterCNF.strPaymentModeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrPaymentModeNameNull() {
                this[this.tableFunCommercialLetterCNF.strPaymentModeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrNarrationCNFNull() {
                return this.IsNull(this.tableFunCommercialLetterCNF.strNarrationCNFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrNarrationCNFNull() {
                this[this.tableFunCommercialLetterCNF.strNarrationCNFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrCNFNameNull() {
                return this.IsNull(this.tableFunCommercialLetterCNF.strCNFNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrCNFNameNull() {
                this[this.tableFunCommercialLetterCNF.strCNFNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstrCNFAddressNull() {
                return this.IsNull(this.tableFunCommercialLetterCNF.strCNFAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstrCNFAddressNull() {
                this[this.tableFunCommercialLetterCNF.strCNFAddressColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class FunCommercialLetterOpenningRowChangeEvent : global::System.EventArgs {
            
            private FunCommercialLetterOpenningRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FunCommercialLetterOpenningRowChangeEvent(FunCommercialLetterOpenningRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FunCommercialLetterOpenningRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TblCommercialLetterRowChangeEvent : global::System.EventArgs {
            
            private TblCommercialLetterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TblCommercialLetterRowChangeEvent(TblCommercialLetterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TblCommercialLetterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class FumCommercialLetterDuyPortShippingRowChangeEvent : global::System.EventArgs {
            
            private FumCommercialLetterDuyPortShippingRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FumCommercialLetterDuyPortShippingRowChangeEvent(FumCommercialLetterDuyPortShippingRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FumCommercialLetterDuyPortShippingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class FunCommercialLetterFCRowChangeEvent : global::System.EventArgs {
            
            private FunCommercialLetterFCRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FunCommercialLetterFCRowChangeEvent(FunCommercialLetterFCRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FunCommercialLetterFCRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class FunCommercialLetterCoptDocumentRowChangeEvent : global::System.EventArgs {
            
            private FunCommercialLetterCoptDocumentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FunCommercialLetterCoptDocumentRowChangeEvent(FunCommercialLetterCoptDocumentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FunCommercialLetterCoptDocumentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class FunCommercialLetterCNFRowChangeEvent : global::System.EventArgs {
            
            private FunCommercialLetterCNFRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FunCommercialLetterCNFRowChangeEvent(FunCommercialLetterCNFRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FunCommercialLetterCNFRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Purchase_DAL.Commercial.LetterTDSTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FunCommercialLetterOpenningTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FunCommercialLetterOpenningTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "FunCommercialLetterOpenning";
            tableMapping.ColumnMappings.Add("strBankName", "strBankName");
            tableMapping.ColumnMappings.Add("strBranchName", "strBranchName");
            tableMapping.ColumnMappings.Add("strBranchAdd1", "strBranchAdd1");
            tableMapping.ColumnMappings.Add("strBranchAdd2", "strBranchAdd2");
            tableMapping.ColumnMappings.Add("strLCNumber", "strLCNumber");
            tableMapping.ColumnMappings.Add("monPIAmount", "monPIAmount");
            tableMapping.ColumnMappings.Add("monInvoiceAmount", "monInvoiceAmount");
            tableMapping.ColumnMappings.Add("strLoanAccNames", "strLoanAccNames");
            tableMapping.ColumnMappings.Add("strCDAccountNumber", "strCDAccountNumber");
            tableMapping.ColumnMappings.Add("strUnitShortName", "strUnitShortName");
            tableMapping.ColumnMappings.Add("dteLCDate", "dteLCDate");
            tableMapping.ColumnMappings.Add("strCurrency", "strCurrency");
            tableMapping.ColumnMappings.Add("strPaymentModeName", "strPaymentModeName");
            tableMapping.ColumnMappings.Add("strNarr1", "strNarr1");
            tableMapping.ColumnMappings.Add("strAdviceNumber", "strAdviceNumber");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Purchase_DAL.Properties.Settings.Default.ERP_PurchaseConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        strBankName, strBranchName, strBranchAdd1, strBranchAdd2, strLCNumber, monPIAmount, monInvoiceAmount, strLoanAccNames, strCDAccountNumber, 
                         strUnitShortName, dteLCDate, strCurrency, strPaymentModeName, strNarr1,strAdviceNumber
FROM            dbo.funCommercialLetterOpenning(@intLCID) AS funCommercialLetterOpenning_1";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intLCID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LetterTDS.FunCommercialLetterOpenningDataTable GetOpenningLetterData(int intLCID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(intLCID));
            LetterTDS.FunCommercialLetterOpenningDataTable dataTable = new LetterTDS.FunCommercialLetterOpenningDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TblCommercialLetterTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TblCommercialLetterTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TblCommercialLetter";
            tableMapping.ColumnMappings.Add("intLetterType", "intLetterType");
            tableMapping.ColumnMappings.Add("strLetterName", "strLetterName");
            tableMapping.ColumnMappings.Add("strShortName", "strShortName");
            tableMapping.ColumnMappings.Add("strUrlForLetterBody", "strUrlForLetterBody");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [tblCommercialLetter] WHERE (([intLetterType] = @Original_intLetterType) AND ((@IsNull_strLetterName = 1 AND [strLetterName] IS NULL) OR ([strLetterName] = @Original_strLetterName)) AND ((@IsNull_strShortName = 1 AND [strShortName] IS NULL) OR ([strShortName] = @Original_strShortName)) AND ((@IsNull_strUrlForLetterBody = 1 AND [strUrlForLetterBody] IS NULL) OR ([strUrlForLetterBody] = @Original_strUrlForLetterBody)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_intLetterType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intLetterType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_strLetterName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strLetterName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_strLetterName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strLetterName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_strShortName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strShortName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_strShortName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strShortName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_strUrlForLetterBody", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strUrlForLetterBody", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_strUrlForLetterBody", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strUrlForLetterBody", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [tblCommercialLetter] ([strLetterName], [strShortName], [strUrlForLetterBody]) VALUES (@strLetterName, @strShortName, @strUrlForLetterBody);
SELECT intLetterType, strLetterName, strShortName, strUrlForLetterBody FROM tblCommercialLetter WHERE (intLetterType = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strLetterName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strLetterName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strShortName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strShortName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strUrlForLetterBody", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strUrlForLetterBody", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [tblCommercialLetter] SET [strLetterName] = @strLetterName, [strShortName] = @strShortName, [strUrlForLetterBody] = @strUrlForLetterBody WHERE (([intLetterType] = @Original_intLetterType) AND ((@IsNull_strLetterName = 1 AND [strLetterName] IS NULL) OR ([strLetterName] = @Original_strLetterName)) AND ((@IsNull_strShortName = 1 AND [strShortName] IS NULL) OR ([strShortName] = @Original_strShortName)) AND ((@IsNull_strUrlForLetterBody = 1 AND [strUrlForLetterBody] IS NULL) OR ([strUrlForLetterBody] = @Original_strUrlForLetterBody)));
SELECT intLetterType, strLetterName, strShortName, strUrlForLetterBody FROM tblCommercialLetter WHERE (intLetterType = @intLetterType)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strLetterName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strLetterName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strShortName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strShortName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strUrlForLetterBody", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strUrlForLetterBody", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_intLetterType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "intLetterType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_strLetterName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strLetterName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_strLetterName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strLetterName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_strShortName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strShortName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_strShortName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strShortName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_strUrlForLetterBody", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strUrlForLetterBody", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_strUrlForLetterBody", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "strUrlForLetterBody", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intLetterType", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "intLetterType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Purchase_DAL.Properties.Settings.Default.ERP_PurchaseConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        *\r\nFROM            tblCommercialLetter";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LetterTDS.TblCommercialLetterDataTable GetLetterTypeData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LetterTDS.TblCommercialLetterDataTable dataTable = new LetterTDS.TblCommercialLetterDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LetterTDS.TblCommercialLetterDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(LetterTDS dataSet) {
            return this.Adapter.Update(dataSet, "TblCommercialLetter");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_intLetterType, string Original_strLetterName, string Original_strShortName, string Original_strUrlForLetterBody) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_intLetterType));
            if ((Original_strLetterName == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_strLetterName));
            }
            if ((Original_strShortName == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_strShortName));
            }
            if ((Original_strUrlForLetterBody == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_strUrlForLetterBody));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string strLetterName, string strShortName, string strUrlForLetterBody) {
            if ((strLetterName == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(strLetterName));
            }
            if ((strShortName == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(strShortName));
            }
            if ((strUrlForLetterBody == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(strUrlForLetterBody));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string strLetterName, string strShortName, string strUrlForLetterBody, int Original_intLetterType, string Original_strLetterName, string Original_strShortName, string Original_strUrlForLetterBody, int intLetterType) {
            if ((strLetterName == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(strLetterName));
            }
            if ((strShortName == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(strShortName));
            }
            if ((strUrlForLetterBody == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(strUrlForLetterBody));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_intLetterType));
            if ((Original_strLetterName == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_strLetterName));
            }
            if ((Original_strShortName == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_strShortName));
            }
            if ((Original_strUrlForLetterBody == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_strUrlForLetterBody));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(intLetterType));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string strLetterName, string strShortName, string strUrlForLetterBody, int Original_intLetterType, string Original_strLetterName, string Original_strShortName, string Original_strUrlForLetterBody) {
            return this.Update(strLetterName, strShortName, strUrlForLetterBody, Original_intLetterType, Original_strLetterName, Original_strShortName, Original_strUrlForLetterBody, Original_intLetterType);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FumCommercialLetterDuyPortShippingTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FumCommercialLetterDuyPortShippingTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "FumCommercialLetterDuyPortShipping";
            tableMapping.ColumnMappings.Add("strBankName", "strBankName");
            tableMapping.ColumnMappings.Add("strBranchName", "strBranchName");
            tableMapping.ColumnMappings.Add("strBranchAdd1", "strBranchAdd1");
            tableMapping.ColumnMappings.Add("strBranchAdd2", "strBranchAdd2");
            tableMapping.ColumnMappings.Add("strLCNumber", "strLCNumber");
            tableMapping.ColumnMappings.Add("monPIAmount", "monPIAmount");
            tableMapping.ColumnMappings.Add("monInvoiceAmount", "monInvoiceAmount");
            tableMapping.ColumnMappings.Add("strLoanAccNames", "strLoanAccNames");
            tableMapping.ColumnMappings.Add("strCDAccountNumber", "strCDAccountNumber");
            tableMapping.ColumnMappings.Add("strUnitShortName", "strUnitShortName");
            tableMapping.ColumnMappings.Add("dteLCDate", "dteLCDate");
            tableMapping.ColumnMappings.Add("strCurrency", "strCurrency");
            tableMapping.ColumnMappings.Add("strPaymentModeName", "strPaymentModeName");
            tableMapping.ColumnMappings.Add("strBankServiceType", "strBankServiceType");
            tableMapping.ColumnMappings.Add("monTotalAmount", "monTotalAmount");
            tableMapping.ColumnMappings.Add("monDutyAmount", "monDutyAmount");
            tableMapping.ColumnMappings.Add("monPortDue", "monPortDue");
            tableMapping.ColumnMappings.Add("monShippingDue", "monShippingDue");
            tableMapping.ColumnMappings.Add("strAdviceNumber", "strAdviceNumber");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Purchase_DAL.Properties.Settings.Default.ERP_PurchaseConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        strBankName, strBranchName, strBranchAdd1, strBranchAdd2, strLCNumber, monPIAmount, monInvoiceAmount, strLoanAccNames, strCDAccountNumber, 
                         strUnitShortName, dteLCDate, strCurrency, strPaymentModeName, strBankServiceType, monTotalAmount, monDutyAmount, monPortDue, monShippingDue,strAdviceNumber
FROM            dbo.fumCommercialLetterDuyPortShipping(@lcID, @shipmentID, @ysnDuty, @ysnPort, @ysnShipping) AS fumCommercialLetterDuyPortShipping_1";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@lcID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shipmentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ysnDuty", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ysnPort", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ysnShipping", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LetterTDS.FumCommercialLetterDuyPortShippingDataTable GeDPSLetterData(int lcID, int shipmentID, bool ysnDuty, bool ysnPort, bool ysnShipping) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(lcID));
            this.Adapter.SelectCommand.Parameters[1].Value = ((int)(shipmentID));
            this.Adapter.SelectCommand.Parameters[2].Value = ((bool)(ysnDuty));
            this.Adapter.SelectCommand.Parameters[3].Value = ((bool)(ysnPort));
            this.Adapter.SelectCommand.Parameters[4].Value = ((bool)(ysnShipping));
            LetterTDS.FumCommercialLetterDuyPortShippingDataTable dataTable = new LetterTDS.FumCommercialLetterDuyPortShippingDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FunCommercialLetterFCTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FunCommercialLetterFCTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "FunCommercialLetterFC";
            tableMapping.ColumnMappings.Add("strBankName", "strBankName");
            tableMapping.ColumnMappings.Add("strBranchName", "strBranchName");
            tableMapping.ColumnMappings.Add("strBranchAdd1", "strBranchAdd1");
            tableMapping.ColumnMappings.Add("strBranchAdd2", "strBranchAdd2");
            tableMapping.ColumnMappings.Add("strLCNumber", "strLCNumber");
            tableMapping.ColumnMappings.Add("monPIAmount", "monPIAmount");
            tableMapping.ColumnMappings.Add("monInvoiceAmount", "monInvoiceAmount");
            tableMapping.ColumnMappings.Add("strLoanAccNames", "strLoanAccNames");
            tableMapping.ColumnMappings.Add("strCDAccountNumber", "strCDAccountNumber");
            tableMapping.ColumnMappings.Add("strUnitShortName", "strUnitShortName");
            tableMapping.ColumnMappings.Add("dteLCDate", "dteLCDate");
            tableMapping.ColumnMappings.Add("strCurrency", "strCurrency");
            tableMapping.ColumnMappings.Add("strPaymentModeName", "strPaymentModeName");
            tableMapping.ColumnMappings.Add("strNarrationFC1", "strNarrationFC1");
            tableMapping.ColumnMappings.Add("strNarrationFC2", "strNarrationFC2");
            tableMapping.ColumnMappings.Add("strAdviceNumber", "strAdviceNumber");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Purchase_DAL.Properties.Settings.Default.ERP_PurchaseConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        strBankName, strBranchName, strBranchAdd1, strBranchAdd2, strLCNumber, monPIAmount, monInvoiceAmount, strLoanAccNames, strCDAccountNumber, 
                         strUnitShortName, dteLCDate, strCurrency, strPaymentModeName, strNarrationFC1, strNarrationFC2,strAdviceNumber
FROM            dbo.funCommercialLetterFC(@intLCID, @intShipmentID) AS funCommercialLetterFC_1";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intLCID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intShipmentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LetterTDS.FunCommercialLetterFCDataTable GetFCLetterData(int intLCID, int intShipmentID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(intLCID));
            this.Adapter.SelectCommand.Parameters[1].Value = ((int)(intShipmentID));
            LetterTDS.FunCommercialLetterFCDataTable dataTable = new LetterTDS.FunCommercialLetterFCDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FunCommercialLetterCoptDocumentTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FunCommercialLetterCoptDocumentTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "FunCommercialLetterCoptDocument";
            tableMapping.ColumnMappings.Add("strBankName", "strBankName");
            tableMapping.ColumnMappings.Add("strBranchName", "strBranchName");
            tableMapping.ColumnMappings.Add("strBranchAdd1", "strBranchAdd1");
            tableMapping.ColumnMappings.Add("strBranchAdd2", "strBranchAdd2");
            tableMapping.ColumnMappings.Add("strLCNumber", "strLCNumber");
            tableMapping.ColumnMappings.Add("monPIAmount", "monPIAmount");
            tableMapping.ColumnMappings.Add("monInvoiceAmount", "monInvoiceAmount");
            tableMapping.ColumnMappings.Add("strLoanAccNames", "strLoanAccNames");
            tableMapping.ColumnMappings.Add("strCDAccountNumber", "strCDAccountNumber");
            tableMapping.ColumnMappings.Add("strUnitShortName", "strUnitShortName");
            tableMapping.ColumnMappings.Add("dteLCDate", "dteLCDate");
            tableMapping.ColumnMappings.Add("strCurrency", "strCurrency");
            tableMapping.ColumnMappings.Add("strPaymentModeName", "strPaymentModeName");
            tableMapping.ColumnMappings.Add("strDisPortName", "strDisPortName");
            tableMapping.ColumnMappings.Add("strDasignation", "strDasignation");
            tableMapping.ColumnMappings.Add("strAdviceNumber", "strAdviceNumber");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Purchase_DAL.Properties.Settings.Default.ERP_PurchaseConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        strBankName, strBranchName, strBranchAdd1, strBranchAdd2, strLCNumber, monPIAmount, monInvoiceAmount, strLoanAccNames, strCDAccountNumber, 
                         strUnitShortName, dteLCDate, strCurrency, strPaymentModeName, strDisPortName, strDasignation, strAdviceNumber
FROM            dbo.funCommercialLetterCoptDocument(@intLDID, @intShipmentID) AS funCommercialLetterCoptDocument_1";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intLDID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@intShipmentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LetterTDS.FunCommercialLetterCoptDocumentDataTable GetCDLetterData(int intLDID, int intShipmentID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(intLDID));
            this.Adapter.SelectCommand.Parameters[1].Value = ((int)(intShipmentID));
            LetterTDS.FunCommercialLetterCoptDocumentDataTable dataTable = new LetterTDS.FunCommercialLetterCoptDocumentDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FunCommercialLetterCNFTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FunCommercialLetterCNFTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "FunCommercialLetterCNF";
            tableMapping.ColumnMappings.Add("strBankName", "strBankName");
            tableMapping.ColumnMappings.Add("strBranchName", "strBranchName");
            tableMapping.ColumnMappings.Add("strBranchAdd1", "strBranchAdd1");
            tableMapping.ColumnMappings.Add("strBranchAdd2", "strBranchAdd2");
            tableMapping.ColumnMappings.Add("strLCNumber", "strLCNumber");
            tableMapping.ColumnMappings.Add("monPIAmount", "monPIAmount");
            tableMapping.ColumnMappings.Add("monInvoiceAmount", "monInvoiceAmount");
            tableMapping.ColumnMappings.Add("strLoanAccNames", "strLoanAccNames");
            tableMapping.ColumnMappings.Add("strCDAccountNumber", "strCDAccountNumber");
            tableMapping.ColumnMappings.Add("strUnitShortName", "strUnitShortName");
            tableMapping.ColumnMappings.Add("dteLCDate", "dteLCDate");
            tableMapping.ColumnMappings.Add("strCurrency", "strCurrency");
            tableMapping.ColumnMappings.Add("strPaymentModeName", "strPaymentModeName");
            tableMapping.ColumnMappings.Add("strNarrationCNF", "strNarrationCNF");
            tableMapping.ColumnMappings.Add("strCNFName", "strCNFName");
            tableMapping.ColumnMappings.Add("strCNFAddress", "strCNFAddress");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Purchase_DAL.Properties.Settings.Default.ERP_PurchaseConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        strBankName, strBranchName, strBranchAdd1, strBranchAdd2, strLCNumber, monPIAmount, monInvoiceAmount, strLoanAccNames, strCDAccountNumber, 
                         strUnitShortName, dteLCDate, strCurrency, strPaymentModeName, strNarrationCNF, strCNFName, strCNFAddress
FROM            dbo.funCommercialLetterCNF(@lcID, @shipmentID, @cnfAgentID) AS funCommercialLetterCNF_1";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@lcID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shipmentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cnfAgentID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LetterTDS.FunCommercialLetterCNFDataTable GetCNFLetterData(int lcID, int shipmentID, int cnfAgentID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(lcID));
            this.Adapter.SelectCommand.Parameters[1].Value = ((int)(shipmentID));
            this.Adapter.SelectCommand.Parameters[2].Value = ((int)(cnfAgentID));
            LetterTDS.FunCommercialLetterCNFDataTable dataTable = new LetterTDS.FunCommercialLetterCNFDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private TblCommercialLetterTableAdapter _tblCommercialLetterTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TblCommercialLetterTableAdapter TblCommercialLetterTableAdapter {
            get {
                return this._tblCommercialLetterTableAdapter;
            }
            set {
                this._tblCommercialLetterTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._tblCommercialLetterTableAdapter != null) 
                            && (this._tblCommercialLetterTableAdapter.Connection != null))) {
                    return this._tblCommercialLetterTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._tblCommercialLetterTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(LetterTDS dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tblCommercialLetterTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TblCommercialLetter.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tblCommercialLetterTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(LetterTDS dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tblCommercialLetterTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TblCommercialLetter.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tblCommercialLetterTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(LetterTDS dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._tblCommercialLetterTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TblCommercialLetter.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tblCommercialLetterTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(LetterTDS dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._tblCommercialLetterTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tblCommercialLetterTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._tblCommercialLetterTableAdapter != null)) {
                    revertConnections.Add(this._tblCommercialLetterTableAdapter, this._tblCommercialLetterTableAdapter.Connection);
                    this._tblCommercialLetterTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tblCommercialLetterTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tblCommercialLetterTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tblCommercialLetterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tblCommercialLetterTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._tblCommercialLetterTableAdapter != null)) {
                    this._tblCommercialLetterTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tblCommercialLetterTableAdapter]));
                    this._tblCommercialLetterTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591